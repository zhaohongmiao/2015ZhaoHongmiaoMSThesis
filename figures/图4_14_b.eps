%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: ECSSD.pdf
%%Creator: Adobe Acrobat 10.1.0
%%For: zhaohongmiao
%%CreationDate: 2014/11/30, 21:44:35
%%BoundingBox: 0 0 393 637
%%HiResBoundingBox: 0 0 392.4793 636.9229
%%CropBox: 0 0 392.4793 636.9229
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 947 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2014-11-30T13:30:49Z"
   xmp:CreatorTool="OmniGraffle 6.0.1"
   xmp:ModifyDate="2014-11-30T21:44:20+08:00"
   xmp:MetadataDate="2014-11-30T21:44:20+08:00"
   pdf:Producer="Mac OS X 10.10.1 Quartz PDFContext"
   xmpMM:DocumentID="uuid:91851cb3-aa89-4126-a6cc-e0692c976676"
   xmpMM:InstanceID="uuid:74154568-1028-4e10-bbd8-089415307cfb">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>qiuxinxin</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -636.923 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 636.923 li
392.479 636.923 li
392.479 0 li
cp
clp
gsave
-504.944 667.906 mo
438.056 667.906 li
438.056 -24.0945 li
-504.944 -24.0945 li
cp
clp
-550.944 -28.0945 mo
453.056 -28.0945 li
453.056 750.906 li
-550.944 750.906 li
cp
false sop
0 0 0 0 cmyk
f
grestore
gsave
-495.884 -15.0945 mo
-47.9441 -15.0945 li
-47.9441 321.073 li
-495.884 321.073 li
cp
clp
gsave
-495.944 321.906 mo
-47.9441 321.906 li
-47.9441 -15.0945 li
-495.944 -15.0945 li
cp
clp
-495.944 321.156 mo
-47.8611 321.156 li
-47.8611 -15.0945 li
-495.944 -15.0945 li
cp
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
grestore
grestore
-437.694 10.1555 mo
-90.5271 10.1555 li
-90.5271 284.073 li
-437.694 284.073 li
cp
false sop
1 /0 /CSD get_res sepcs
0 sep
f
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
-437.694 284.073 mo
-437.694 10.1555 li
-90.5271 10.1555 li
-90.5271 284.073 li
-437.694 284.073 li
@
.333 lw
[.5 4 ] 0 dsh
-437.694 284.073 mo
-437.694 10.1555 li
-403.027 284.073 mo
-403.027 10.1555 li
-368.277 284.073 mo
-368.277 10.1555 li
-333.611 284.073 mo
-333.611 10.1555 li
-298.861 284.073 mo
-298.861 10.1555 li
-264.111 284.073 mo
-264.111 10.1555 li
-229.444 284.073 mo
-229.444 10.1555 li
-194.694 284.073 mo
-194.694 10.1555 li
-160.027 284.073 mo
-160.027 10.1555 li
-125.277 284.073 mo
-125.277 10.1555 li
-90.5271 284.073 mo
-90.5271 10.1555 li
-437.694 284.073 mo
-90.5271 284.073 li
-437.694 249.823 mo
-90.5271 249.823 li
-437.694 215.573 mo
-90.5271 215.573 li
-437.694 181.323 mo
-90.5271 181.323 li
-437.694 147.073 mo
-90.5271 147.073 li
-437.694 112.823 mo
-90.5271 112.823 li
-437.694 78.5726 mo
-90.5271 78.5726 li
-437.694 44.3225 mo
-90.5271 44.3225 li
-437.694 10.1555 mo
-90.5271 10.1555 li
1 /0 /CSD get_res sepcs
1 sep
@
.5 lw
[] 0 dsh
-437.694 284.073 mo
-90.5271 284.073 li
-437.694 10.1555 mo
-90.5271 10.1555 li
-437.694 284.073 mo
-437.694 10.1555 li
-90.5271 284.073 mo
-90.5271 10.1555 li
-437.694 284.073 mo
-90.5271 284.073 li
-437.694 284.073 mo
-437.694 10.1555 li
-437.694 284.073 mo
-437.694 280.573 li
-437.694 10.1555 mo
-437.694 13.5725 li
@
%ADOBeginSubsetFont: CBIAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /CBIAAA+Helvetica
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000036c6670
676d000000000000042800000a1d676c7966e480a8dd000013a000002118
686561640000000000000e4800000036686865610000000000000e800000
0024686d74780000000000000ea4000000986c6f63619a6e91b400000f3c
0000004e6d6178700000000000000f8c000000206e616d65587f758c0000
0fac00000024707265700000000000000fd0000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0401bb000598a8a20b003265358
2321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db8005c2c4b535845441b2121592d00000000010000
0000000037422dfa5f0f3cf500110800000000005f4d8f0000000000cff2
eef7f865fc270b9108f9000000090001000000000000000100000629fe29
00000c01f865fced0b910001000000000000000000000000000000260512
004202390000023900af04730040047300c4047300400473003104730034
047300420473004d0473004b047300420473004905c700a504e300af0639
006305c700a1023900c905c7009c06390050055600af0639005005c700b4
0556006004e30021078d0025047300520400003b0473004801c7008401c7
0089047300840473003b02aa00890400004202390017047300800400000b
000000360036005600c400ea0176022202700304039a03e40496052c058e
05c0066806a006b8070e078c07e2089c092609f20a200aec0bb60c380d02
0d300d520dae0e260e6c0f4c0f9c0ff6108c000000010000002600920009
006b0007000200100010005d000007e80a1d000400010000000100120001
000000000006001000004b4b5358505a2b48656c7665746963610000b800
532bb800492bb8003f2bb800352bb8002b2b4118008001a6009001a600a0
01a600030069018b0079018b0089018b0099018b00040089018b0099018b
00a9018b00b9018bb2040840ba0179001a014a400b041f5414191f180a0b
1fd2b80106b49e1fd918e3bb0119000d00e10119b20d0009410a01a0019f
0064001f01a50025017a00480028019ab3296c1f60410a01a9007001a900
8001a90003008001a9000101a9b21e321fbe012c00250401001f0126001e
0401b61fe7312d1fe531b80201b21fc227b80401b21fc11eb80201400f1f
c01d9e1fbf1d671fbe1d671fab27b80401b21faa29b80401b61fa91d6c1f
931eb8019ab21f921db80101b21f911db80101b21f751db80201b61f6d29
961f6431b8019ab21f4c96b802abb21f391db80156400b1f3638211f351d
e41f2f27b80801400b1f2d1d4c1f2a31cd1f241db802abb21f201eb80125
40111f1c1d931f3a1d4c1f1e1d45273a1d4527bb01aa019b002a019bb225
4a1fba019b0025017ab349293896b8017bb348283125b8017a4036482896
29482725294c1f252946272729482756c80784075b07410732072b072807
260721071b071408120810080e080c080a08080807b801acb23f1f06bb01
ab003f001f01abb308060805b801aeb23f1f04bb01ad003f001f01adb708
04080208000814b8ffe0b40000010014b801abb41000000100b801abb606
100000010006b801adb300000100b801ad401f0400000100041000000100
1002000001000200000001000002010802004a00b0018db806008516763f
183f123e113946443e113946443e113946443e113946443e113946443e11
394660443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358
b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376
706a66456523456023456560234560b08b766818b080622020b16a704565
234520b003266062636820b003266165b070236544b06a234420b1766645
65234520b003266062636820b003266165b066236544b0762344b1006645
5458b166406544b27640764523614459b36242725d456523456023456560
234560b089766818b080622020b172424565234520b003266062636820b0
03266165b042236544b072234420b1625d4565234520b003266062636820
b003266165b05d236544b0622344b1005d455458b15d406544b262406245
236144592b2b2b2b456953427374b8019a2045694b20b02853b049515a58
b020615944b801a620456944750000>
[8473 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 172 3 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>CBIAAA+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/zero 3 def
end
CBIAAA+Helvetica /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/YJZMBY+Helvetica /CBIAAA+Helvetica findfont ct_VMDictPut
/YJZMBY+Helvetica*1 
[48{/.notdef}rp /zero 207{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-440.444 296.156 mo
(0)sh
-403.027 284.073 mo
-403.027 280.573 li
-403.027 10.1555 mo
-403.027 13.5725 li
@
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 108 2 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>CBIAAA+Helvetica AddT42Char 
1 392 4 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/period 2 def
/one 4 def
end
CBIAAA+Helvetica /Encoding get
dup 46 /period put
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one 206{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-409.944 296.156 mo
(0.1)
[5.56 2.78 0 ]xsh
-368.277 284.073 mo
-368.277 280.573 li
-368.277 10.1555 mo
-368.277 13.5725 li
@
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 468 5 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/two 5 def
end
CBIAAA+Helvetica /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two 205{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-375.194 296.156 mo
(0.2)
[5.56 2.78 0 ]xsh
-333.611 284.073 mo
-333.611 280.573 li
-333.611 10.1555 mo
-333.611 13.5725 li
@
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 748 6 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/three 6 def
end
CBIAAA+Helvetica /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three 204{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-340.527 296.156 mo
(0.3)
[5.56 2.78 0 ]xsh
-298.861 284.073 mo
-298.861 280.573 li
-298.861 10.1555 mo
-298.861 13.5725 li
@
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 1092 7 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/four 7 def
end
CBIAAA+Helvetica /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
203{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-305.777 296.156 mo
(0.4)
[5.56 2.78 0 ]xsh
-264.111 284.073 mo
-264.111 280.573 li
-264.111 10.1555 mo
-264.111 13.5725 li
@
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 1248 8 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/five 8 def
end
CBIAAA+Helvetica /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five 202{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-271.027 296.156 mo
(0.5)
[5.56 2.78 0 ]xsh
-229.444 284.073 mo
-229.444 280.573 li
-229.444 10.1555 mo
-229.444 13.5725 li
@
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 1544 9 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/six 9 def
end
CBIAAA+Helvetica /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six 201{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-236.361 296.156 mo
(0.6)
[5.56 2.78 0 ]xsh
-194.694 284.073 mo
-194.694 280.573 li
-194.694 10.1555 mo
-194.694 13.5725 li
@
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 1844 10 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/seven 10 def
end
CBIAAA+Helvetica /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven 200{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-201.611 296.156 mo
(0.7)
[5.56 2.78 0 ]xsh
-160.027 284.073 mo
-160.027 280.573 li
-160.027 10.1555 mo
-160.027 13.5725 li
@
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 1992 11 <00030042ffd7041a059c000b0017003200cb4047560157095a0f59136401
65096b0f691377250949107b197623722573277c317c3288198720872788
2e883198190d47083208250e0225320b3511112c05351e0517352c0d0238
21b80186b70e38296f2f08381bb80186b514382f3447331076c418d4edf4
ed10f5edf4ed003fed3fed12392fed39390111123912393130437940352a
2e1c201216030d162d1428000c2b0e28010a12082800061d082800041f02
2801152e1728000d2a172800071c0528010320052801002b2b2b2b012b2b
2b2b2b81818181015d005d00363534262322061514163312363534262322
061514163300272635343633321615140706071617161514022322243534
363702a48680838274966688a5aa8581a3959cfeb52a4fe8d5ceea442650
59335ffee8d1fedf7c7a0340855c5086865a6572fd3b87868b90938270a3
02a02b5080a0e6d99186532f2d293564a0bdfef9e3d87fb93100>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/eight 11 def
end
CBIAAA+Helvetica /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight 199{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-166.944 296.156 mo
(0.8)
[5.56 2.78 0 ]xsh
-125.277 284.073 mo
-125.277 280.573 li
-125.277 10.1555 mo
-125.277 13.5725 li
@
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 2348 12 <00020049ffd80411059a001b002700ab402e19052b052816480658056805
8919881a981a09460807212727350a0a182135100504351bc7180d07023c
071e3114b80155400b0d00291b8124380d2947281076c418d4edf4ed10f5
fd397d4b52787a2f18003feded3fed12392fed1112393130437940341f26
191a0b13010312250226220f24280020111e28010319002800260b242800
230e2128011f13212801011a042800250c2728002b2b2b2b012b2b2b2b2b
2b81818181015d01161716333236130e0123220235341233201316151007
02212226350036353426232206151416330110086b374581b6263cb166cf
f1eee8013977424f83fec7d2da0232b19f7b849b8895015a95391ed70149
5f4d0102cbc30128fee69be9fef9cbfeaedca601268db09e9bb1948ca500
>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/nine 12 def
end
CBIAAA+Helvetica /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine 198{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-132.194 296.156 mo
(0.9)
[5.56 2.78 0 ]xsh
-90.5271 284.073 mo
-90.5271 280.573 li
-90.5271 10.1555 mo
-90.5271 13.5725 li
@
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-93.2774 296.156 mo
(1)sh
-437.694 284.073 mo
-434.277 284.073 li
-90.5271 284.073 mo
-94.0271 284.073 li
@
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 287.739 mo
(0.2)
[5.56 2.78 0 ]xsh
-437.694 249.823 mo
-434.277 249.823 li
-90.5271 249.823 mo
-94.0271 249.823 li
@
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 253.489 mo
(0.3)
[5.56 2.78 0 ]xsh
-437.694 215.573 mo
-434.277 215.573 li
-90.5271 215.573 mo
-94.0271 215.573 li
@
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 219.239 mo
(0.4)
[5.56 2.78 0 ]xsh
-437.694 181.323 mo
-434.277 181.323 li
-90.5271 181.323 mo
-94.0271 181.323 li
@
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 184.989 mo
(0.5)
[5.56 2.78 0 ]xsh
-437.694 147.073 mo
-434.277 147.073 li
-90.5271 147.073 mo
-94.0271 147.073 li
@
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 150.739 mo
(0.6)
[5.56 2.78 0 ]xsh
-437.694 112.823 mo
-434.277 112.823 li
-90.5271 112.823 mo
-94.0271 112.823 li
@
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 116.489 mo
(0.7)
[5.56 2.78 0 ]xsh
-437.694 78.5726 mo
-434.277 78.5726 li
-90.5271 78.5726 mo
-94.0271 78.5726 li
@
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 82.2389 mo
(0.8)
[5.56 2.78 0 ]xsh
-437.694 44.3225 mo
-434.277 44.3225 li
-90.5271 44.3225 mo
-94.0271 44.3225 li
@
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 47.9888 mo
(0.9)
[5.56 2.78 0 ]xsh
-437.694 10.1555 mo
-434.277 10.1555 li
-90.5271 10.1555 mo
-94.0271 10.1555 li
@
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-446.111 13.8222 mo
(1)sh
-437.694 284.073 mo
-90.5271 284.073 li
-437.694 10.1555 mo
-90.5271 10.1555 li
-437.694 284.073 mo
-437.694 10.1555 li
-90.5271 284.073 mo
-90.5271 10.1555 li
@
gsave
-437.694 284.073 mo
-90.4441 284.073 li
-90.4441 10.0725 li
-437.694 10.0725 li
cp
clp
2 lw
-90.9441 280.656 mo
-92.1111 277.823 li
-93.6111 274.073 li
-95.2771 270.739 li
-97.0271 267.656 li
-98.8611 264.989 li
-100.777 262.489 li
-102.694 260.073 li
-104.694 257.823 li
-108.861 253.656 li
-110.944 251.656 li
-113.111 249.739 li
-115.361 247.823 li
-117.611 245.989 li
-119.861 244.239 li
-122.111 242.573 li
-124.444 240.906 li
-126.861 239.239 li
-129.194 237.656 li
-131.611 236.073 li
-134.027 234.573 li
-136.527 233.156 li
-138.944 231.656 li
-141.444 230.239 li
-143.944 228.906 li
-146.444 227.489 li
-149.027 226.156 li
-151.527 224.823 li
-154.111 223.573 li
-156.611 222.239 li
-159.194 220.989 li
-161.777 219.823 li
-164.277 218.573 li
-172.027 215.073 li
-174.611 213.989 li
-177.194 212.823 li
-182.361 210.656 li
-184.944 209.656 li
-187.527 208.573 li
-192.694 206.573 li
-195.277 205.656 li
-197.861 204.656 li
-200.361 203.739 li
-205.527 201.906 li
-210.527 200.073 li
-213.111 199.239 li
-223.111 195.906 li
-225.527 195.073 li
-228.027 194.323 li
-230.444 193.489 li
-242.527 189.739 li
-244.861 189.073 li
-247.194 188.323 li
-256.527 185.656 li
-263.277 183.656 li
-265.527 183.073 li
-267.777 182.406 li
-280.777 178.906 li
-284.944 177.739 li
-287.027 177.239 li
-289.027 176.656 li
-291.027 176.156 li
-293.027 175.573 li
-299.027 174.073 li
-308.611 171.573 li
-310.444 171.073 li
-312.361 170.656 li
-314.194 170.156 li
-315.944 169.739 li
-317.777 169.239 li
-321.277 168.406 li
-323.027 167.906 li
-324.777 167.489 li
-326.444 167.073 li
-328.194 166.656 li
-333.194 165.406 li
-334.777 164.989 li
-336.444 164.573 li
-338.027 164.239 li
-341.194 163.406 li
-342.694 163.073 li
-344.194 162.656 li
-345.694 162.323 li
-347.194 161.906 li
-348.694 161.573 li
-350.111 161.239 li
-351.611 160.906 li
-353.027 160.489 li
-354.444 160.156 li
-355.777 159.823 li
-357.194 159.489 li
-363.861 157.823 li
-368.861 156.489 li
-370.027 156.239 li
-371.277 155.906 li
-372.444 155.656 li
-373.611 155.323 li
-374.777 155.073 li
-375.944 154.739 li
-377.027 154.489 li
-378.194 154.156 li
-380.361 153.656 li
-381.444 153.323 li
-382.444 153.073 li
-383.527 152.739 li
-385.527 152.239 li
-386.527 151.906 li
-387.527 151.656 li
-388.527 151.323 li
-390.361 150.823 li
-391.277 150.489 li
-392.277 150.239 li
-393.111 149.989 li
-394.027 149.656 li
-394.944 149.406 li
-395.777 149.156 li
-396.694 148.906 li
-398.361 148.406 li
-399.194 148.073 li
-399.944 147.823 li
-400.777 147.573 li
-401.527 147.323 li
-402.361 147.156 li
-404.611 146.406 li
-405.277 146.156 li
-406.777 145.656 li
-407.444 145.489 li
-410.777 144.239 li
-411.361 143.989 li
-412.027 143.823 li
-412.611 143.573 li
-413.194 143.406 li
-414.361 142.906 li
-414.944 142.739 li
-415.527 142.489 li
-416.111 142.323 li
-416.611 142.156 li
-417.194 141.906 li
-417.694 141.656 li
-418.194 141.489 li
-419.194 140.989 li
-419.694 140.823 li
-420.694 140.323 li
-421.111 140.156 li
-421.611 139.906 li
-422.027 139.739 li
-422.527 139.489 li
-422.944 139.239 li
-423.361 139.073 li
-424.194 138.573 li
-424.611 138.406 li
-425.027 138.156 li
-425.444 137.989 li
-425.777 137.739 li
-426.194 137.573 li
-426.527 137.323 li
-426.944 137.073 li
-427.277 136.906 li
-427.611 136.656 li
-428.027 136.406 li
-429.027 135.656 li
-429.361 135.489 li
-429.611 135.323 li
-430.277 134.823 li
-430.527 134.573 li
-430.861 134.406 li
-431.111 134.156 li
-431.444 133.906 li
-431.694 133.739 li
-432.027 133.489 li
-432.277 133.323 li
-432.527 132.989 li
-432.777 132.823 li
-433.027 132.573 li
-433.277 132.406 li
-433.527 132.156 li
-434.027 131.823 li
-434.944 130.906 li
-435.111 130.656 li
-435.361 130.323 li
-435.527 130.073 li
-435.777 129.739 li
-435.944 129.489 li
-436.111 129.156 li
-436.361 128.906 li
-436.527 128.656 li
-436.694 128.823 li
-436.861 129.156 li
-437.111 131.489 li
-437.277 139.239 li
-437.527 175.823 li
.0639048 0 .996094 0 cmyk
@
-90.5271 281.239 mo
-90.6111 280.823 li
-91.1111 277.739 li
-92.6941 271.906 li
-95.2771 264.989 li
-98.5271 258.239 li
-102.277 252.156 li
-106.194 246.906 li
-110.444 242.406 li
-114.694 238.406 li
-118.944 234.823 li
-123.194 231.573 li
-127.527 228.489 li
-131.777 225.656 li
-136.027 222.989 li
-140.194 220.489 li
-144.361 218.073 li
-148.444 215.823 li
-152.527 213.656 li
-156.527 211.573 li
-160.527 209.573 li
-164.444 207.656 li
-168.277 205.739 li
-175.944 202.239 li
-179.694 200.573 li
-183.444 198.989 li
-187.111 197.406 li
-190.694 195.906 li
-194.361 194.406 li
-197.861 193.073 li
-201.444 191.656 li
-204.944 190.323 li
-208.361 188.989 li
-211.777 187.739 li
-215.111 186.573 li
-218.444 185.323 li
-224.944 182.989 li
-228.194 181.906 li
-231.361 180.823 li
-234.444 179.739 li
-237.611 178.656 li
-240.611 177.656 li
-243.694 176.656 li
-246.611 175.656 li
-249.611 174.739 li
-252.527 173.739 li
-255.361 172.906 li
-261.027 171.073 li
-263.777 170.239 li
-266.444 169.406 li
-269.194 168.573 li
-271.861 167.739 li
-274.444 166.989 li
-277.027 166.156 li
-279.611 165.406 li
-284.611 163.906 li
-289.444 162.406 li
-291.861 161.739 li
-294.194 161.073 li
-296.527 160.323 li
-303.277 158.323 li
-307.611 156.989 li
-309.777 156.406 li
-311.861 155.739 li
-316.027 154.573 li
-318.027 153.906 li
-320.111 153.323 li
-322.027 152.823 li
-324.027 152.239 li
-325.944 151.656 li
-327.861 151.156 li
-329.694 150.573 li
-331.611 150.073 li
-333.444 149.573 li
-335.194 148.989 li
-337.027 148.489 li
-338.777 147.989 li
-340.527 147.573 li
-343.861 146.573 li
-345.527 146.156 li
-347.194 145.656 li
-348.777 145.156 li
-351.944 144.323 li
-353.527 143.823 li
-358.027 142.573 li
-359.444 142.156 li
-360.944 141.739 li
-362.277 141.323 li
-365.111 140.489 li
-367.777 139.656 li
-369.111 139.323 li
-371.611 138.489 li
-374.111 137.823 li
-375.361 137.406 li
-380.027 136.073 li
-384.361 134.739 li
-385.444 134.489 li
-386.444 134.156 li
-387.527 133.823 li
-388.527 133.573 li
-389.444 133.239 li
-390.444 132.989 li
-391.361 132.656 li
-392.361 132.406 li
-393.277 132.156 li
-394.194 131.823 li
-395.027 131.573 li
-395.944 131.323 li
-396.777 131.073 li
-397.611 130.739 li
-398.444 130.573 li
-399.277 130.239 li
-400.111 130.073 li
-400.861 129.823 li
-401.611 129.489 li
-404.611 128.489 li
-405.277 128.239 li
-406.027 127.989 li
-408.694 126.989 li
-409.277 126.739 li
-409.944 126.489 li
-410.527 126.239 li
-411.111 126.073 li
-413.444 125.073 li
-414.027 124.906 li
-415.527 124.156 li
-416.111 123.906 li
-416.611 123.656 li
-417.027 123.489 li
-418.027 122.989 li
-418.444 122.823 li
-418.944 122.573 li
-419.361 122.323 li
-419.777 122.156 li
-420.611 121.656 li
-421.027 121.489 li
-421.444 121.239 li
-421.861 121.073 li
-422.277 120.823 li
-422.611 120.656 li
-423.027 120.406 li
-423.361 120.239 li
-423.694 119.989 li
-424.111 119.823 li
-424.777 119.489 li
-425.111 119.239 li
-425.777 118.906 li
-426.027 118.739 li
-426.361 118.489 li
-426.694 118.323 li
-426.944 118.156 li
-427.277 117.906 li
-427.527 117.739 li
-427.861 117.573 li
-428.111 117.323 li
-428.611 116.989 li
-428.944 116.739 li
-429.694 116.239 li
-429.861 115.989 li
-430.611 115.489 li
-430.777 115.239 li
-431.277 114.906 li
-431.444 114.656 li
-431.611 114.489 li
-431.861 114.323 li
-432.611 113.573 li
-432.777 113.323 li
-433.111 112.989 li
-433.277 112.739 li
-433.444 112.573 li
-433.611 112.323 li
-433.777 112.156 li
-433.944 111.906 li
-434.027 111.739 li
-434.194 111.489 li
-434.361 111.323 li
-434.527 111.073 li
-434.611 110.823 li
-434.777 110.656 li
-434.861 110.489 li
-435.194 109.989 li
-435.277 109.739 li
-435.444 109.573 li
-435.527 109.406 li
-435.611 109.156 li
-435.777 108.989 li
-435.861 108.739 li
-435.944 108.573 li
-436.111 108.406 li
-436.194 108.156 li
-436.277 107.823 li
-436.361 107.656 li
-436.444 107.406 li
-436.527 107.239 li
-436.694 106.989 li
-436.861 106.656 li
-436.944 106.406 li
-437.027 106.323 li
-437.111 106.156 li
-437.194 105.906 li
-437.194 105.739 li
-437.361 105.239 li
-437.444 105.156 li
-437.527 105.906 li
-437.611 111.489 li
.265019 .809232 0 0 cmyk
@
-90.9441 279.906 mo
-91.0271 278.823 li
-91.1941 277.739 li
-91.2771 276.739 li
-91.3611 275.823 li
-91.4441 274.989 li
-91.6111 273.156 li
-91.6941 272.156 li
-91.7771 271.239 li
-91.8611 270.156 li
-91.9441 269.156 li
-92.1111 268.156 li
-92.1941 267.156 li
-92.3611 266.073 li
-92.4441 264.989 li
-92.6111 263.989 li
-93.1111 260.739 li
-93.3611 259.656 li
-93.5271 258.573 li
-94.0271 256.406 li
-94.3611 255.239 li
-94.6111 254.156 li
-95.2771 251.989 li
-95.6941 250.906 li
-96.0271 249.823 li
-96.4441 248.656 li
-96.8611 247.573 li
-97.3611 246.489 li
-97.8611 245.323 li
-98.8611 243.156 li
-99.4441 241.989 li
-101.194 238.739 li
-101.861 237.573 li
-102.611 236.489 li
-103.277 235.406 li
-104.027 234.239 li
-104.777 233.156 li
-105.611 232.073 li
-106.444 230.906 li
-107.277 229.823 li
-108.194 228.739 li
-109.111 227.573 li
-110.944 225.406 li
-111.944 224.239 li
-113.027 223.156 li
-114.027 221.989 li
-115.111 220.906 li
-116.277 219.823 li
-117.444 218.656 li
-118.611 217.573 li
-121.111 215.406 li
-122.444 214.239 li
-125.111 212.073 li
-130.777 207.739 li
-132.277 206.656 li
-133.861 205.573 li
-135.361 204.489 li
-138.527 202.323 li
-140.194 201.239 li
-141.861 200.239 li
-145.194 198.073 li
-146.944 196.989 li
-148.694 195.989 li
-152.361 193.823 li
-154.194 192.823 li
-156.027 191.739 li
-157.861 190.739 li
-159.777 189.739 li
-161.694 188.656 li
-163.694 187.656 li
-165.611 186.573 li
-171.611 183.573 li
-173.611 182.489 li
-184.027 177.489 li
-186.194 176.489 li
-188.277 175.489 li
-190.444 174.573 li
-196.944 171.573 li
-199.111 170.656 li
-201.361 169.656 li
-203.527 168.739 li
-205.694 167.739 li
-207.944 166.823 li
-210.111 165.906 li
-214.611 164.073 li
-216.777 163.156 li
-223.527 160.406 li
-225.777 159.573 li
-228.027 158.656 li
-230.277 157.823 li
-232.444 156.989 li
-234.694 156.073 li
-236.861 155.239 li
-239.111 154.406 li
-241.277 153.573 li
-243.527 152.739 li
-247.861 151.073 li
-250.111 150.239 li
-252.277 149.406 li
-254.444 148.656 li
-256.611 147.823 li
-258.694 146.989 li
-260.861 146.239 li
-262.944 145.489 li
-265.027 144.656 li
-267.194 143.906 li
-269.277 143.156 li
-271.361 142.323 li
-273.361 141.573 li
-275.444 140.823 li
-277.444 140.073 li
-279.444 139.489 li
-281.444 138.823 li
-283.444 138.073 li
-285.444 137.406 li
-287.444 136.656 li
-289.361 136.073 li
-291.277 135.323 li
-297.027 133.323 li
-298.861 132.739 li
-300.694 132.073 li
-302.527 131.489 li
-304.361 130.823 li
-306.194 130.239 li
-307.944 129.739 li
-311.444 128.573 li
-313.194 128.073 li
-314.944 127.656 li
-318.277 126.656 li
-319.944 126.073 li
-323.277 125.073 li
-326.444 124.073 li
-328.027 123.656 li
-329.611 123.406 li
-331.111 122.906 li
-332.694 122.573 li
-334.194 122.073 li
-335.694 121.739 li
-337.194 121.489 li
-340.027 120.489 li
-341.444 120.156 li
-342.861 119.906 li
-344.277 119.573 li
-345.611 119.323 li
-346.944 119.406 li
-348.277 119.073 li
-349.611 119.073 li
-350.861 119.156 li
-352.194 118.989 li
-353.444 118.823 li
-354.694 118.573 li
-355.861 118.406 li
-357.111 118.489 li
-358.277 118.656 li
-359.444 118.489 li
-360.611 118.656 li
-361.777 118.656 li
-362.861 118.739 li
-364.027 118.406 li
-365.111 118.739 li
-366.194 118.906 li
-367.277 118.906 li
-368.361 118.739 li
-369.444 118.906 li
-370.444 119.239 li
-371.444 119.239 li
-373.444 119.906 li
-375.444 120.906 li
-376.361 120.739 li
-377.361 120.989 li
-378.277 120.906 li
-379.194 121.073 li
-381.027 121.739 li
-381.861 121.656 li
-382.777 122.156 li
-383.611 122.573 li
-384.527 123.323 li
-385.361 123.823 li
-386.194 123.989 li
-387.027 124.656 li
-387.777 125.073 li
-388.611 125.739 li
-389.361 126.323 li
-390.194 127.073 li
-390.944 127.656 li
-391.694 128.406 li
-392.444 129.406 li
-393.194 129.989 li
-393.944 130.323 li
-394.694 130.739 li
-395.444 131.656 li
-396.111 132.406 li
-396.861 133.073 li
-397.527 134.073 li
-398.277 134.823 li
-398.944 135.906 li
-399.694 136.489 li
-400.361 137.156 li
-401.027 138.406 li
-401.777 139.906 li
-402.444 140.656 li
-403.111 141.073 li
-403.861 142.156 li
-404.527 143.073 li
-405.277 144.406 li
-406.027 145.656 li
-406.777 146.406 li
-407.527 146.989 li
-408.361 148.073 li
-409.194 149.573 li
-410.194 150.489 li
-411.361 151.573 li
-412.777 152.573 li
-414.694 153.656 li
-417.444 154.823 li
-421.361 157.073 li
-428.194 159.823 li
.520012 0 .126131 0 cmyk
@
-90.6111 281.239 mo
-90.6111 280.823 li
-90.6941 280.489 li
-90.7771 279.906 li
-90.8611 279.073 li
-91.1111 278.073 li
-91.3611 276.823 li
-91.6941 275.323 li
-92.1111 273.656 li
-92.5271 271.906 li
-93.0271 269.989 li
-94.3611 265.989 li
-95.1111 263.906 li
-96.7771 259.739 li
-97.6941 257.573 li
-98.6941 255.489 li
-100.861 251.489 li
-102.027 249.489 li
-105.777 243.739 li
-107.194 241.906 li
-108.611 240.156 li
-110.027 238.323 li
-111.611 236.573 li
-113.111 234.906 li
-114.694 233.239 li
-118.027 230.073 li
-119.777 228.489 li
-121.444 226.906 li
-123.277 225.406 li
-125.027 223.906 li
-126.861 222.406 li
-128.777 220.989 li
-130.611 219.573 li
-132.611 218.156 li
-134.527 216.823 li
-142.527 211.489 li
-144.611 210.239 li
-146.611 208.989 li
-148.694 207.739 li
-150.861 206.489 li
-152.944 205.323 li
-155.111 204.073 li
-157.277 202.906 li
-159.361 201.739 li
-161.527 200.656 li
-163.694 199.489 li
-165.861 198.406 li
-168.111 197.323 li
-170.277 196.239 li
-172.527 195.156 li
-174.694 194.156 li
-176.944 193.073 li
-181.444 191.073 li
-183.611 190.073 li
-185.861 189.073 li
-188.111 188.156 li
-190.361 187.156 li
-201.611 182.573 li
-203.944 181.739 li
-206.194 180.823 li
-215.194 177.489 li
-217.361 176.656 li
-219.611 175.823 li
-221.861 175.073 li
-224.111 174.239 li
-226.277 173.489 li
-228.527 172.739 li
-230.694 171.906 li
-232.944 171.156 li
-235.111 170.406 li
-237.361 169.739 li
-239.527 168.989 li
-241.694 168.323 li
-243.944 167.573 li
-246.111 166.906 li
-248.277 166.156 li
-256.944 163.489 li
-259.027 162.823 li
-261.194 162.239 li
-263.277 161.573 li
-265.444 160.989 li
-267.527 160.323 li
-275.861 157.989 li
-277.861 157.406 li
-279.944 156.823 li
-285.944 155.073 li
-287.861 154.573 li
-289.861 153.989 li
-291.777 153.489 li
-293.777 152.906 li
-295.694 152.406 li
-297.611 151.823 li
-299.527 151.323 li
-301.361 150.823 li
-303.277 150.323 li
-305.111 149.823 li
-307.027 149.323 li
-312.527 147.823 li
-314.277 147.406 li
-316.111 146.906 li
-317.861 146.489 li
-319.694 146.073 li
-321.444 145.573 li
-323.111 145.156 li
-326.611 144.323 li
-328.277 143.823 li
-334.944 142.156 li
-336.611 141.823 li
-338.194 141.406 li
-339.861 140.989 li
-341.444 140.573 li
-342.944 140.239 li
-346.111 139.406 li
-347.611 139.073 li
-350.611 138.239 li
-352.111 137.906 li
-353.611 137.489 li
-355.027 137.156 li
-356.444 136.739 li
-359.277 136.073 li
-360.694 135.656 li
-362.111 135.323 li
-363.444 134.989 li
-364.861 134.656 li
-368.861 133.656 li
-370.194 133.239 li
-371.444 132.906 li
-372.777 132.573 li
-377.777 131.239 li
-380.111 130.573 li
-381.361 130.239 li
-382.527 129.906 li
-383.611 129.656 li
-385.944 128.989 li
-387.027 128.656 li
-388.111 128.406 li
-390.277 127.739 li
-391.277 127.489 li
-392.361 127.156 li
-393.361 126.823 li
-394.361 126.573 li
-395.361 126.239 li
-396.361 125.989 li
-397.361 125.656 li
-398.277 125.406 li
-399.277 125.073 li
-401.111 124.573 li
-402.027 124.239 li
-402.861 123.989 li
-403.777 123.739 li
-404.611 123.406 li
-405.527 123.156 li
-407.194 122.656 li
-407.944 122.406 li
-409.611 121.906 li
-411.861 121.156 li
-412.611 120.823 li
-414.111 120.323 li
-414.777 120.073 li
-415.527 119.823 li
-416.194 119.573 li
-416.861 119.239 li
-419.527 118.239 li
-420.111 117.989 li
-420.777 117.739 li
-421.361 117.573 li
-424.277 116.323 li
-424.777 116.156 li
-425.361 115.906 li
-425.861 115.656 li
-426.444 115.489 li
-427.944 114.739 li
-428.361 114.489 li
-428.861 114.323 li
-429.361 114.073 li
-429.777 113.906 li
-430.194 113.656 li
-430.694 113.406 li
-431.527 112.906 li
-431.944 112.739 li
-432.361 112.489 li
-432.694 112.239 li
-433.527 111.739 li
-433.861 111.406 li
-434.277 111.239 li
-434.611 110.989 li
-434.944 110.823 li
-435.361 110.656 li
-435.694 110.573 li
-436.027 110.489 li
-436.361 110.739 li
-436.694 112.156 li
-436.944 117.156 li
-437.277 131.823 li
-437.527 162.823 li
.627314 0 1 0 cmyk
@
-90.5271 281.239 mo
-96.6941 279.906 li
-101.194 277.239 li
-106.194 274.573 li
-116.527 268.406 li
-121.527 265.239 li
-126.361 262.239 li
-131.111 259.323 li
-135.611 256.323 li
-139.944 253.573 li
-144.111 250.656 li
-148.194 247.739 li
-152.111 245.073 li
-155.861 242.406 li
-159.444 239.906 li
-163.027 237.489 li
-166.527 235.156 li
-169.861 232.823 li
-173.194 230.573 li
-176.361 228.239 li
-179.527 225.989 li
-182.611 223.906 li
-185.611 221.823 li
-188.527 219.823 li
-191.361 217.823 li
-194.277 215.906 li
-197.027 214.073 li
-199.694 212.323 li
-205.027 208.656 li
-210.194 205.323 li
-212.694 203.739 li
-215.194 202.239 li
-220.027 199.239 li
-222.361 197.739 li
-224.694 196.323 li
-227.027 194.823 li
-229.277 193.489 li
-231.444 192.073 li
-233.694 190.739 li
-235.861 189.489 li
-237.944 188.239 li
-240.111 187.073 li
-242.194 185.906 li
-244.194 184.823 li
-248.361 182.656 li
-250.361 181.656 li
-252.444 180.656 li
-254.444 179.656 li
-258.277 177.656 li
-262.111 175.823 li
-264.027 174.989 li
-265.861 174.073 li
-267.777 173.156 li
-269.611 172.323 li
-271.361 171.406 li
-273.194 170.656 li
-274.944 169.823 li
-276.694 169.073 li
-278.444 168.406 li
-281.777 166.906 li
-283.444 166.323 li
-285.111 165.573 li
-286.777 164.906 li
-291.527 162.906 li
-294.694 161.739 li
-296.194 161.239 li
-297.694 160.656 li
-300.694 159.656 li
-302.111 159.156 li
-303.611 158.739 li
-305.027 158.239 li
-306.444 157.823 li
-307.861 157.239 li
-309.277 156.823 li
-310.611 156.323 li
-312.027 155.906 li
-313.361 155.489 li
-314.777 155.073 li
-316.111 154.656 li
-317.444 154.323 li
-320.111 153.489 li
-321.361 153.156 li
-322.694 152.739 li
-324.027 152.489 li
-329.027 151.156 li
-330.194 150.823 li
-331.444 150.489 li
-332.611 150.156 li
-333.777 149.906 li
-334.944 149.573 li
-336.027 149.239 li
-337.194 148.989 li
-338.277 148.656 li
-339.444 148.323 li
-340.527 148.073 li
-341.611 147.656 li
-342.694 147.406 li
-343.777 147.073 li
-344.861 146.823 li
-345.861 146.489 li
-346.944 146.239 li
-351.944 144.573 li
-352.944 144.323 li
-353.861 144.073 li
-355.861 143.573 li
-357.694 143.073 li
-358.611 142.906 li
-361.361 142.156 li
-362.277 141.989 li
-363.194 141.739 li
-364.027 141.489 li
-364.944 141.323 li
-366.611 140.823 li
-367.527 140.573 li
-368.361 140.323 li
-369.194 140.156 li
-371.694 139.406 li
-372.527 139.239 li
-373.277 138.989 li
-374.111 138.823 li
-374.861 138.573 li
-375.694 138.406 li
-376.444 138.239 li
-377.277 138.073 li
-378.027 137.823 li
-381.027 137.156 li
-381.777 137.073 li
-382.527 136.906 li
-383.194 136.823 li
-383.944 136.656 li
-384.611 136.573 li
-385.277 136.489 li
-386.027 136.323 li
-387.361 135.989 li
-388.111 135.906 li
-388.777 135.823 li
-389.444 135.656 li
-390.111 135.573 li
-391.444 135.406 li
-392.777 135.073 li
-393.361 134.989 li
-394.027 134.823 li
-394.694 134.739 li
-395.277 134.573 li
-395.944 134.406 li
-396.527 134.239 li
-397.194 134.156 li
-397.777 133.989 li
-398.361 133.906 li
-398.944 133.739 li
-399.611 133.573 li
-400.194 133.489 li
-401.944 133.239 li
-402.527 133.156 li
-403.694 132.989 li
-404.277 132.823 li
-404.861 132.739 li
-405.444 132.656 li
-406.027 132.573 li
-406.527 132.406 li
-407.111 132.239 li
-407.694 132.156 li
-408.277 132.073 li
-408.777 131.989 li
-409.361 131.906 li
-409.861 131.823 li
-410.444 131.739 li
-410.944 131.656 li
-411.527 131.573 li
-412.027 131.489 li
-412.611 131.406 li
-413.111 131.323 li
-413.694 131.239 li
-414.194 131.073 li
-414.694 130.989 li
-415.277 130.906 li
-415.777 130.739 li
-416.277 130.739 li
-416.861 130.656 li
-417.861 130.489 li
-418.361 130.489 li
-418.944 130.406 li
-419.444 130.406 li
-419.944 130.323 li
-420.444 130.156 li
-421.027 130.156 li
-421.527 130.073 li
-422.527 129.906 li
-423.027 129.823 li
-423.527 129.739 li
-425.527 129.739 li
-426.027 129.573 li
-426.527 129.656 li
-427.027 129.573 li
-427.527 129.406 li
-428.027 129.406 li
-428.527 129.323 li
-429.027 129.323 li
-429.527 129.239 li
-429.944 129.156 li
-430.444 129.073 li
-430.944 129.156 li
-431.444 129.073 li
-431.944 128.989 li
-432.444 128.989 li
-432.944 128.823 li
-433.444 128.989 li
-433.944 129.239 li
-434.444 129.406 li
-434.944 129.989 li
-435.36 131.156 li
-435.777 132.989 li
-436.277 136.573 li
-436.61 140.739 li
-436.944 151.323 li
.895628 .7673 0 0 cmyk
@
-90.5271 281.239 mo
-90.6111 281.156 li
-90.6111 279.989 li
-90.6941 279.406 li
-90.6941 278.823 li
-90.7771 278.156 li
-90.8611 277.406 li
-91.0271 276.573 li
-91.1111 275.656 li
-91.2771 274.739 li
-91.4441 273.739 li
-91.6941 272.656 li
-92.1941 270.323 li
-92.5271 269.073 li
-92.8611 267.739 li
-93.6941 264.906 li
-94.6941 261.906 li
-95.2771 260.323 li
-95.8611 258.656 li
-96.6111 256.989 li
-97.2771 255.239 li
-98.1111 253.489 li
-98.9441 251.656 li
-99.8611 249.823 li
-101.861 245.989 li
-102.944 243.989 li
-105.277 239.989 li
-106.527 237.989 li
-107.861 235.906 li
-109.277 233.823 li
-110.694 231.656 li
-112.194 229.489 li
-113.777 227.406 li
-115.361 225.239 li
-117.027 222.989 li
-118.777 220.823 li
-120.527 218.573 li
-122.361 216.406 li
-126.194 211.906 li
-128.194 209.656 li
-130.277 207.406 li
-132.361 205.239 li
-136.694 200.739 li
-138.944 198.489 li
-141.277 196.323 li
-143.611 194.073 li
-148.444 189.739 li
-153.444 185.406 li
-158.611 181.239 li
-163.944 177.073 li
-166.611 175.073 li
-172.111 171.073 li
-180.611 165.323 li
-189.361 159.823 li
-195.361 156.323 li
-198.361 154.656 li
-201.444 152.989 li
-204.527 151.406 li
-207.611 149.739 li
-210.694 148.239 li
-213.777 146.656 li
-216.861 145.156 li
-220.027 143.739 li
-226.194 140.906 li
-229.361 139.573 li
-232.444 138.239 li
-235.611 136.906 li
-238.694 135.656 li
-241.777 134.489 li
-244.944 133.323 li
-248.027 132.156 li
-251.194 130.989 li
-257.361 128.823 li
-263.527 126.823 li
-269.694 124.989 li
-272.694 124.073 li
-275.777 123.239 li
-278.777 122.406 li
-287.777 120.156 li
-290.694 119.489 li
-293.611 118.739 li
-296.527 118.073 li
-299.444 117.489 li
-302.277 116.823 li
-305.111 116.323 li
-307.944 115.739 li
-310.777 115.239 li
-313.527 114.656 li
-316.194 114.239 li
-318.944 113.739 li
-321.611 113.323 li
-324.194 112.823 li
-329.361 111.989 li
-331.861 111.656 li
-334.361 111.239 li
-336.861 110.906 li
-339.277 110.573 li
-341.611 110.323 li
-343.944 109.989 li
-346.277 109.739 li
-348.527 109.406 li
-350.777 109.156 li
-352.944 108.989 li
-355.111 108.739 li
-357.194 108.573 li
-359.277 108.323 li
-361.361 108.156 li
-363.361 107.989 li
-365.361 107.906 li
-367.277 107.739 li
-369.194 107.656 li
-371.027 107.489 li
-372.861 107.406 li
-374.694 107.323 li
-376.444 107.239 li
-378.194 107.239 li
-379.861 107.156 li
-393.611 107.156 li
-394.944 107.239 li
-399.944 107.239 li
-401.111 107.323 li
-404.444 107.323 li
-405.527 107.406 li
-406.527 107.406 li
-407.527 107.489 li
-409.444 107.489 li
-410.361 107.573 li
-411.277 107.573 li
-412.111 107.656 li
-412.944 107.739 li
-413.777 107.739 li
-414.527 107.823 li
-415.361 107.823 li
-416.111 107.906 li
-416.777 107.989 li
-417.527 107.989 li
-418.861 108.156 li
-419.527 108.156 li
-420.111 108.239 li
-420.694 108.239 li
-421.277 108.323 li
-421.861 108.406 li
-422.444 108.406 li
-422.944 108.489 li
-423.444 108.489 li
-423.944 108.573 li
-424.444 108.573 li
-424.944 108.656 li
-425.861 108.656 li
-426.277 108.739 li
-428.694 108.739 li
-429.027 108.823 li
-430.444 108.823 li
-430.777 108.906 li
-431.444 108.906 li
-431.861 108.989 li
-432.194 109.073 li
-432.527 109.239 li
-432.861 109.323 li
-433.111 109.406 li
-433.444 109.573 li
-433.694 109.656 li
-433.944 109.823 li
-434.194 109.906 li
-434.444 110.073 li
-434.611 110.156 li
-434.861 110.239 li
-435.027 110.323 li
-435.194 110.323 li
-435.361 110.406 li
-435.527 110.489 li
-435.694 110.573 li
-435.861 110.739 li
-435.944 110.906 li
-436.111 111.073 li
-436.194 111.073 li
-436.444 111.323 li
-436.777 111.989 li
-436.861 112.239 li
-436.944 112.323 li
-437.027 112.489 li
-437.111 112.573 li
-437.194 112.823 li
-437.194 112.906 li
-437.277 112.989 li
-437.277 113.073 li
-437.361 113.156 li
-437.444 113.156 li
-437.444 113.323 li
-437.527 113.406 li
-437.527 113.573 li
-437.611 113.739 li
-437.611 114.489 li
-437.694 115.489 li
-437.694 175.739 li
0 .990631 1 .000396735 cmyk
@
-90.5271 281.239 mo
-90.6111 280.823 li
-90.9441 278.739 li
-91.4441 275.323 li
-92.1111 271.406 li
-92.9441 267.323 li
-93.8611 263.239 li
-94.9441 259.406 li
-96.0271 255.656 li
-97.2771 252.156 li
-98.5271 248.739 li
-99.8611 245.489 li
-101.361 242.323 li
-102.861 239.239 li
-104.361 236.323 li
-105.944 233.406 li
-107.611 230.656 li
-111.111 225.323 li
-112.861 222.823 li
-114.694 220.323 li
-116.611 217.823 li
-118.527 215.406 li
-120.444 213.073 li
-122.361 210.823 li
-124.361 208.489 li
-126.444 206.323 li
-128.527 204.239 li
-130.611 202.073 li
-134.944 198.073 li
-139.277 194.239 li
-141.527 192.323 li
-143.777 190.573 li
-146.027 188.739 li
-148.277 186.989 li
-150.527 185.323 li
-152.861 183.573 li
-155.111 181.906 li
-157.444 180.323 li
-159.694 178.739 li
-162.027 177.156 li
-164.277 175.656 li
-166.611 174.073 li
-168.944 172.656 li
-171.194 171.156 li
-175.861 168.323 li
-178.111 166.989 li
-180.444 165.573 li
-182.777 164.239 li
-185.027 162.989 li
-187.361 161.656 li
-189.611 160.406 li
-191.944 159.156 li
-194.194 157.906 li
-196.527 156.739 li
-198.777 155.573 li
-201.111 154.406 li
-203.361 153.239 li
-205.694 152.156 li
-207.944 150.989 li
-212.444 148.823 li
-214.694 147.823 li
-216.944 146.739 li
-221.444 144.739 li
-223.611 143.739 li
-225.861 142.739 li
-228.111 141.823 li
-232.444 139.989 li
-234.694 139.073 li
-236.861 138.239 li
-239.027 137.323 li
-245.527 134.823 li
-247.611 134.073 li
-249.777 133.239 li
-253.944 131.739 li
-256.027 130.906 li
-258.111 130.156 li
-260.111 129.489 li
-262.194 128.739 li
-264.194 127.989 li
-266.194 127.323 li
-268.194 126.573 li
-272.194 125.239 li
-274.111 124.489 li
-276.111 123.823 li
-278.027 123.156 li
-279.944 122.573 li
-283.777 121.239 li
-285.694 120.656 li
-287.527 119.989 li
-289.361 119.406 li
-291.277 118.823 li
-293.111 118.239 li
-294.861 117.656 li
-296.694 117.073 li
-298.527 116.573 li
-300.277 115.989 li
-302.027 115.489 li
-303.777 114.906 li
-309.027 113.406 li
-310.694 112.906 li
-312.444 112.406 li
-314.111 111.906 li
-315.777 111.489 li
-317.444 110.989 li
-319.027 110.489 li
-320.694 110.073 li
-322.277 109.656 li
-323.944 109.239 li
-327.111 108.406 li
-328.611 107.989 li
-330.194 107.573 li
-333.194 106.739 li
-334.694 106.406 li
-336.194 105.989 li
-337.694 105.656 li
-339.194 105.239 li
-342.027 104.573 li
-343.444 104.156 li
-349.111 102.823 li
-350.444 102.489 li
-351.777 102.239 li
-353.111 101.906 li
-354.527 101.573 li
-355.777 101.323 li
-357.111 101.073 li
-358.444 100.739 li
-359.694 100.489 li
-360.944 100.156 li
-363.444 99.6555 li
-364.694 99.3226 li
-365.944 99.0726 li
-367.111 98.8226 li
-368.361 98.5726 li
-373.027 97.5726 li
-374.111 97.3226 li
-375.277 97.0726 li
-379.611 96.0726 li
-380.694 95.9055 li
-381.694 95.6555 li
-382.777 95.4055 li
-383.777 95.2385 li
-384.777 94.9885 li
-385.861 94.8226 li
-386.777 94.5726 li
-387.777 94.4055 li
-388.777 94.1555 li
-389.694 93.9885 li
-390.694 93.8226 li
-391.611 93.6555 li
-392.527 93.4055 li
-393.444 93.2385 li
-397.111 92.5726 li
-398.777 92.2385 li
-399.694 92.0726 li
-400.527 91.9055 li
-402.194 91.5726 li
-402.944 91.4055 li
-403.777 91.2385 li
-404.527 91.1555 li
-405.361 90.9885 li
-406.861 90.6555 li
-407.611 90.5726 li
-409.111 90.2385 li
-409.777 90.0726 li
-410.527 89.9055 li
-411.194 89.7385 li
-411.944 89.5726 li
-412.611 89.3226 li
-413.277 89.1555 li
-413.944 89.0726 li
-415.944 88.5726 li
-416.527 88.4055 li
-417.194 88.2385 li
-418.361 87.9055 li
-419.027 87.7385 li
-420.194 87.4055 li
-420.694 87.3226 li
-421.861 86.9885 li
-422.361 86.8226 li
-422.944 86.5726 li
-423.444 86.4885 li
-424.027 86.3226 li
-425.027 85.9885 li
-425.527 85.8226 li
-426.027 85.6555 li
-427.027 85.3226 li
-427.444 85.1555 li
-427.944 84.9885 li
-428.361 84.8226 li
-428.861 84.7385 li
-429.277 84.5726 li
-429.694 84.4885 li
-430.527 84.1555 li
-430.944 84.0726 li
-431.361 83.9055 li
-431.777 83.8226 li
-432.194 83.6555 li
-432.527 83.4885 li
-432.944 83.3226 li
-433.277 83.2385 li
-433.611 83.1555 li
-434.027 82.9885 li
-434.361 82.8226 li
-435.027 82.6555 li
-435.361 82.4885 li
-435.694 82.4885 li
-435.944 82.3226 li
-436.277 82.2385 li
-436.527 82.1555 li
-436.861 81.9885 li
-437.111 81.9055 li
-437.361 81.9055 li
-437.611 94.0715 li
.653162 .154971 0 0 cmyk
@
-90.5271 281.239 mo
-90.6111 280.823 li
-90.6111 278.656 li
-90.6941 275.656 li
-90.7771 272.489 li
-91.0271 269.156 li
-91.2771 265.739 li
-91.6111 262.323 li
-92.0271 258.906 li
-92.4441 255.573 li
-93.6111 249.073 li
-94.9441 242.739 li
-95.6941 239.739 li
-96.5271 236.739 li
-97.4441 233.739 li
-99.2771 228.073 li
-100.361 225.323 li
-101.361 222.573 li
-102.527 219.906 li
-104.861 214.739 li
-106.111 212.239 li
-107.444 209.739 li
-108.777 207.323 li
-110.194 204.906 li
-111.611 202.656 li
-113.111 200.323 li
-114.611 198.073 li
-117.777 193.739 li
-119.444 191.573 li
-121.027 189.489 li
-122.777 187.489 li
-124.444 185.406 li
-126.194 183.406 li
-127.944 181.489 li
-133.444 175.739 li
-135.277 173.906 li
-139.111 170.406 li
-141.111 168.656 li
-147.111 163.656 li
-149.111 162.073 li
-153.277 158.906 li
-159.527 154.406 li
-161.694 152.989 li
-165.861 150.156 li
-168.027 148.823 li
-170.194 147.406 li
-172.277 146.073 li
-176.611 143.406 li
-180.944 140.906 li
-183.027 139.656 li
-185.277 138.406 li
-187.361 137.239 li
-189.611 136.073 li
-196.111 132.573 li
-198.361 131.489 li
-202.694 129.323 li
-204.944 128.239 li
-207.111 127.239 li
-209.361 126.156 li
-211.527 125.156 li
-213.777 124.156 li
-215.944 123.156 li
-218.194 122.239 li
-220.361 121.239 li
-222.527 120.323 li
-224.777 119.406 li
-229.111 117.573 li
-231.361 116.656 li
-235.694 114.989 li
-237.861 114.073 li
-242.194 112.406 li
-244.361 111.656 li
-246.527 110.823 li
-248.694 110.073 li
-250.777 109.239 li
-252.944 108.489 li
-255.027 107.739 li
-257.194 107.073 li
-261.361 105.573 li
-263.527 104.906 li
-265.611 104.156 li
-267.611 103.489 li
-271.777 102.156 li
-273.777 101.489 li
-275.861 100.823 li
-277.861 100.156 li
-279.861 99.5726 li
-281.944 98.9055 li
-283.944 98.3226 li
-285.861 97.7385 li
-287.861 97.0726 li
-289.861 96.4885 li
-291.777 95.9055 li
-293.694 95.4055 li
-297.527 94.2385 li
-301.361 93.2385 li
-303.277 92.6555 li
-306.944 91.6555 li
-308.861 91.1555 li
-310.611 90.7385 li
-314.277 89.7385 li
-316.027 89.3226 li
-317.777 88.8226 li
-319.527 88.4055 li
-321.277 87.9055 li
-324.777 87.0726 li
-326.444 86.5726 li
-334.777 84.4885 li
-336.444 84.1555 li
-339.611 83.3226 li
-341.194 82.9885 li
-342.777 82.5726 li
-344.361 82.2385 li
-345.861 81.8226 li
-347.444 81.4885 li
-348.944 81.0726 li
-353.444 80.0726 li
-354.861 79.7385 li
-356.277 79.3226 li
-360.527 78.3226 li
-361.861 78.0726 li
-363.277 77.7385 li
-364.611 77.4055 li
-365.944 77.1555 li
-367.277 76.8226 li
-368.527 76.5726 li
-369.861 76.2385 li
-371.111 75.9885 li
-372.444 75.7385 li
-373.694 75.4055 li
-376.194 74.9055 li
-377.361 74.6555 li
-378.611 74.4055 li
-382.111 73.6555 li
-383.277 73.4885 li
-384.444 73.2385 li
-385.527 72.9885 li
-386.694 72.8226 li
-388.861 72.3226 li
-389.944 72.1555 li
-390.944 71.9055 li
-392.027 71.7385 li
-393.027 71.5726 li
-394.111 71.3226 li
-395.111 71.1555 li
-396.027 70.9055 li
-397.027 70.7385 li
-398.027 70.5726 li
-398.944 70.4055 li
-399.944 70.2385 li
-400.861 69.9885 li
-402.694 69.6555 li
-403.527 69.4885 li
-404.444 69.3226 li
-405.277 69.1555 li
-406.194 68.9885 li
-408.694 68.4885 li
-409.444 68.3226 li
-410.277 68.1555 li
-411.027 67.9885 li
-411.861 67.8226 li
-412.611 67.6555 li
-413.361 67.5726 li
-414.111 67.4055 li
-414.777 67.2385 li
-415.527 67.0726 li
-416.277 66.9885 li
-416.944 66.8226 li
-417.611 66.6555 li
-418.277 66.5726 li
-418.944 66.4055 li
-419.611 66.3226 li
-420.277 66.2385 li
-420.861 66.1555 li
-421.527 66.0726 li
-422.694 65.9055 li
-423.361 65.8225 li
-423.944 65.7385 li
-424.444 65.6555 li
-425.027 65.5725 li
-425.611 65.4885 li
-426.111 65.4885 li
-426.694 65.4055 li
-427.194 65.3225 li
-427.694 65.3225 li
-428.694 65.1555 li
-429.194 65.1555 li
-429.694 65.0725 li
-430.111 64.9885 li
-430.611 64.9885 li
-431.027 64.9055 li
-431.527 64.9055 li
-431.944 64.8225 li
-435.694 64.8225 li
-436.027 64.7385 li
-436.694 64.7385 li
-437.027 64.8225 li
-437.277 64.9055 li
-437.527 70.1555 li
0 0 0 1 cmyk
@
grestore
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if

1 0 1 <> CBIAAA+Helvetica AddT42Char 
1 3864 20 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>CBIAAA+Helvetica AddT42Char 
1 4408 22 <000200b40000057805bd0009002700944012070d49014805590158056905
641478050816bb01300119001b011c40422321202660127112751403121e
1f141c1503211e161404261224251e0009091b071e0b02261c1b08202515
1f251603310f691b1a29082625270a192829d6219566182b2b4ef43c4dfd
3c4e10f64df4edd4edd4ed003f3c3c3ffd12392f3cfd3c39111739011112
39391239395d1112392b3130015d01323635342726232111032132171615
1406071e011f011617161715232e012f012627262321112303478ca3723d
66fe1ac702a8a86dcf6d6256570507030b122ef40a0c040c0764397afe3b
c7031c70929d391efe0a02a1315efd84a833237280c55429461421133c56
f590311bfd8a>CBIAAA+Helvetica AddT42Char 
1 5592 26 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>CBIAAA+Helvetica AddT42Char 
1 5996 27 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>CBIAAA+Helvetica AddT42Char 
1 6256 28 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>CBIAAA+Helvetica AddT42Char 
1 6660 29 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>CBIAAA+Helvetica AddT42Char 
1 6752 30 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>CBIAAA+Helvetica AddT42Char 
1 6820 31 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>CBIAAA+Helvetica AddT42Char 
1 7004 32 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>CBIAAA+Helvetica AddT42Char 
1 7244 33 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>CBIAAA+Helvetica AddT42Char 
1 7384 34 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/space 1 def
/P 20 def
/R 22 def
/a 26 def
/c 27 def
/e 28 def
/i 29 def
/l 30 def
/n 31 def
/o 32 def
/r 33 def
/s 34 def
end
CBIAAA+Helvetica /Encoding get
dup 32 /space put
dup 80 /P put
dup 82 /R put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 22{/.notdef}rp 
/P /.notdef /R 14{/.notdef}rp /a /.notdef /c /.notdef 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-278.111 308.072 mo
(Recall)
[7.22 5.56 5 5.56001 2.22 0 ]xsh
YJZMBY+Helvetica*1 [0 -10 -10 0 0 0 ]msf
-461.277 167.739 mo
(Precision)
[-6.67007 -3.32993 -5.56 -5 -2.22 -5 -2.22 -5.56 0 ]ysh
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-439.111 287.572 mo
( )sh
-91.8608 13.5722 mo
( )sh
-432.777 178.239 mo
-355.36 178.239 li
-355.36 279.072 li
-432.777 279.072 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
-432.777 279.073 mo
-432.777 178.239 li
-355.361 178.239 li
-355.361 279.073 li
-432.777 279.073 li
@
-432.777 279.073 mo
-355.361 279.073 li
-432.777 178.239 mo
-355.361 178.239 li
-432.777 279.073 mo
-432.777 178.239 li
-355.361 279.073 mo
-355.361 178.239 li
-432.777 279.073 mo
-355.361 279.073 li
-432.777 279.073 mo
-432.777 178.239 li
-432.777 279.073 mo
-355.361 279.073 li
-432.777 178.239 mo
-355.361 178.239 li
-432.777 279.073 mo
-432.777 178.239 li
-355.361 279.073 mo
-355.361 178.239 li
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 4684 23 <00020060ffd504f605e5002f003000fe405e290f27232626360e35214726
62267a0e7724096b08180e172502590e680eaa22030a0e3a2224220a0304
1c1886142f2f2b1c3a1403043a2b0930020a0e081124221f283030111825
17490825281a321f25114900252f193132a0216a89182b2b4ef44dedf4ed
4e10f64dedf4ed12392f1211393912113939003f3fed3fed12392f10ed11
1217392efd335d7131304379404d282e111f0008022602262d2506251a26
032c002b002d2e032c002b00052a082b011d131f2b001b15182b01191801
2d042b0009270b2b01250b012e042b000729042b001e121c2b0119161c2b
01002b2b2b2b10102b2b01103c2b2b2b2b103c2b2b2b2b2b2b818181005d
0116171633323736353427262f0126272635342433320415232627262322
06151417161f01161716151404232027263701011e073463fa705cb24b4c
a2c7c3518c0112fbe70143bb0f315bdab09a5a3bd0ce95518cfe9debfeee
9b9b03024d01da7d4e92203ea0783332252d2c355cb7c6fedff5763f7394
626c3220302f223b67c4f4d28c8bee040b00>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/S 23 def
end
CBIAAA+Helvetica /Encoding get
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 22{/.notdef}rp 
/P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c 
/.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-394.444 189.406 mo
(SR)
[6.67007 0 ]xsh
2 lw
-426.944 185.823 mo
-397.444 185.823 li
.0639048 0 .996094 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 2844 14 <000100af000004aa05bd000900394018071e040409031e0100020908066b
011a0b03082500190a0bb80157b32195dc182b2b4ef44dfd3c4e10f64de4
003f3f3ced12392ffd313013211521112115211123af03fbfccc02d1fd2f
c705bdb4fe42affd6400>CBIAAA+Helvetica AddT42Char 
1 4036 21 <00020050ff8b05e805e50015002700e4406b69036a1579038513961bc71b
064a1c591b5a1c64157515781cb719c81a083808181b021b191901151a1b
1a1a1a0001190100191e121a1a00191a191a1b18150206240001111e1500
02050d191a1b18042127213a0d03273a0105091e31111a29243109192829
d8216a66182b2b4ef44ded4e10f64ded003f33ed3fed1112173911123939
39011112393912173908872e2b087d10c50187102b3c2b3c87102bc42b3c
313018437940281f2606100b260f250725220c243200200e1e3201260624
3200230a2132011f102132012508273200002b2b2b012b2b2b2b2b2b8181
015d005d2507270e01232027261110371221201716111407060704363727
371736123510002322001110002105dc64e352bf71feaac2ab94be017401
85bb9223357efe576c28a164c05b41fef1ebeefeea010b01020479ad2d36
e0da0148012ad40110fac3fed08e83c87e1a11197e7b9568010276010301
3cfed1fec5fef7fec6000000>CBIAAA+Helvetica AddT42Char 
1 5092 24 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/F 14 def
/Q 21 def
/T 24 def
end
CBIAAA+Helvetica /Encoding get
dup 70 /F put
dup 81 /Q put
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 12{/.notdef}rp 
/F 9{/.notdef}rp /P /Q /R /S /T 12{/.notdef}rp 
/a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-394.444 201.572 mo
(PQFT)
[6.67007 7.78 6.10992 0 ]xsh
-426.944 198.073 mo
-397.444 198.073 li
.265019 .809232 0 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 2648 13 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>CBIAAA+Helvetica AddT42Char 
1 3440 18 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/D 13 def
/N 18 def
end
CBIAAA+Helvetica /Encoding get
dup 68 /D put
dup 78 /N put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F 7{/.notdef}rp /N /.notdef /P /Q 
/R /S /T 12{/.notdef}rp /a /.notdef /c /.notdef 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-394.444 213.822 mo
(PFDN)
[6.67007 6.10992 7.22 0 ]xsh
-426.944 210.239 mo
-397.444 210.239 li
.520012 0 .126131 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 2944 15 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>CBIAAA+Helvetica AddT42Char 
1 3392 17 <000100c90000019205bd00030017b8002b2bba00010000002e2b00b80000
2fb800022f303113331123c9c9c905bdfa43>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/G 15 def
/I 17 def
end
CBIAAA+Helvetica /Encoding get
dup 71 /G put
dup 73 /I put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /.notdef /I 4{/.notdef}rp /N 
/.notdef /P /Q /R /S /T 12{/.notdef}rp /a 
/.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o 2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-394.444 226.072 mo
(SIG)
[6.67007 2.78 0 ]xsh
-426.944 222.489 mo
-397.444 222.489 li
.627314 0 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-394.444 238.322 mo
(FT)
[6.10992 0 ]xsh
-426.944 234.739 mo
-397.444 234.739 li
.895628 .7673 0 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 5184 25 <000100250000077105bd000c0156409508090178077909780b8701860405
47014b02440348044d08420a8908870ac802c703c707c80b0c580b670768
0b890286038607890b9902960395079a0ba902a603a507aa0b0f0808070a
080b1908160a5707060b08040a023e284528052506060700250c0c0b0904
01030b020305060c050002080a0b0307080e17171a0705068640080304f4
0a0209f4800b0001860c190d8e5e182b194e10f4184dfd39391afd3939fd
39391afd3939194e456544e618003f173c3f173c12173901874d2eed872e
ed4b5279b4090a09080ab8019a400f120101020405030406070908090a08
b8019a400a12040403010102000c0b877d1008c5872e18052b087d10c587
0810c5872e18052b087d10c54b5179b301010002b8019ab6090a09040405
03b8019a400f090908040503040607010001020c0b870810c0870810c087
10057afd1808c4188710057afd7d08c4313001725d5d71005d7213090133
090133012309012301fd0115014cd8014c0115dafe7ed1feadfeabd1fe80
05bdfb5504abfb5504abfa4304c2fb3e05bd>CBIAAA+Helvetica AddT42Char 
1 7832 35 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>CBIAAA+Helvetica AddT42Char 
1 8172 37 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/W 25 def
/t 35 def
/v 37 def
end
CBIAAA+Helvetica /Encoding get
dup 87 /W put
dup 116 /t put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /.notdef /I 4{/.notdef}rp /N 
/.notdef /P /Q /R /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /.notdef /v 137{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-394.444 250.572 mo
(Wavelet)
[9.44 5.56 5 5.56 2.22 5.56 0 ]xsh
-426.944 246.989 mo
-397.444 246.989 li
0 .990631 1 .000396735 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 3280 16 <000100a10000052f05bd000b003f402108091e0302020401020a07080407
2506051a0d010a250b00190c0c0da0217670182b2b104ef43c4dfd3c4e10
f63c4dfd3c003f3c3f3c392f3cfd3c3130133311211133112311211123a1
c902fcc9c9fd04c905bdfda1025ffa4302affd510000>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/H 16 def
end
CBIAAA+Helvetica /Encoding get
dup 72 /H put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /H /I 4{/.notdef}rp /N 
/.notdef /P /Q /R /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /.notdef /v 137{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-394.444 262.822 mo
(HFT)
[7.22 6.10992 0 ]xsh
-426.944 259.156 mo
-397.444 259.156 li
.653162 .154971 0 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CBIAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CBIAAA+Helvetica gcheck setglobal} if
1 3612 19 <00030050ffd505e805e5000f001b001c008a402c8705c700c701c302c808
c90a064308153a0f031b3a07091c021c1c0b1231031a1e18310b191d1ed8
216a66182b2b4ef44ded4e10f64ded12392f003f3fed3fed313043794032
001a0d26012509250526160e18320014001232011a081832001006123201
170c1532011302153201190a1b320011041b32002b2b2b2b012b2b2b2b2b
2b2b2b81005d001716111007022120272611103712210012351000232200
1114122103049bbb92a7c4fe95feadc2ad94be0174011bebfef1ebe4fee0
f701150e05e5fac3fed0feb7daff00e0d8014a012ad40110faa20179f501
03013cfec7fecff4feb1055e>CBIAAA+Helvetica AddT42Char 
1 7992 36 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>CBIAAA+Helvetica AddT42Char 
CBIAAA+Helvetica /CharStrings get begin
/O 19 def
/u 36 def
end
CBIAAA+Helvetica /Encoding get
dup 79 /O put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBY+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /H /I 4{/.notdef}rp /N 
/O /P /Q /R /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /u /v 137{/.notdef}rp]
YJZMBY+Helvetica nf
YJZMBY+Helvetica*1 [10 0 0 -10 0 0 ]msf
-394.444 274.989 mo
(Ours)
[7.78 5.56 3.32993 0 ]xsh
-426.944 271.406 mo
-397.444 271.406 li
@
gsave
-495.884 321.906 mo
-47.9441 321.906 li
-47.9441 658.073 li
-495.884 658.073 li
cp
clp
gsave
-495.944 658.906 mo
-47.9441 658.906 li
-47.9441 321.906 li
-495.944 321.906 li
cp
clp
-495.944 658.156 mo
-47.8611 658.156 li
-47.8611 321.906 li
-495.944 321.906 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
grestore
grestore
-437.694 347.156 mo
-90.5271 347.156 li
-90.5271 621.073 li
-437.694 621.073 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
.5 lw
-437.694 621.073 mo
-437.694 347.156 li
-90.5271 347.156 li
-90.5271 621.073 li
-437.694 621.073 li
@
.333 lw
[.5 4 ] 0 dsh
-437.694 621.073 mo
-90.5271 621.073 li
-437.694 581.906 mo
-90.5271 581.906 li
-437.694 542.738 mo
-90.5271 542.738 li
-437.694 503.656 mo
-90.5271 503.656 li
-437.694 464.488 mo
-90.5271 464.488 li
-437.694 425.406 mo
-90.5271 425.406 li
-437.694 386.239 mo
-90.5271 386.239 li
-437.694 347.156 mo
-90.5271 347.156 li
1 /0 /CSD get_res sepcs
1 sep
@
.5 lw
[] 0 dsh
-437.694 621.073 mo
-90.5271 621.073 li
-437.694 347.156 mo
-90.5271 347.156 li
-437.694 621.073 mo
-437.694 347.156 li
-90.5271 621.073 mo
-90.5271 347.156 li
-437.694 621.073 mo
-90.5271 621.073 li
-437.694 621.073 mo
-437.694 347.156 li
-399.194 621.073 mo
-399.194 617.573 li
-399.194 347.156 mo
-399.194 350.573 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /VXVBAA+Helvetica
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000036c6670
676d000000000000042800000a1d676c796619113cdf0000139800001f80
686561640000000000000e4800000036686865610000000000000e800000
0024686d74780000000000000ea4000000946c6f636185988caa00000f38
0000004c6d6178700000000000000f84000000206e616d655c6d6d870000
0fa400000024707265700000000000000fc8000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0401bb000598a8a20b003265358
2321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db8005c2c4b535845441b2121592d00000000010000
00000000299acaab5f0f3cf500110800000000005f4d8f0000000000cff2
eef7f865fc270b9108f9000000090001000000000000000100000629fe29
00000c01f865fced0b910001000000000000000000000000000000250512
004202390000023900af04730040047300c4047300400473003104730034
047300420473004d0473004b05c700a504e300af0639006305c700a10239
00c905c7009c06390050055600af0639005005c700b40556006004e30021
078d0025047300520400003b0473004801c7008401c7008906aa00840473
00840473003b02aa00890400004202390017047300800400000b00000036
0036005600c400ea0176022202700304039a03e404460478052005580570
05c60644069a075407de08aa08d809a40a6e0af00bba0be80c0a0c860ce2
0d5a0da00e800ed00f2a0fc000010000002500920009006b000700020010
0010005d000007e80a1d0004000100000001001200010000000000060010
00004a525746494e2b48656c7665746963610000b800532bb800492bb800
3f2bb800352bb8002b2b4118008001a6009001a600a001a600030069018b
0079018b0089018b0099018b00040089018b0099018b00a9018b00b9018b
b2040840ba0179001a014a400b041f5414191f180a0b1fd2b80106b49e1f
d918e3bb0119000d00e10119b20d0009410a01a0019f0064001f01a50025
017a00480028019ab3296c1f60410a01a9007001a9008001a90003008001
a9000101a9b21e321fbe012c00250401001f0126001e0401b61fe7312d1f
e531b80201b21fc227b80401b21fc11eb80201400f1fc01d9e1fbf1d671f
be1d671fab27b80401b21faa29b80401b61fa91d6c1f931eb8019ab21f92
1db80101b21f911db80101b21f751db80201b61f6d29961f6431b8019ab2
1f4c96b802abb21f391db80156400b1f3638211f351de41f2f27b8080140
0b1f2d1d4c1f2a31cd1f241db802abb21f201eb8012540111f1c1d931f3a
1d4c1f1e1d45273a1d4527bb01aa019b002a019bb2254a1fba019b002501
7ab349293896b8017bb348283125b8017a403648289629482725294c1f25
2946272729482756c80784075b07410732072b072807260721071b071408
120810080e080c080a08080807b801acb23f1f06bb01ab003f001f01abb3
08060805b801aeb23f1f04bb01ad003f001f01adb70804080208000814b8
ffe0b40000010014b801abb41000000100b801abb606100000010006b801
adb300000100b801ad401f04000001000410000001001002000001000200
000001000002010802004a00b0018db806008516763f183f123e11394644
3e113946443e113946443e113946443e113946443e11394660443e113946
60443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b
2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376706a664565234560
23456560234560b08b766818b080622020b16a704565234520b003266062
636820b003266165b070236544b06a234420b176664565234520b0032660
62636820b003266165b066236544b0762344b10066455458b166406544b2
7640764523614459b36242725d456523456023456560234560b089766818
b080622020b172424565234520b003266062636820b003266165b0422365
44b072234420b1625d4565234520b003266062636820b003266165b05d23
6544b0622344b1005d455458b15d406544b262406245236144592b2b2b2b
456953427374b8019a2045694b20b02853b049515a58b020615944b801a6
20456944750000>
[8065 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 4028 21 <00020060ffd504f605e5002f003000fe405e290f27232626360e35214726
62267a0e7724096b08180e172502590e680eaa22030a0e3a2224220a0304
1c1886142f2f2b1c3a1403043a2b0930020a0e081124221f283030111825
17490825281a321f25114900252f193132a0216a89182b2b4ef44dedf4ed
4e10f64dedf4ed12392f1211393912113939003f3fed3fed12392f10ed11
1217392efd335d7131304379404d282e111f0008022602262d2506251a26
032c002b002d2e032c002b00052a082b011d131f2b001b15182b01191801
2d042b0009270b2b01250b012e042b000729042b001e121c2b0119161c2b
01002b2b2b2b10102b2b01103c2b2b2b2b103c2b2b2b2b2b2b818181005d
0116171633323736353427262f0126272635342433320415232627262322
06151417161f01161716151404232027263701011e073463fa705cb24b4c
a2c7c3518c0112fbe70143bb0f315bdab09a5a3bd0ce95518cfe9debfeee
9b9b03024d01da7d4e92203ea0783332252d2c355cb7c6fedff5763f7394
626c3220302f223b67c4f4d28c8bee040b00>VXVBAA+Helvetica AddT42Char 
1 3752 20 <000200b40000057805bd0009002700944012070d49014805590158056905
641478050816bb01300119001b011c40422321202660127112751403121e
1f141c1503211e161404261224251e0009091b071e0b02261c1b08202515
1f251603310f691b1a29082625270a192829d6219566182b2b4ef43c4dfd
3c4e10f64df4edd4edd4ed003f3c3c3ffd12392f3cfd3c39111739011112
39391239395d1112392b3130015d01323635342726232111032132171615
1406071e011f011617161715232e012f012627262321112303478ca3723d
66fe1ac702a8a86dcf6d6256570507030b122ef40a0c040c0764397afe3b
c7031c70929d391efe0a02a1315efd84a833237280c55429461421133c56
f590311bfd8a>VXVBAA+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g21 21 def
/g20 20 def
end
VXVBAA+Helvetica /Encoding get
dup 33 /g21 put
dup 34 /g20 put
pop
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica /VXVBAA+Helvetica findfont ct_VMDictPut
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 221{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-406.111 633.156 mo
(!")
[6.67007 0 ]xsh
-360.611 621.073 mo
-360.611 617.573 li
-360.611 347.156 mo
-360.611 350.573 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 3208 18 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>VXVBAA+Helvetica AddT42Char 
1 3380 19 <00020050ff8b05e805e50015002700e4406b69036a1579038513961bc71b
064a1c591b5a1c64157515781cb719c81a083808181b021b191901151a1b
1a1a1a0001190100191e121a1a00191a191a1b18150206240001111e1500
02050d191a1b18042127213a0d03273a0105091e31111a29243109192829
d8216a66182b2b4ef44ded4e10f64ded003f33ed3fed1112173911123939
39011112393912173908872e2b087d10c50187102b3c2b3c87102bc42b3c
313018437940281f2606100b260f250725220c243200200e1e3201260624
3200230a2132011f102132012508273200002b2b2b012b2b2b2b2b2b8181
015d005d2507270e01232027261110371221201716111407060704363727
371736123510002322001110002105dc64e352bf71feaac2ab94be017401
85bb9223357efe576c28a164c05b41fef1ebeefeea010b01020479ad2d36
e0da0148012ad40110fac3fed08e83c87e1a11197e7b9568010276010301
3cfed1fec5fef7fec6000000>VXVBAA+Helvetica AddT42Char 
1 2188 12 <000100af000004aa05bd000900394018071e040409031e0100020908066b
011a0b03082500190a0bb80157b32195dc182b2b4ef44dfd3c4e10f64de4
003f3f3ced12392ffd313013211521112115211123af03fbfccc02d1fd2f
c705bdb4fe42affd6400>VXVBAA+Helvetica AddT42Char 
1 4436 22 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g18 18 def
/g19 19 def
/g12 12 def
/g22 22 def
end
VXVBAA+Helvetica /Encoding get
dup 35 /g18 put
dup 36 /g19 put
dup 37 /g12 put
dup 38 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 217{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-373.944 633.156 mo
(#$%&)
[6.67007 7.78 6.10992 0 ]xsh
-322.027 621.073 mo
-322.027 617.573 li
-322.027 347.156 mo
-322.027 350.573 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 1992 11 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>VXVBAA+Helvetica AddT42Char 
1 2784 16 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g11 11 def
/g16 16 def
end
VXVBAA+Helvetica /Encoding get
dup 39 /g11 put
dup 40 /g16 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 215{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-335.611 633.156 mo
(#%'\()
[6.67007 6.10992 7.22 0 ]xsh
-283.444 621.073 mo
-283.444 617.573 li
-283.444 347.156 mo
-283.444 350.573 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 2736 15 <000100c90000019205bd00030017b8002b2bba00010000002e2b00b80000
2fb800022f303113331123c9c9c905bdfa43>VXVBAA+Helvetica AddT42Char 
1 2288 13 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g15 15 def
/g13 13 def
end
VXVBAA+Helvetica /Encoding get
dup 41 /g15 put
dup 42 /g13 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 213{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-292.027 633.156 mo
(!\)*)
[6.67007 2.78 0 ]xsh
-244.861 621.073 mo
-244.861 617.573 li
-244.861 347.156 mo
-244.861 350.573 li
@
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-250.944 633.156 mo
(%&)
[6.10992 0 ]xsh
-206.277 621.073 mo
-206.277 617.573 li
-206.277 347.156 mo
-206.277 350.573 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 4528 23 <000100250000077105bd000c0156409508090178077909780b8701860405
47014b02440348044d08420a8908870ac802c703c707c80b0c580b670768
0b890286038607890b9902960395079a0ba902a603a507aa0b0f0808070a
080b1908160a5707060b08040a023e284528052506060700250c0c0b0904
01030b020305060c050002080a0b0307080e17171a0705068640080304f4
0a0209f4800b0001860c190d8e5e182b194e10f4184dfd39391afd3939fd
39391afd3939194e456544e618003f173c3f173c12173901874d2eed872e
ed4b5279b4090a09080ab8019a400f120101020405030406070908090a08
b8019a400a12040403010102000c0b877d1008c5872e18052b087d10c587
0810c5872e18052b087d10c54b5179b301010002b8019ab6090a09040405
03b8019a400f090908040503040607010001020c0b870810c0870810c087
10057afd1808c4188710057afd7d08c4313001725d5d71005d7213090133
090133012309012301fd0115014cd8014c0115dafe7ed1feadfeabd1fe80
05bdfb5504abfb5504abfa4304c2fb3e05bd>VXVBAA+Helvetica AddT42Char 
1 4936 24 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>VXVBAA+Helvetica AddT42Char 
1 7764 36 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>VXVBAA+Helvetica AddT42Char 
1 5600 26 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>VXVBAA+Helvetica AddT42Char 
1 6096 28 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>VXVBAA+Helvetica AddT42Char 
1 7424 34 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g23 23 def
/g24 24 def
/g36 36 def
/g26 26 def
/g28 28 def
/g34 34 def
end
VXVBAA+Helvetica /Encoding get
dup 43 /g23 put
dup 44 /g24 put
dup 45 /g36 put
dup 46 /g26 put
dup 47 /g28 put
dup 48 /g34 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 207{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-223.861 633.156 mo
(+,-./.0)
[9.44 5.56 5 5.56 2.22 5.56 0 ]xsh
-167.694 621.073 mo
-167.694 617.573 li
-167.694 347.156 mo
-167.694 350.573 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 2624 14 <000100a10000052f05bd000b003f402108091e0302020401020a07080407
2506051a0d010a250b00190c0c0da0217670182b2b104ef43c4dfd3c4e10
f63c4dfd3c003f3c3f3c392f3cfd3c3130133311211133112311211123a1
c902fcc9c9fd04c905bdfda1025ffa4302affd510000>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g14 14 def
end
VXVBAA+Helvetica /Encoding get
dup 49 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 206{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-177.361 633.156 mo
(1%&)
[7.22 6.10992 0 ]xsh
-129.111 621.073 mo
-129.111 617.573 li
-129.111 347.156 mo
-129.111 350.573 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 2956 17 <00030050ffd505e805e5000f001b001c008a402c8705c700c701c302c808
c90a064308153a0f031b3a07091c021c1c0b1231031a1e18310b191d1ed8
216a66182b2b4ef44ded4e10f64ded12392f003f3fed3fed313043794032
001a0d26012509250526160e18320014001232011a081832001006123201
170c1532011302153201190a1b320011041b32002b2b2b2b012b2b2b2b2b
2b2b2b81005d001716111007022120272611103712210012351000232200
1114122103049bbb92a7c4fe95feadc2ad94be0174011bebfef1ebe4fee0
f701150e05e5fac3fed0feb7daff00e0d8014a012ad40110faa20179f501
03013cfec7fecff4feb1055e>VXVBAA+Helvetica AddT42Char 
1 7584 35 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>VXVBAA+Helvetica AddT42Char 
1 6836 32 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>VXVBAA+Helvetica AddT42Char 
1 6976 33 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g17 17 def
/g35 35 def
/g32 32 def
/g33 33 def
end
VXVBAA+Helvetica /Encoding get
dup 50 /g17 put
dup 51 /g35 put
dup 52 /g32 put
dup 53 /g33 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 202{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-139.944 633.156 mo
(2345)
[7.78 5.56 3.32993 0 ]xsh
-437.694 621.073 mo
-434.277 621.073 li
-90.5271 621.073 mo
-94.0271 621.073 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 172 3 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g3 3 def
end
VXVBAA+Helvetica /Encoding get
dup 54 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 201{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-446.111 624.739 mo
(6)sh
-437.694 581.906 mo
-434.277 581.906 li
-90.5271 581.906 mo
-94.0271 581.906 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 108 2 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>VXVBAA+Helvetica AddT42Char 
1 392 4 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g2 2 def
/g4 4 def
end
VXVBAA+Helvetica /Encoding get
dup 55 /g2 put
dup 56 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 199{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 585.572 mo
(678)
[5.56 2.78 0 ]xsh
-437.694 542.738 mo
-434.277 542.738 li
-90.5271 542.738 mo
-94.0271 542.738 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 468 5 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g5 5 def
end
VXVBAA+Helvetica /Encoding get
dup 57 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 198{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 546.406 mo
(679)
[5.56 2.78 0 ]xsh
-437.694 503.656 mo
-434.277 503.656 li
-90.5271 503.656 mo
-94.0271 503.656 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 748 6 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g6 6 def
end
VXVBAA+Helvetica /Encoding get
dup 58 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 197{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 507.322 mo
(67:)
[5.56 2.78 0 ]xsh
-437.694 464.488 mo
-434.277 464.488 li
-90.5271 464.488 mo
-94.0271 464.488 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 1092 7 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g7 7 def
end
VXVBAA+Helvetica /Encoding get
dup 59 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 196{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 468.156 mo
(67;)
[5.56 2.78 0 ]xsh
-437.694 425.406 mo
-434.277 425.406 li
-90.5271 425.406 mo
-94.0271 425.406 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 1248 8 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g8 8 def
end
VXVBAA+Helvetica /Encoding get
dup 60 /g8 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 195{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 429.072 mo
(67<)
[5.56 2.78 0 ]xsh
-437.694 386.239 mo
-434.277 386.239 li
-90.5271 386.239 mo
-94.0271 386.239 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 1544 9 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g9 9 def
end
VXVBAA+Helvetica /Encoding get
dup 61 /g9 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 194{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 389.906 mo
(67=)
[5.56 2.78 0 ]xsh
-437.694 347.156 mo
-434.277 347.156 li
-90.5271 347.156 mo
-94.0271 347.156 li
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 1844 10 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g10 10 def
end
VXVBAA+Helvetica /Encoding get
dup 62 /g10 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 193{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-454.444 350.822 mo
(67>)
[5.56 2.78 0 ]xsh
-437.694 621.073 mo
-90.5271 621.073 li
-437.694 347.156 mo
-90.5271 347.156 li
-437.694 621.073 mo
-437.694 347.156 li
-90.5271 621.073 mo
-90.5271 347.156 li
@
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-411.194 421.656 mo
-404.277 421.656 li
-404.277 621.073 li
-411.194 621.073 li
cp
1 .972106 .102541 .117464 cmyk
f
-411.194 621.073 mo
-411.194 421.656 li
-404.277 421.656 li
-404.277 621.073 li
-411.194 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-372.611 405.823 mo
-365.694 405.823 li
-365.694 621.073 li
-372.611 621.073 li
cp
1 .972106 .102541 .117464 cmyk
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-372.611 621.073 mo
-372.611 405.823 li
-365.694 405.823 li
-365.694 621.073 li
-372.611 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-334.027 376.406 mo
-327.194 376.406 li
-327.194 621.073 li
-334.027 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-334.027 621.073 mo
-334.027 376.406 li
-327.194 376.406 li
-327.194 621.073 li
-334.027 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-295.444 394.406 mo
-288.611 394.406 li
-288.611 621.073 li
-295.444 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-295.444 621.073 mo
-295.444 394.406 li
-288.611 394.406 li
-288.611 621.073 li
-295.444 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-256.861 408.323 mo
-250.028 408.323 li
-250.028 621.073 li
-256.861 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-256.861 621.073 mo
-256.861 408.323 li
-250.027 408.323 li
-250.027 621.073 li
-256.861 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-218.277 357.656 mo
-211.444 357.656 li
-211.444 621.073 li
-218.277 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-218.277 621.073 mo
-218.277 357.656 li
-211.444 357.656 li
-211.444 621.073 li
-218.277 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-179.694 371.239 mo
-172.861 371.239 li
-172.861 621.071 li
-179.694 621.071 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-179.694 621.073 mo
-179.694 371.239 li
-172.861 371.239 li
-172.861 621.073 li
-179.694 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-141.111 355.573 mo
-134.278 355.573 li
-134.278 621.073 li
-141.111 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-141.111 621.073 mo
-141.111 355.573 li
-134.277 355.573 li
-134.277 621.073 li
-141.111 621.073 li
-437.694 621.073 mo
-90.5271 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
-402.611 456.156 mo
-395.694 456.156 li
-395.694 621.073 li
-402.611 621.073 li
cp
.406867 0 .821653 0 cmyk
f
-402.611 621.073 mo
-402.611 456.156 li
-395.694 456.156 li
-395.694 621.073 li
-402.611 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-364.027 451.738 mo
-357.194 451.738 li
-357.194 621.071 li
-364.027 621.071 li
cp
.406867 0 .821653 0 cmyk
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-364.027 621.073 mo
-364.027 451.738 li
-357.194 451.738 li
-357.194 621.073 li
-364.027 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-325.444 444.573 mo
-318.611 444.573 li
-318.611 621.073 li
-325.444 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-325.444 621.073 mo
-325.444 444.573 li
-318.611 444.573 li
-318.611 621.073 li
-325.444 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-286.861 469.738 mo
-280.028 469.738 li
-280.028 621.071 li
-286.861 621.071 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-286.861 621.073 mo
-286.861 469.738 li
-280.027 469.738 li
-280.027 621.073 li
-286.861 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-248.277 463.988 mo
-241.444 463.988 li
-241.444 621.071 li
-248.277 621.071 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-248.277 621.073 mo
-248.277 463.988 li
-241.444 463.988 li
-241.444 621.073 li
-248.277 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-209.694 466.156 mo
-202.861 466.156 li
-202.861 621.073 li
-209.694 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-209.694 621.073 mo
-209.694 466.156 li
-202.861 466.156 li
-202.861 621.073 li
-209.694 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-171.111 414.988 mo
-164.278 414.988 li
-164.278 621.071 li
-171.111 621.071 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-171.111 621.073 mo
-171.111 414.988 li
-164.277 414.988 li
-164.277 621.073 li
-171.111 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-132.611 399.406 mo
-125.694 399.406 li
-125.694 621.073 li
-132.611 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-132.611 621.073 mo
-132.611 399.406 li
-125.694 399.406 li
-125.694 621.073 li
-132.611 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-394.027 442.656 mo
-387.194 442.656 li
-387.194 621.073 li
-394.027 621.073 li
cp
.290196 1 1 .385595 cmyk
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-394.027 621.073 mo
-394.027 442.656 li
-387.194 442.656 li
-387.194 621.073 li
-394.027 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-355.444 429.573 mo
-348.611 429.573 li
-348.611 621.073 li
-355.444 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-355.444 621.073 mo
-355.444 429.573 li
-348.611 429.573 li
-348.611 621.073 li
-355.444 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-316.861 416.156 mo
-310.028 416.156 li
-310.028 621.073 li
-316.861 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-316.861 621.073 mo
-316.861 416.156 li
-310.027 416.156 li
-310.027 621.073 li
-316.861 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-278.277 438.656 mo
-271.444 438.656 li
-271.444 621.073 li
-278.277 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-278.277 621.073 mo
-278.277 438.656 li
-271.444 438.656 li
-271.444 621.073 li
-278.277 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-239.694 435.656 mo
-232.861 435.656 li
-232.861 621.073 li
-239.694 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-239.694 621.073 mo
-239.694 435.656 li
-232.861 435.656 li
-232.861 621.073 li
-239.694 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-201.111 417.656 mo
-194.278 417.656 li
-194.278 621.073 li
-201.111 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-201.111 621.073 mo
-201.111 417.656 li
-194.277 417.656 li
-194.277 621.073 li
-201.111 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-162.611 396.239 mo
-155.694 396.239 li
-155.694 621.071 li
-162.611 621.071 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-162.611 621.073 mo
-162.611 396.239 li
-155.694 396.239 li
-155.694 621.073 li
-162.611 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
-124.027 381.073 mo
-117.11 381.073 li
-117.11 621.073 li
-124.027 621.073 li
cp
f
gsave
-437.694 621.156 mo
-90.4441 621.156 li
-90.4441 347.156 li
-437.694 347.156 li
cp
clp
-124.027 621.073 mo
-124.027 381.073 li
-117.111 381.073 li
-117.111 621.073 li
-124.027 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if

1 0 1 <> VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g1 1 def
end
VXVBAA+Helvetica /Encoding get
dup 63 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 /g1 
192{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-439.111 624.656 mo
(?)sh
-91.8608 350.656 mo
(?)sh
-432.777 352.156 mo
-339.694 352.156 li
-339.694 392.156 li
-432.777 392.156 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
-432.777 392.156 mo
-432.777 352.156 li
-339.694 352.156 li
-339.694 392.156 li
-432.777 392.156 li
@
-432.777 392.156 mo
-339.694 392.156 li
-432.777 352.156 mo
-339.694 352.156 li
-432.777 392.156 mo
-432.777 352.156 li
-339.694 392.156 mo
-339.694 352.156 li
-432.777 392.156 mo
-339.694 392.156 li
-432.777 392.156 mo
-432.777 352.156 li
-432.777 392.156 mo
-339.694 392.156 li
-432.777 352.156 mo
-339.694 352.156 li
-432.777 392.156 mo
-432.777 352.156 li
-339.694 392.156 mo
-339.694 352.156 li
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 5340 25 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>VXVBAA+Helvetica AddT42Char 
1 6004 27 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>VXVBAA+Helvetica AddT42Char 
1 6596 31 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>VXVBAA+Helvetica AddT42Char 
1 6412 30 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g25 25 def
/g27 27 def
/g31 31 def
/g30 30 def
end
VXVBAA+Helvetica /Encoding get
dup 64 /g25 put
dup 65 /g27 put
dup 66 /g31 put
dup 67 /g30 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 /g1 
/g25 /g27 /g31 /g30 188{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-392.777 363.322 mo
(#4.)sh
-377.217 363.322 mo
(@A5ABC)
[5 2.22 5 2.22 5.56 0 ]xsh
-426.694 355.239 mo
-395.944 355.239 li
-395.944 364.322 li
-426.694 364.322 li
cp
1 .972106 .102541 .117464 cmyk
f
-426.694 364.323 mo
-426.694 355.239 li
-395.944 355.239 li
-395.944 364.323 li
-426.694 364.323 li
1 /0 /CSD get_res sepcs
1 sep
@
0 0 0 1 cmyk
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-392.777 375.739 mo
(".@,//)
[7.22 5.56 5 5.56 2.22 0 ]xsh
-426.694 367.573 mo
-395.944 367.573 li
-395.944 376.656 li
-426.694 376.656 li
cp
.406867 0 .821653 0 cmyk
f
-426.694 376.656 mo
-426.694 367.573 li
-395.944 367.573 li
-395.944 376.656 li
-426.694 376.656 li
1 /0 /CSD get_res sepcs
1 sep
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: VXVBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal VXVBAA+Helvetica gcheck setglobal} if
1 6164 29 <0001008400000625044700260085403b0708070e060f1708170e170f2708
270e270f4819560b670b0c23250a1a1d23190a02041725211d171d0d0607
00061b1c2503130a2817171a112914b80101b21a291db80101400a00012e
25292600192728b8010db3216242182b2b4ef43c4dfde410f4edf4fd4e45
6544e6003f173c3f3f3c4deded111217390111123912393130005d133315
36373633321716173e013332171615112311342623220615112311342726
23220615112384b240345971804e2c243ca265d84e2abb6b4d6a99b71a29
7066a7b4042f984f243d3f244656539c548efd3702e86b508ea6fd9102bb
6d324b9ecffdc800>VXVBAA+Helvetica AddT42Char 
VXVBAA+Helvetica /CharStrings get begin
/g29 29 def
end
VXVBAA+Helvetica /Encoding get
dup 68 /g29 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBZ+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 /g1 
/g25 /g27 /g31 /g30 /g29 187{/.notdef}rp]
YJZMBZ+Helvetica nf
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-392.777 388.072 mo
(%)sh
%ADOBeginSubsetFont: SPVAAA+Helvetica-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (SPVAAA+Helvetica)
%%Title: (SPVAAA+Helvetica Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /SPVAAA+Helvetica def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-951 -481 1446 1122} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 2197 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7C
A97DB1343CA> |
239 <001C60D8A8C9B7F374C6243061E982D378A14DF0A305> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /SPVAAA+Helvetica-Identity-H /Identity-H 0 [/SPVAAA+Helvetica] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YJZMCA+Helvetica /SPVAAA+Helvetica-Identity-H findfont ct_VMDictPut
YJZMCA+Helvetica [10 0 0 -10 0 0 ]msf
-386.669 388.072 mo
(\000\357)sh
YJZMBZ+Helvetica*1 [10 0 0 -10 0 0 ]msf
-380.829 388.072 mo
(D.,534.)
[8.32993 5.56 5.56 5 5.56 3.32993 0 ]xsh
-426.694 379.906 mo
-395.944 379.906 li
-395.944 388.989 li
-426.694 388.989 li
cp
.290196 1 1 .385595 cmyk
f
-426.694 388.989 mo
-426.694 379.906 li
-395.944 379.906 li
-395.944 388.989 li
-426.694 388.989 li
1 /0 /CSD get_res sepcs
1 sep
@
gsave
-18.8841 -15.0945 mo
429.056 -15.0945 li
429.056 321.073 li
-18.8841 321.073 li
cp
clp
gsave
-18.9441 321.906 mo
429.056 321.906 li
429.056 -15.0945 li
-18.9441 -15.0945 li
cp
clp
-18.9441 321.156 mo
429.139 321.156 li
429.139 -15.0945 li
-18.9441 -15.0945 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
grestore
grestore
39.3059 10.1555 mo
386.473 10.1555 li
386.473 284.073 li
39.3059 284.073 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
39.3059 284.073 mo
39.3059 10.1555 li
386.473 10.1555 li
386.473 284.073 li
39.3059 284.073 li
@
.333 lw
[.5 4 ] 0 dsh
39.3059 284.073 mo
39.3059 10.1555 li
73.9729 284.073 mo
73.9729 10.1555 li
108.723 284.073 mo
108.723 10.1555 li
143.389 284.073 mo
143.389 10.1555 li
178.139 284.073 mo
178.139 10.1555 li
212.889 284.073 mo
212.889 10.1555 li
247.556 284.073 mo
247.556 10.1555 li
282.306 284.073 mo
282.306 10.1555 li
316.973 284.073 mo
316.973 10.1555 li
351.723 284.073 mo
351.723 10.1555 li
386.473 284.073 mo
386.473 10.1555 li
39.3059 284.073 mo
386.473 284.073 li
39.3059 256.656 mo
386.473 256.656 li
39.3059 229.239 mo
386.473 229.239 li
39.3059 201.823 mo
386.473 201.823 li
39.3059 174.489 mo
386.473 174.489 li
39.3059 147.073 mo
386.473 147.073 li
39.3059 119.656 mo
386.473 119.656 li
39.3059 92.3226 mo
386.473 92.3226 li
39.3059 64.9055 mo
386.473 64.9055 li
39.3059 37.4885 mo
386.473 37.4885 li
39.3059 10.1555 mo
386.473 10.1555 li
1 /0 /CSD get_res sepcs
1 sep
@
.5 lw
[] 0 dsh
39.3059 284.073 mo
386.473 284.073 li
39.3059 10.1555 mo
386.473 10.1555 li
39.3059 284.073 mo
39.3059 10.1555 li
386.473 284.073 mo
386.473 10.1555 li
39.3059 284.073 mo
386.473 284.073 li
39.3059 284.073 mo
39.3059 10.1555 li
39.3059 284.073 mo
39.3059 280.573 li
39.3059 10.1555 mo
39.3059 13.5725 li
@
%ADOBeginSubsetFont: CUFAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /CUFAAA+Helvetica
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000036c6670
676d000000000000042800000a1d676c7966e480a8dd000013a000002118
686561640000000000000e4800000036686865610000000000000e800000
0024686d74780000000000000ea4000000986c6f63619a6e91b400000f3c
0000004e6d6178700000000000000f8c000000206e616d65587f758c0000
0fac00000024707265700000000000000fd0000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0401bb000598a8a20b003265358
2321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db8005c2c4b535845441b2121592d00000000010000
0000000037422dfa5f0f3cf500110800000000005f4d8f0000000000cff2
eef7f865fc270b9108f9000000090001000000000000000100000629fe29
00000c01f865fced0b910001000000000000000000000000000000260512
004202390000023900af04730040047300c4047300400473003104730034
047300420473004d0473004b047300420473004905c700a504e300af0639
006305c700a1023900c905c7009c06390050055600af0639005005c700b4
0556006004e30021078d0025047300520400003b0473004801c7008401c7
0089047300840473003b02aa00890400004202390017047300800400000b
000000360036005600c400ea0176022202700304039a03e40496052c058e
05c0066806a006b8070e078c07e2089c092609f20a200aec0bb60c380d02
0d300d520dae0e260e6c0f4c0f9c0ff6108c000000010000002600920009
006b0007000200100010005d000007e80a1d000400010000000100120001
000000000006001000004b4b5358505a2b48656c7665746963610000b800
532bb800492bb8003f2bb800352bb8002b2b4118008001a6009001a600a0
01a600030069018b0079018b0089018b0099018b00040089018b0099018b
00a9018b00b9018bb2040840ba0179001a014a400b041f5414191f180a0b
1fd2b80106b49e1fd918e3bb0119000d00e10119b20d0009410a01a0019f
0064001f01a50025017a00480028019ab3296c1f60410a01a9007001a900
8001a90003008001a9000101a9b21e321fbe012c00250401001f0126001e
0401b61fe7312d1fe531b80201b21fc227b80401b21fc11eb80201400f1f
c01d9e1fbf1d671fbe1d671fab27b80401b21faa29b80401b61fa91d6c1f
931eb8019ab21f921db80101b21f911db80101b21f751db80201b61f6d29
961f6431b8019ab21f4c96b802abb21f391db80156400b1f3638211f351d
e41f2f27b80801400b1f2d1d4c1f2a31cd1f241db802abb21f201eb80125
40111f1c1d931f3a1d4c1f1e1d45273a1d4527bb01aa019b002a019bb225
4a1fba019b0025017ab349293896b8017bb348283125b8017a4036482896
29482725294c1f252946272729482756c80784075b07410732072b072807
260721071b071408120810080e080c080a08080807b801acb23f1f06bb01
ab003f001f01abb308060805b801aeb23f1f04bb01ad003f001f01adb708
04080208000814b8ffe0b40000010014b801abb41000000100b801abb606
100000010006b801adb300000100b801ad401f0400000100041000000100
1002000001000200000001000002010802004a00b0018db806008516763f
183f123e113946443e113946443e113946443e113946443e113946443e11
394660443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358
b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376
706a66456523456023456560234560b08b766818b080622020b16a704565
234520b003266062636820b003266165b070236544b06a234420b1766645
65234520b003266062636820b003266165b066236544b0762344b1006645
5458b166406544b27640764523614459b36242725d456523456023456560
234560b089766818b080622020b172424565234520b003266062636820b0
03266165b042236544b072234420b1625d4565234520b003266062636820
b003266165b05d236544b0622344b1005d455458b15d406544b262406245
236144592b2b2b2b456953427374b8019a2045694b20b02853b049515a58
b020615944b801a620456944750000>
[8473 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 172 3 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>CUFAAA+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/zero 3 def
end
CUFAAA+Helvetica /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/YJZMCB+Helvetica /CUFAAA+Helvetica findfont ct_VMDictPut
/YJZMCB+Helvetica*1 
[48{/.notdef}rp /zero 207{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
36.5559 296.156 mo
(0)sh
73.9729 284.073 mo
73.9729 280.573 li
73.9729 10.1555 mo
73.9729 13.5725 li
@
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 108 2 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>CUFAAA+Helvetica AddT42Char 
1 392 4 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/period 2 def
/one 4 def
end
CUFAAA+Helvetica /Encoding get
dup 46 /period put
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one 206{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
67.0559 296.156 mo
(0.1)
[5.56 2.78 0 ]xsh
108.723 284.073 mo
108.723 280.573 li
108.723 10.1555 mo
108.723 13.5725 li
@
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 468 5 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/two 5 def
end
CUFAAA+Helvetica /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two 205{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
101.806 296.156 mo
(0.2)
[5.56 2.78 0 ]xsh
143.389 284.073 mo
143.389 280.573 li
143.389 10.1555 mo
143.389 13.5725 li
@
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 748 6 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/three 6 def
end
CUFAAA+Helvetica /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three 204{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
136.473 296.156 mo
(0.3)
[5.56 2.78 0 ]xsh
178.139 284.073 mo
178.139 280.573 li
178.139 10.1555 mo
178.139 13.5725 li
@
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 1092 7 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/four 7 def
end
CUFAAA+Helvetica /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
203{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
171.223 296.156 mo
(0.4)
[5.56 2.78 0 ]xsh
212.889 284.073 mo
212.889 280.573 li
212.889 10.1555 mo
212.889 13.5725 li
@
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 1248 8 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/five 8 def
end
CUFAAA+Helvetica /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five 202{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
205.973 296.156 mo
(0.5)
[5.56 2.78 0 ]xsh
247.556 284.073 mo
247.556 280.573 li
247.556 10.1555 mo
247.556 13.5725 li
@
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 1544 9 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/six 9 def
end
CUFAAA+Helvetica /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six 201{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
240.639 296.156 mo
(0.6)
[5.56 2.78 0 ]xsh
282.306 284.073 mo
282.306 280.573 li
282.306 10.1555 mo
282.306 13.5725 li
@
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 1844 10 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/seven 10 def
end
CUFAAA+Helvetica /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven 200{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
275.389 296.156 mo
(0.7)
[5.56 2.78 0 ]xsh
316.973 284.073 mo
316.973 280.573 li
316.973 10.1555 mo
316.973 13.5725 li
@
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 1992 11 <00030042ffd7041a059c000b0017003200cb4047560157095a0f59136401
65096b0f691377250949107b197623722573277c317c3288198720872788
2e883198190d47083208250e0225320b3511112c05351e0517352c0d0238
21b80186b70e38296f2f08381bb80186b514382f3447331076c418d4edf4
ed10f5edf4ed003fed3fed12392fed39390111123912393130437940352a
2e1c201216030d162d1428000c2b0e28010a12082800061d082800041f02
2801152e1728000d2a172800071c0528010320052801002b2b2b2b012b2b
2b2b2b81818181015d005d00363534262322061514163312363534262322
061514163300272635343633321615140706071617161514022322243534
363702a48680838274966688a5aa8581a3959cfeb52a4fe8d5ceea442650
59335ffee8d1fedf7c7a0340855c5086865a6572fd3b87868b90938270a3
02a02b5080a0e6d99186532f2d293564a0bdfef9e3d87fb93100>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/eight 11 def
end
CUFAAA+Helvetica /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight 199{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
310.056 296.156 mo
(0.8)
[5.56 2.78 0 ]xsh
351.723 284.073 mo
351.723 280.573 li
351.723 10.1555 mo
351.723 13.5725 li
@
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 2348 12 <00020049ffd80411059a001b002700ab402e19052b052816480658056805
8919881a981a09460807212727350a0a182135100504351bc7180d07023c
071e3114b80155400b0d00291b8124380d2947281076c418d4edf4ed10f5
fd397d4b52787a2f18003feded3fed12392fed1112393130437940341f26
191a0b13010312250226220f24280020111e28010319002800260b242800
230e2128011f13212801011a042800250c2728002b2b2b2b012b2b2b2b2b
2b81818181015d01161716333236130e0123220235341233201316151007
02212226350036353426232206151416330110086b374581b6263cb166cf
f1eee8013977424f83fec7d2da0232b19f7b849b8895015a95391ed70149
5f4d0102cbc30128fee69be9fef9cbfeaedca601268db09e9bb1948ca500
>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/nine 12 def
end
CUFAAA+Helvetica /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine 198{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
344.806 296.156 mo
(0.9)
[5.56 2.78 0 ]xsh
386.473 284.073 mo
386.473 280.573 li
386.473 10.1555 mo
386.473 13.5725 li
@
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
383.723 296.156 mo
(1)sh
39.3059 284.073 mo
42.7229 284.073 li
386.473 284.073 mo
382.973 284.073 li
@
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
16.9726 287.739 mo
(0.25)
[5.56 2.78 5.56 0 ]xsh
39.3059 256.656 mo
42.7229 256.656 li
386.473 256.656 mo
382.973 256.656 li
@
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
22.5559 260.322 mo
(0.3)
[5.56 2.78 0 ]xsh
39.3059 229.239 mo
42.7229 229.239 li
386.473 229.239 mo
382.973 229.239 li
@
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
16.9726 232.906 mo
(0.35)
[5.56 2.78 5.56 0 ]xsh
39.3059 201.823 mo
42.7229 201.823 li
386.473 201.823 mo
382.973 201.823 li
@
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
22.5559 205.489 mo
(0.4)
[5.56 2.78 0 ]xsh
39.3059 174.489 mo
42.7229 174.489 li
386.473 174.489 mo
382.973 174.489 li
@
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
16.9726 178.156 mo
(0.45)
[5.56 2.78 5.56 0 ]xsh
39.3059 147.073 mo
42.7229 147.073 li
386.473 147.073 mo
382.973 147.073 li
@
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
22.5559 150.739 mo
(0.5)
[5.56 2.78 0 ]xsh
39.3059 119.656 mo
42.7229 119.656 li
386.473 119.656 mo
382.973 119.656 li
@
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
16.9726 123.322 mo
(0.55)
[5.56 2.78 5.56 0 ]xsh
39.3059 92.3226 mo
42.7229 92.3226 li
386.473 92.3226 mo
382.973 92.3226 li
@
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
22.5559 95.9889 mo
(0.6)
[5.56 2.78 0 ]xsh
39.3059 64.9055 mo
42.7229 64.9055 li
386.473 64.9055 mo
382.973 64.9055 li
@
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
16.9726 68.5722 mo
(0.65)
[5.56 2.78 5.56 0 ]xsh
39.3059 37.4885 mo
42.7229 37.4885 li
386.473 37.4885 mo
382.973 37.4885 li
@
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
22.5559 41.1555 mo
(0.7)
[5.56 2.78 0 ]xsh
39.3059 10.1555 mo
42.7229 10.1555 li
386.473 10.1555 mo
382.973 10.1555 li
@
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
16.9726 13.8222 mo
(0.75)
[5.56 2.78 5.56 0 ]xsh
39.3059 284.073 mo
386.473 284.073 li
39.3059 10.1555 mo
386.473 10.1555 li
39.3059 284.073 mo
39.3059 10.1555 li
386.473 284.073 mo
386.473 10.1555 li
@
gsave
39.3059 284.156 mo
386.556 284.156 li
386.556 10.1555 li
39.3059 10.1555 li
cp
clp
2 lw
385.973 264.573 mo
384.556 263.406 li
382.639 261.573 li
380.639 259.739 li
378.556 257.989 li
376.556 256.239 li
374.556 254.573 li
368.556 249.823 li
366.473 248.323 li
364.306 246.823 li
362.223 245.323 li
357.723 242.323 li
355.473 240.906 li
353.139 239.489 li
348.306 236.823 li
345.889 235.406 li
343.473 234.073 li
340.973 232.823 li
338.473 231.489 li
330.973 227.739 li
325.806 225.239 li
323.223 224.073 li
320.639 222.823 li
318.056 221.656 li
310.056 218.156 li
304.723 215.989 li
302.056 214.823 li
296.723 212.656 li
293.973 211.573 li
291.306 210.573 li
285.973 208.406 li
283.223 207.406 li
280.556 206.323 li
267.223 201.323 li
264.639 200.406 li
261.973 199.406 li
259.389 198.406 li
256.806 197.489 li
254.223 196.489 li
249.056 194.656 li
246.556 193.739 li
243.973 192.823 li
236.473 190.073 li
234.056 189.239 li
231.556 188.406 li
229.139 187.489 li
226.639 186.656 li
221.806 184.989 li
219.389 184.239 li
214.556 182.573 li
212.139 181.823 li
209.806 180.989 li
207.473 180.239 li
205.139 179.406 li
202.806 178.656 li
200.556 177.823 li
198.306 177.073 li
196.056 176.239 li
193.889 175.489 li
191.639 174.739 li
187.306 173.239 li
185.223 172.489 li
183.056 171.739 li
180.973 171.073 li
176.806 169.573 li
174.806 168.823 li
172.723 168.073 li
170.723 167.406 li
168.806 166.656 li
166.806 165.906 li
164.889 165.156 li
162.973 164.489 li
161.056 163.739 li
157.389 162.406 li
155.556 161.656 li
153.806 161.073 li
152.056 160.323 li
150.223 159.656 li
148.556 158.989 li
146.806 158.323 li
145.056 157.739 li
143.389 157.073 li
140.056 155.906 li
138.473 155.323 li
136.806 154.739 li
135.223 154.156 li
133.639 153.656 li
132.139 153.073 li
130.556 152.573 li
124.556 150.573 li
120.306 149.073 li
118.889 148.656 li
117.473 148.156 li
116.139 147.739 li
114.723 147.239 li
113.389 146.823 li
112.139 146.406 li
109.473 145.573 li
108.223 145.156 li
106.973 144.823 li
104.473 143.989 li
103.306 143.656 li
102.056 143.323 li
100.889 142.989 li
99.7229 142.573 li
98.5559 142.239 li
97.3889 141.989 li
96.3059 141.656 li
95.1389 141.323 li
94.0559 141.073 li
92.9729 140.739 li
91.9729 140.406 li
90.8889 140.073 li
89.8889 139.823 li
88.8889 139.489 li
86.8889 138.989 li
85.8889 138.656 li
84.9729 138.406 li
84.0559 138.073 li
80.3889 137.073 li
79.5559 136.739 li
77.0559 135.989 li
76.3059 135.739 li
75.4729 135.489 li
71.7229 134.239 li
71.0559 133.989 li
70.3059 133.739 li
69.6389 133.573 li
67.6389 132.823 li
67.0559 132.573 li
66.3889 132.406 li
65.8059 132.156 li
65.1389 131.989 li
63.9729 131.656 li
62.8059 131.156 li
62.2229 130.989 li
61.7229 130.823 li
61.1389 130.489 li
60.6389 130.239 li
60.0559 129.989 li
59.5559 129.823 li
59.0559 129.573 li
58.5559 129.406 li
58.0559 129.156 li
57.0559 128.823 li
56.5559 128.489 li
56.1389 128.323 li
55.7229 128.073 li
55.2229 127.906 li
54.3889 127.406 li
53.9729 127.323 li
53.4729 127.073 li
53.1389 126.989 li
52.3059 126.656 li
51.8889 126.406 li
51.5559 126.156 li
51.1389 125.823 li
50.8059 125.573 li
50.3889 125.323 li
50.0559 124.989 li
49.3889 124.489 li
49.0559 124.323 li
48.0559 123.573 li
47.8059 123.239 li
47.4729 122.823 li
47.1389 122.573 li
46.8889 122.239 li
46.6389 121.989 li
46.3059 121.823 li
46.0559 121.573 li
45.8059 121.239 li
45.4729 121.239 li
45.2229 121.073 li
44.9729 120.823 li
44.7229 120.656 li
44.5559 120.406 li
43.8059 119.906 li
43.6389 119.739 li
43.3889 119.573 li
43.1389 119.489 li
42.7229 119.489 li
42.3889 119.156 li
42.1389 118.989 li
41.8059 118.489 li
41.6389 118.323 li
41.4729 118.239 li
41.2229 118.239 li
40.8889 117.906 li
40.7229 118.073 li
40.5559 117.739 li
40.3889 117.656 li
40.1389 118.406 li
39.9729 118.823 li
39.8059 119.573 li
39.6389 127.156 li
39.5559 139.989 li
39.3889 176.656 li
.0639048 0 .996094 0 cmyk
@
386.473 264.823 mo
386.306 264.656 li
385.556 263.239 li
384.056 260.656 li
381.723 257.073 li
378.639 253.239 li
375.056 249.239 li
371.056 245.406 li
366.806 241.906 li
362.389 238.823 li
357.973 235.906 li
353.556 233.239 li
349.139 230.739 li
344.806 228.323 li
336.306 223.823 li
332.139 221.656 li
327.973 219.573 li
323.806 217.573 li
319.723 215.656 li
315.723 213.739 li
311.723 211.906 li
307.806 210.156 li
303.889 208.489 li
300.056 206.823 li
296.306 205.156 li
292.473 203.573 li
284.973 200.573 li
281.223 199.156 li
277.556 197.823 li
273.806 196.406 li
270.223 195.073 li
259.473 191.323 li
255.973 190.073 li
252.556 188.823 li
249.139 187.656 li
239.139 184.156 li
235.973 182.989 li
232.723 181.906 li
229.556 180.823 li
226.473 179.823 li
223.389 178.739 li
220.389 177.656 li
217.389 176.656 li
214.389 175.573 li
211.473 174.573 li
202.973 171.573 li
194.723 168.573 li
192.056 167.656 li
186.889 165.656 li
184.306 164.739 li
181.806 163.739 li
179.306 162.823 li
176.806 161.823 li
174.473 160.906 li
172.056 159.989 li
169.723 159.156 li
167.389 158.239 li
165.056 157.406 li
162.806 156.489 li
156.306 153.989 li
154.139 153.239 li
152.056 152.489 li
150.056 151.739 li
147.973 150.989 li
143.973 149.489 li
142.056 148.739 li
138.223 147.406 li
136.389 146.656 li
132.723 145.323 li
125.723 142.656 li
122.389 141.323 li
120.806 140.739 li
119.223 140.073 li
116.056 138.906 li
114.556 138.239 li
113.056 137.656 li
111.639 137.073 li
110.139 136.489 li
108.723 135.989 li
107.389 135.406 li
105.973 134.906 li
104.723 134.239 li
103.389 133.656 li
102.139 133.156 li
99.6389 131.989 li
98.4729 131.489 li
97.2229 130.906 li
96.0559 130.406 li
94.8889 129.823 li
92.7229 128.823 li
91.6389 128.239 li
89.4729 127.239 li
86.4729 125.739 li
85.4729 125.323 li
84.4729 124.823 li
83.5559 124.406 li
81.7229 123.406 li
79.8889 122.573 li
79.0559 122.073 li
78.2229 121.739 li
75.7229 120.489 li
74.2229 119.656 li
73.3889 119.239 li
72.7229 118.823 li
71.9729 118.489 li
71.2229 118.073 li
70.5559 117.739 li
69.8889 117.323 li
69.2229 116.989 li
68.5559 116.573 li
67.8889 116.239 li
67.2229 115.823 li
66.6389 115.406 li
65.9729 114.989 li
65.3889 114.573 li
64.8059 114.239 li
63.6389 113.406 li
63.0559 113.073 li
62.5559 112.739 li
61.9729 112.406 li
61.4729 112.073 li
60.9729 111.656 li
60.3889 111.323 li
59.9729 110.906 li
58.9729 110.239 li
58.4729 109.989 li
58.0559 109.656 li
57.5559 109.406 li
57.1389 109.156 li
56.7229 108.823 li
55.8889 108.323 li
55.0559 107.656 li
54.7229 107.323 li
54.3059 107.073 li
53.9729 106.739 li
53.5559 106.406 li
53.2229 106.073 li
52.8889 105.823 li
52.4729 105.573 li
51.8059 105.073 li
51.5559 104.739 li
50.5559 103.989 li
50.3059 103.739 li
49.9729 103.573 li
49.7229 103.239 li
49.3889 102.989 li
48.0559 101.656 li
47.8889 101.406 li
47.3889 100.739 li
46.8889 100.239 li
46.7229 99.9885 li
46.4729 99.7385 li
46.2229 99.5726 li
45.3889 98.7385 li
45.2229 98.4885 li
44.8889 98.1555 li
44.6389 98.0726 li
44.3059 97.7385 li
44.1389 97.6555 li
43.9729 97.4885 li
43.8059 97.4055 li
43.6389 97.4055 li
43.4729 97.3226 li
43.0559 97.3226 li
42.8889 97.2385 li
42.7229 97.3226 li
42.4729 97.3226 li
42.3059 97.1555 li
42.2229 96.9885 li
42.0559 96.9055 li
41.9729 96.9055 li
41.8889 96.6555 li
41.7229 96.6555 li
41.6389 96.5726 li
41.5559 96.5726 li
41.3889 96.4885 li
41.2229 96.3226 li
41.1389 96.4055 li
40.9729 96.4055 li
40.8889 96.6555 li
40.8059 96.5726 li
40.6389 96.4885 li
40.5559 96.4885 li
40.4729 96.5726 li
40.3059 96.5726 li
40.2229 96.4055 li
40.1389 96.4055 li
39.9729 96.0726 li
39.8889 96.0726 li
39.8889 95.5726 li
39.8059 95.3226 li
39.7229 94.9885 li
39.7229 94.8226 li
39.6389 94.9055 li
39.5559 94.8226 li
39.4729 94.9055 li
39.3889 95.7385 li
39.3889 103.489 li
.265019 .809232 0 0 cmyk
@
384.973 262.989 mo
384.223 261.739 li
383.473 260.573 li
382.806 259.489 li
382.223 258.573 li
381.723 257.823 li
381.223 256.989 li
380.723 256.239 li
380.306 255.406 li
379.806 254.573 li
379.306 253.656 li
378.306 251.989 li
377.889 251.156 li
377.389 250.239 li
376.889 249.239 li
376.389 248.323 li
375.806 247.406 li
375.306 246.406 li
374.806 245.489 li
374.306 244.489 li
373.723 243.573 li
371.973 240.573 li
371.389 239.656 li
370.806 238.656 li
367.473 233.656 li
366.723 232.656 li
366.056 231.656 li
365.306 230.573 li
364.473 229.573 li
363.723 228.489 li
362.889 227.489 li
362.056 226.406 li
361.139 225.406 li
360.306 224.323 li
359.389 223.239 li
358.389 222.239 li
357.473 221.156 li
356.389 220.073 li
355.389 218.989 li
353.223 216.823 li
349.723 213.573 li
348.473 212.489 li
347.139 211.406 li
345.889 210.323 li
344.556 209.323 li
338.889 204.989 li
334.389 201.739 li
332.806 200.739 li
331.223 199.656 li
326.223 196.406 li
324.473 195.406 li
319.223 192.156 li
317.389 191.073 li
315.639 189.989 li
313.723 188.906 li
311.889 187.823 li
309.973 186.823 li
307.973 185.739 li
306.056 184.656 li
304.056 183.573 li
302.056 182.573 li
298.056 180.406 li
295.973 179.406 li
289.723 176.156 li
287.473 175.073 li
285.306 174.073 li
280.973 171.906 li
278.723 170.823 li
276.556 169.739 li
272.056 167.573 li
269.806 166.406 li
267.556 165.323 li
265.389 164.239 li
263.139 163.156 li
260.806 161.989 li
254.056 158.739 li
251.723 157.656 li
249.473 156.489 li
247.139 155.406 li
244.889 154.323 li
240.223 152.156 li
237.973 150.989 li
233.306 148.823 li
230.889 147.739 li
219.223 142.323 li
216.973 141.239 li
212.306 139.073 li
205.556 135.823 li
201.056 133.823 li
198.889 132.823 li
196.723 131.739 li
194.556 130.739 li
192.389 130.323 li
188.223 128.323 li
186.056 127.323 li
183.973 126.323 li
181.889 125.406 li
179.889 124.489 li
177.806 123.573 li
173.806 121.739 li
171.723 120.823 li
169.806 119.989 li
167.806 119.156 li
165.889 118.323 li
163.973 117.989 li
162.139 117.156 li
160.223 116.823 li
158.389 115.906 li
156.556 114.906 li
154.806 114.406 li
152.973 114.156 li
151.223 113.906 li
149.473 113.239 li
147.806 112.406 li
146.056 111.739 li
144.389 110.989 li
142.723 110.156 li
141.139 109.323 li
139.556 108.573 li
137.973 107.656 li
134.806 105.989 li
131.806 104.323 li
127.306 101.573 li
125.889 101.239 li
124.389 100.323 li
122.973 99.9885 li
121.556 99.2385 li
120.223 98.9885 li
118.806 98.3226 li
117.473 97.9885 li
116.139 97.9055 li
114.806 97.7385 li
113.473 96.9885 li
112.223 96.7385 li
110.973 96.9055 li
109.723 96.2385 li
108.473 95.4885 li
107.306 95.1555 li
106.056 94.4055 li
104.889 93.7385 li
103.806 93.4055 li
102.639 93.8226 li
101.556 94.3226 li
100.389 94.4885 li
99.3889 94.9055 li
98.3059 94.3226 li
97.2229 94.4885 li
96.2229 94.9055 li
95.2229 96.1555 li
94.1389 96.3226 li
93.2229 95.9055 li
92.2229 97.2385 li
91.2229 98.4055 li
90.3059 97.9885 li
89.3889 98.6555 li
88.4729 98.5726 li
87.5559 100.239 li
86.6389 99.8226 li
85.8059 100.573 li
84.9729 100.739 li
84.0559 100.906 li
83.2229 100.989 li
82.3889 101.989 li
81.6389 102.989 li
80.8059 104.323 li
80.0559 105.823 li
79.3059 107.073 li
78.5559 107.739 li
77.8059 107.823 li
77.1389 108.323 li
76.3889 108.906 li
75.7229 109.656 li
74.9729 110.739 li
74.3059 111.823 li
73.6389 112.823 li
73.0559 113.073 li
72.3889 114.406 li
71.8059 115.823 li
71.1389 115.906 li
70.5559 117.239 li
69.9729 118.073 li
69.3889 118.823 li
68.8059 120.656 li
68.2229 121.489 li
66.4729 127.739 li
65.9729 129.073 li
65.4729 131.906 li
64.8889 133.739 li
64.3889 134.406 li
63.8889 135.739 li
63.3059 136.573 li
62.8059 138.156 li
62.3059 140.573 li
61.8059 140.239 li
61.3059 140.739 li
60.8059 141.989 li
60.3059 143.073 li
59.8059 143.323 li
59.3059 145.156 li
58.8059 147.573 li
58.3059 149.573 li
57.7229 150.656 li
57.2229 152.156 li
56.7229 154.656 li
56.1399 157.406 li
55.4729 159.406 li
54.7229 161.989 li
53.8059 162.823 li
52.6399 166.989 li
51.0559 168.573 li
48.8059 172.323 li
44.8059 176.489 li
.520012 0 .126131 0 cmyk
@
386.389 264.823 mo
386.389 264.739 li
386.306 264.656 li
386.223 264.406 li
386.056 264.073 li
385.806 263.656 li
385.556 263.073 li
385.139 262.406 li
384.723 261.573 li
384.223 260.739 li
383.556 259.823 li
382.889 258.823 li
382.139 257.656 li
381.223 256.489 li
380.389 255.156 li
379.473 253.823 li
378.473 252.323 li
377.389 250.906 li
376.306 249.406 li
373.973 246.406 li
371.473 243.406 li
370.139 241.989 li
368.806 240.489 li
365.889 237.573 li
364.306 236.156 li
362.639 234.823 li
360.973 233.406 li
359.223 232.073 li
357.473 230.656 li
353.806 227.989 li
351.889 226.739 li
348.056 224.073 li
344.223 221.573 li
342.223 220.323 li
340.139 219.073 li
338.056 217.906 li
335.973 216.656 li
333.889 215.489 li
331.806 214.239 li
325.306 210.739 li
323.056 209.656 li
320.889 208.489 li
318.639 207.406 li
316.306 206.239 li
311.639 204.073 li
309.389 203.073 li
306.973 202.073 li
302.306 200.073 li
299.889 199.156 li
297.556 198.156 li
295.223 197.239 li
292.806 196.323 li
288.139 194.489 li
285.723 193.656 li
278.723 190.906 li
276.389 190.073 li
274.139 189.156 li
271.806 188.239 li
269.556 187.406 li
267.306 186.489 li
264.973 185.656 li
251.473 180.156 li
249.306 179.323 li
244.806 177.489 li
242.556 176.656 li
235.806 173.906 li
231.306 172.239 li
229.056 171.323 li
224.556 169.656 li
222.389 168.823 li
217.889 167.156 li
215.723 166.323 li
213.556 165.573 li
211.306 164.739 li
209.139 163.989 li
206.889 163.239 li
202.556 161.739 li
200.473 160.989 li
198.306 160.323 li
196.139 159.573 li
189.889 157.573 li
187.889 156.906 li
185.806 156.239 li
183.723 155.656 li
181.723 154.989 li
179.723 154.406 li
177.639 153.739 li
175.639 153.156 li
173.723 152.489 li
171.723 151.906 li
169.806 151.239 li
167.806 150.656 li
165.889 149.989 li
160.139 148.239 li
154.639 146.489 li
152.806 145.989 li
150.973 145.406 li
149.223 144.823 li
147.473 144.323 li
145.723 143.739 li
142.223 142.739 li
135.556 140.739 li
133.973 140.323 li
127.639 138.323 li
124.639 137.323 li
123.223 136.823 li
121.723 136.323 li
114.639 133.823 li
111.973 132.823 li
110.639 132.239 li
109.306 131.739 li
108.056 131.239 li
106.723 130.739 li
104.223 129.739 li
102.973 129.323 li
100.473 128.323 li
99.3059 127.906 li
94.6389 125.906 li
92.4729 124.906 li
91.3889 124.489 li
90.3059 123.989 li
89.3059 123.489 li
88.2229 122.989 li
85.2229 121.739 li
84.2229 121.239 li
83.2229 120.906 li
82.3059 120.489 li
81.3059 120.073 li
80.3889 119.739 li
79.4729 119.323 li
77.6389 118.656 li
76.8059 118.323 li
75.8889 117.906 li
71.7229 115.823 li
70.9729 115.489 li
70.1389 115.073 li
69.3889 114.656 li
67.8889 113.989 li
67.1389 113.739 li
65.6389 113.073 li
64.3059 112.406 li
63.5559 112.073 li
62.2229 111.239 li
61.5559 110.739 li
60.9729 110.406 li
59.6389 109.573 li
58.4729 108.906 li
57.8059 108.573 li
57.2229 108.323 li
56.6389 107.906 li
56.0559 107.573 li
55.4729 107.156 li
54.9729 106.823 li
54.3889 106.489 li
53.8889 106.156 li
53.3059 105.739 li
52.8059 105.406 li
52.3059 104.906 li
51.7229 104.656 li
51.2229 104.239 li
50.7229 103.739 li
50.2229 103.406 li
49.8059 102.989 li
49.3059 102.656 li
48.8059 102.239 li
48.3889 101.739 li
47.9729 101.323 li
47.5559 100.989 li
47.0559 100.656 li
46.6389 100.239 li
46.3059 99.6555 li
45.4729 98.6555 li
45.1389 98.2385 li
44.7229 97.7385 li
44.3889 97.3226 li
44.0559 97.0726 li
43.7229 96.5726 li
43.3889 95.9885 li
42.9729 95.6555 li
42.6389 95.0726 li
42.3059 94.8226 li
42.0559 94.4885 li
41.7229 93.9885 li
41.3889 93.6555 li
41.0559 93.1555 li
40.8059 93.1555 li
40.4729 92.5726 li
40.2229 93.5726 li
39.8889 99.4055 li
39.6389 120.406 li
39.4729 171.989 li
.627314 0 1 0 cmyk
@
386.473 264.823 mo
377.139 263.573 li
370.306 260.989 li
362.723 258.656 li
355.056 256.239 li
347.639 253.906 li
340.473 251.489 li
333.723 249.073 li
327.223 246.573 li
321.056 244.406 li
315.139 242.406 li
309.556 240.406 li
304.223 238.406 li
299.056 236.489 li
294.056 234.489 li
289.223 232.656 li
284.639 230.739 li
280.139 228.823 li
275.889 226.989 li
271.806 225.323 li
267.889 223.656 li
263.973 222.073 li
260.139 220.406 li
256.473 218.739 li
252.806 217.323 li
249.223 215.823 li
245.889 214.489 li
242.556 213.239 li
239.306 211.989 li
236.139 210.906 li
233.056 209.489 li
230.056 208.239 li
227.139 207.073 li
221.473 204.573 li
218.723 203.406 li
216.056 202.156 li
213.473 200.823 li
210.889 199.406 li
208.389 198.156 li
205.889 196.823 li
203.473 195.573 li
198.806 192.906 li
196.556 191.823 li
194.389 190.823 li
192.139 189.823 li
189.973 188.906 li
187.806 188.073 li
185.806 187.073 li
183.723 186.156 li
181.723 185.156 li
179.806 183.989 li
177.889 183.156 li
176.056 182.239 li
174.139 181.406 li
172.306 180.656 li
170.556 179.656 li
168.806 178.823 li
165.306 176.989 li
163.639 176.156 li
161.973 175.406 li
160.389 174.573 li
158.723 173.823 li
157.139 173.073 li
155.473 172.406 li
153.973 171.656 li
152.389 170.823 li
150.889 170.156 li
149.306 169.489 li
147.806 168.823 li
146.389 168.156 li
144.889 167.573 li
143.389 167.073 li
141.973 166.489 li
140.556 165.989 li
139.223 165.489 li
137.806 164.906 li
135.139 163.906 li
133.806 163.323 li
132.556 162.739 li
131.223 162.323 li
129.973 161.739 li
128.723 161.239 li
127.556 160.573 li
126.389 159.989 li
125.223 159.239 li
124.056 158.656 li
122.973 158.073 li
121.806 157.489 li
120.723 156.739 li
119.639 156.156 li
118.639 155.489 li
117.556 154.989 li
115.556 153.656 li
114.556 153.156 li
113.556 152.406 li
112.556 151.823 li
111.556 151.323 li
110.639 150.906 li
109.639 150.489 li
108.723 150.073 li
107.806 149.406 li
105.973 148.573 li
105.056 148.239 li
104.223 147.906 li
103.306 147.573 li
102.473 147.156 li
101.639 146.823 li
99.1389 146.073 li
97.4729 145.739 li
96.7229 145.489 li
95.8889 145.323 li
95.1389 145.073 li
94.3059 144.823 li
93.5559 144.656 li
92.8889 144.323 li
92.0559 144.323 li
91.3889 144.156 li
90.6389 144.073 li
89.9729 143.906 li
89.2229 143.739 li
88.5559 143.073 li
87.8889 142.906 li
87.1389 142.739 li
86.5559 142.489 li
85.8889 142.156 li
85.2229 141.406 li
84.6389 140.906 li
83.9729 140.489 li
83.3889 139.989 li
82.7229 139.573 li
82.1389 139.239 li
79.2229 137.989 li
78.0559 137.656 li
77.5559 137.406 li
76.3889 137.073 li
75.8889 137.073 li
75.3059 136.989 li
74.3059 136.823 li
73.8059 136.739 li
73.3059 136.573 li
72.3059 136.406 li
70.8059 135.906 li
70.3059 135.823 li
69.8889 135.656 li
69.3889 135.573 li
68.8889 135.406 li
68.4729 135.239 li
67.9729 134.906 li
67.4729 134.406 li
66.9729 134.239 li
66.5559 134.073 li
66.1389 133.989 li
65.6389 133.906 li
65.2229 133.823 li
64.8059 133.656 li
64.3889 133.573 li
63.9729 133.489 li
63.6389 133.406 li
63.2229 133.239 li
62.8059 133.156 li
62.4729 132.906 li
62.0559 132.823 li
61.7229 132.656 li
60.8899 132.656 li
60.5559 132.489 li
60.1399 132.573 li
59.8059 132.406 li
59.4729 132.406 li
59.0559 132.239 li
58.7229 132.156 li
58.3889 132.073 li
57.9729 132.073 li
57.6389 131.989 li
57.3059 131.989 li
56.8889 131.906 li
56.5559 131.823 li
56.2229 131.823 li
55.8889 131.739 li
55.4729 131.739 li
55.1389 131.656 li
54.8059 131.656 li
54.4729 131.739 li
54.1389 131.656 li
53.8059 131.573 li
53.4729 131.573 li
53.1389 131.323 li
52.8059 131.323 li
52.5559 131.406 li
52.2229 131.239 li
51.8889 131.239 li
51.5559 131.156 li
50.6389 131.156 li
50.3059 131.073 li
50.0559 131.073 li
49.7229 130.989 li
49.4729 130.906 li
49.1389 130.989 li
48.8889 131.073 li
48.6389 131.156 li
48.3059 131.073 li
48.0559 131.156 li
47.8059 131.156 li
47.4729 131.239 li
47.2229 131.489 li
46.9729 131.406 li
46.6389 131.239 li
46.3889 131.239 li
46.1389 130.989 li
45.8059 130.906 li
45.5559 130.823 li
45.3059 130.323 li
44.9729 129.989 li
44.7229 129.573 li
44.4729 129.489 li
44.2229 128.823 li
43.8889 128.489 li
43.6389 128.406 li
43.3059 128.406 li
43.0559 128.489 li
42.7229 128.406 li
42.4729 128.239 li
42.2229 127.739 li
41.8889 127.489 li
41.6389 126.823 li
41.2229 128.073 li
40.9729 128.156 li
40.7229 129.323 li
40.4729 130.573 li
40.3059 133.489 li
40.0559 134.573 li
39.8889 140.573 li
39.7229 151.073 li
39.6389 159.239 li
.895628 .7673 0 0 cmyk
@
386.473 264.823 mo
386.389 264.823 li
385.973 263.989 li
385.639 263.489 li
385.306 262.906 li
384.889 262.239 li
384.473 261.489 li
383.973 260.739 li
383.389 259.823 li
382.806 258.823 li
382.139 257.739 li
381.389 256.656 li
380.556 255.489 li
379.723 254.239 li
378.723 252.989 li
377.723 251.656 li
376.639 250.323 li
375.473 248.906 li
374.223 247.406 li
372.806 245.989 li
371.389 244.489 li
368.223 241.323 li
366.473 239.739 li
364.639 238.156 li
362.806 236.489 li
360.889 234.739 li
356.723 231.239 li
354.639 229.406 li
352.473 227.489 li
347.973 223.656 li
345.639 221.739 li
343.223 219.823 li
340.723 217.823 li
335.556 213.823 li
330.223 209.823 li
327.473 207.739 li
324.723 205.739 li
321.889 203.656 li
318.973 201.573 li
315.973 199.573 li
309.973 195.406 li
303.806 191.239 li
300.639 189.073 li
291.139 182.823 li
287.889 180.823 li
284.639 178.739 li
281.306 176.739 li
277.973 174.823 li
274.639 172.823 li
271.223 170.906 li
267.889 168.906 li
264.473 167.073 li
261.056 165.156 li
254.223 161.489 li
250.806 159.573 li
247.473 157.823 li
244.056 155.989 li
240.723 154.156 li
237.389 152.406 li
234.056 150.573 li
230.723 148.906 li
227.389 147.156 li
224.139 145.489 li
220.889 143.739 li
217.723 142.156 li
214.473 140.489 li
211.306 138.989 li
208.223 137.406 li
202.056 134.406 li
198.973 132.989 li
192.973 129.989 li
181.306 124.656 li
175.639 121.989 li
172.889 120.739 li
170.056 119.489 li
167.389 118.323 li
164.639 117.156 li
161.973 115.989 li
159.306 114.989 li
156.723 113.989 li
154.056 112.989 li
151.473 112.073 li
146.473 110.239 li
141.639 108.573 li
139.306 107.823 li
136.973 107.156 li
132.473 105.823 li
130.223 105.239 li
128.056 104.573 li
125.973 104.073 li
123.806 103.489 li
119.806 102.489 li
117.806 102.073 li
115.889 101.573 li
112.056 100.739 li
108.389 100.073 li
106.639 99.7385 li
104.973 99.4055 li
103.223 99.1555 li
101.556 98.9885 li
99.8889 98.8226 li
98.3059 98.7385 li
96.7229 98.7385 li
95.1389 98.6555 li
87.9729 98.6555 li
86.6389 98.7385 li
85.3059 98.8226 li
84.0559 98.7385 li
79.2229 98.7385 li
78.0559 98.8226 li
76.9729 98.9055 li
75.8889 98.9885 li
74.8889 99.1555 li
72.8889 99.1555 li
71.8889 99.2385 li
68.3059 99.2385 li
67.4729 99.1555 li
66.7229 99.0726 li
65.8889 99.0726 li
65.1389 98.9885 li
64.3889 99.0726 li
62.9729 99.0726 li
62.3059 99.1555 li
61.6389 99.1555 li
60.9729 99.3226 li
60.3889 99.4885 li
59.7229 99.5726 li
59.1389 99.7385 li
58.5559 99.8226 li
57.9729 99.9885 li
56.8059 100.156 li
55.8059 100.156 li
55.3059 100.239 li
54.3059 100.239 li
53.8889 100.323 li
51.7229 100.323 li
51.3059 100.406 li
50.9729 100.406 li
50.5559 100.489 li
50.2229 100.489 li
49.8889 100.406 li
49.5559 100.489 li
49.1389 100.489 li
48.8059 100.656 li
48.5559 100.656 li
48.2229 100.739 li
47.8889 100.739 li
47.6389 100.656 li
46.8059 100.656 li
46.4729 100.823 li
45.9729 100.823 li
45.7229 100.906 li
44.9729 100.906 li
44.7229 100.989 li
44.5559 101.156 li
44.3059 101.156 li
44.0559 101.239 li
43.8059 101.406 li
43.6389 101.656 li
43.3889 101.989 li
42.8889 102.989 li
42.5559 103.823 li
42.3059 104.323 li
42.1389 104.823 li
41.8059 105.489 li
41.6389 105.573 li
41.5559 105.823 li
41.3889 105.989 li
41.2229 106.073 li
41.1389 106.323 li
40.9729 106.573 li
40.8889 106.906 li
40.7229 107.073 li
40.5559 107.406 li
40.4729 107.823 li
40.3889 108.073 li
40.3059 107.989 li
40.2229 108.406 li
40.1389 108.489 li
40.0559 108.739 li
39.9729 108.739 li
39.8889 108.656 li
39.8889 108.489 li
39.8059 108.489 li
39.7229 108.739 li
39.7229 108.573 li
39.6389 108.489 li
39.6389 108.739 li
39.6389 108.239 li
39.5559 108.156 li
39.5559 107.906 li
39.4719 107.906 li
39.4719 108.239 li
39.3889 108.406 li
39.3889 109.573 li
39.3059 110.323 li
39.3059 188.739 li
0 .990631 1 .000396735 cmyk
@
386.473 264.823 mo
386.306 264.739 li
385.889 263.989 li
385.139 262.323 li
384.056 260.156 li
382.723 257.656 li
381.223 254.906 li
379.639 252.073 li
377.889 249.156 li
376.139 246.323 li
374.306 243.406 li
372.389 240.573 li
370.389 237.823 li
368.223 234.989 li
366.056 232.239 li
363.806 229.489 li
361.473 226.906 li
359.056 224.239 li
356.723 221.656 li
354.306 219.073 li
351.889 216.406 li
344.389 208.906 li
341.889 206.489 li
339.306 204.073 li
336.806 201.656 li
334.223 199.239 li
331.639 196.989 li
329.056 194.656 li
323.723 190.323 li
321.056 188.239 li
313.056 182.239 li
307.723 178.406 li
304.973 176.573 li
299.639 172.906 li
296.889 171.156 li
294.223 169.406 li
291.473 167.739 li
286.139 164.406 li
283.473 162.823 li
280.723 161.239 li
278.056 159.739 li
272.889 156.739 li
270.223 155.239 li
267.723 153.739 li
265.139 152.323 li
262.639 150.823 li
260.056 149.406 li
255.056 146.573 li
252.556 145.239 li
250.056 143.823 li
247.556 142.489 li
245.139 141.156 li
240.306 138.656 li
233.306 134.906 li
223.973 130.239 li
221.723 129.156 li
219.473 127.989 li
217.139 126.989 li
214.889 125.906 li
212.723 124.906 li
210.473 123.906 li
206.139 121.906 li
203.973 120.989 li
201.806 119.989 li
197.639 118.156 li
195.556 117.323 li
193.556 116.406 li
191.473 115.489 li
183.473 112.156 li
181.556 111.323 li
179.556 110.489 li
177.723 109.739 li
175.806 108.906 li
173.889 108.156 li
170.223 106.489 li
168.389 105.739 li
166.556 104.906 li
164.806 104.156 li
162.973 103.406 li
157.723 101.156 li
155.973 100.489 li
154.306 99.8226 li
152.556 99.0726 li
149.223 97.7385 li
147.639 97.0726 li
145.973 96.4055 li
142.806 95.0726 li
141.139 94.4885 li
139.639 93.8226 li
138.056 93.2385 li
136.473 92.7385 li
134.973 92.1555 li
133.473 91.6555 li
132.056 91.0726 li
130.556 90.4885 li
129.223 89.9055 li
126.389 88.7385 li
125.056 88.1555 li
123.723 87.6555 li
122.389 87.0726 li
121.056 86.5726 li
119.806 85.9885 li
118.473 85.4885 li
115.973 84.4885 li
114.723 83.9055 li
113.473 83.4055 li
112.306 82.9055 li
111.056 82.4055 li
108.723 81.4055 li
106.389 80.5726 li
105.306 80.1555 li
104.223 79.8226 li
103.056 79.4055 li
101.973 78.9885 li
100.889 78.6555 li
99.8889 78.2385 li
98.8059 77.9055 li
97.7229 77.4885 li
93.7229 76.1555 li
92.8059 75.7385 li
91.8059 75.4885 li
90.8889 75.1555 li
89.8889 74.8226 li
88.0559 74.1555 li
87.2229 73.7385 li
86.3059 73.4885 li
85.3889 73.1555 li
82.8889 72.1555 li
81.9729 71.9055 li
81.2229 71.5726 li
80.3889 71.3226 li
79.5559 70.9885 li
78.8059 70.7385 li
77.9729 70.4885 li
77.2229 70.3226 li
76.3889 70.0726 li
75.6389 69.9055 li
74.8889 69.6555 li
74.1389 69.4885 li
73.3889 69.2385 li
72.7229 68.9885 li
71.9729 68.7385 li
70.6389 68.2385 li
69.8889 68.0726 li
68.5559 67.5726 li
67.9729 67.4055 li
67.3059 67.1555 li
66.6389 66.9885 li
66.0559 66.8226 li
65.3889 66.5726 li
64.8059 66.3226 li
64.2229 66.1555 li
63.6389 65.9055 li
62.4729 65.5725 li
61.8889 65.3225 li
61.3889 65.2385 li
60.8059 64.9885 li
60.3059 64.7385 li
59.7229 64.6555 li
59.2229 64.4885 li
58.7229 64.2385 li
58.1389 64.0725 li
56.6389 63.8225 li
56.2229 63.6555 li
55.7229 63.4885 li
55.2229 63.3225 li
54.7229 63.2385 li
54.3059 63.1555 li
53.8059 63.0725 li
53.3889 62.9885 li
52.5559 62.6555 li
51.7229 62.1555 li
50.8889 61.8225 li
50.4729 61.7385 li
50.0559 61.5725 li
49.7229 61.4055 li
49.3059 61.3225 li
48.8889 61.2385 li
48.5559 61.1555 li
46.8059 61.1555 li
46.4729 61.0725 li
46.1389 61.0725 li
45.4729 60.9055 li
45.2229 60.8225 li
44.8889 60.6555 li
43.3889 60.6555 li
43.1389 60.5725 li
42.8889 60.4885 li
42.6389 60.4885 li
42.3059 60.3225 li
42.0559 60.3225 li
41.8059 60.0725 li
41.5559 60.0725 li
41.0559 59.9055 li
40.8059 59.9885 li
40.6389 59.6555 li
40.3889 59.4055 li
40.1389 58.9055 li
39.9729 58.4055 li
39.7229 58.4885 li
39.5559 58.3225 li
39.3889 75.0726 li
.653162 .154971 0 0 cmyk
@
386.473 264.823 mo
386.389 264.656 li
385.973 263.323 li
385.306 261.323 li
384.473 258.989 li
383.473 256.489 li
382.389 253.656 li
381.223 250.823 li
379.973 247.906 li
378.639 244.906 li
377.306 241.989 li
375.889 239.073 li
374.306 236.156 li
372.806 233.156 li
371.306 230.239 li
369.723 227.239 li
368.139 224.323 li
366.556 221.489 li
364.889 218.573 li
363.306 215.656 li
359.806 209.989 li
358.056 207.239 li
356.223 204.489 li
350.723 196.489 li
348.806 193.823 li
344.973 188.656 li
343.056 186.156 li
341.056 183.656 li
339.056 181.239 li
334.889 176.406 li
332.723 174.073 li
330.556 171.823 li
328.473 169.573 li
326.223 167.323 li
324.056 165.073 li
319.723 160.739 li
317.389 158.656 li
315.223 156.489 li
312.973 154.489 li
310.639 152.406 li
306.139 148.406 li
301.473 144.573 li
299.139 142.739 li
296.889 140.906 li
294.556 139.156 li
292.306 137.323 li
289.973 135.656 li
287.723 133.906 li
285.389 132.239 li
283.139 130.573 li
280.806 128.906 li
278.556 127.239 li
276.306 125.656 li
274.056 123.989 li
267.306 119.239 li
258.306 113.239 li
256.056 111.823 li
253.889 110.406 li
251.639 109.073 li
249.473 107.656 li
247.223 106.239 li
236.389 99.5726 li
234.306 98.3226 li
232.139 96.9885 li
229.973 95.8226 li
227.806 94.5726 li
225.723 93.4055 li
223.556 92.1555 li
221.473 90.9885 li
219.306 89.8226 li
217.223 88.6555 li
215.139 87.5726 li
213.139 86.4055 li
211.056 85.2385 li
207.056 83.0726 li
205.056 81.9055 li
203.056 80.8226 li
201.139 79.7385 li
199.139 78.6555 li
197.223 77.5726 li
195.223 76.5726 li
193.306 75.4885 li
189.473 73.4885 li
187.639 72.4885 li
185.723 71.5726 li
183.889 70.6555 li
181.973 69.7385 li
180.139 68.8226 li
178.223 67.9885 li
176.389 67.0726 li
174.556 66.2385 li
172.806 65.4055 li
170.973 64.5725 li
169.139 63.8225 li
167.389 62.9885 li
165.639 62.2385 li
163.806 61.4885 li
160.306 59.9885 li
158.639 59.2385 li
156.889 58.5725 li
155.223 57.8225 li
153.556 57.1555 li
151.889 56.4055 li
148.556 55.0725 li
146.973 54.4885 li
145.306 53.8225 li
142.139 52.4885 li
140.639 51.9055 li
139.056 51.3225 li
136.056 50.3225 li
134.473 49.8225 li
133.056 49.2385 li
130.056 48.2385 li
128.639 47.6555 li
122.973 45.6555 li
121.639 45.2385 li
120.223 44.7385 li
117.556 43.9055 li
116.223 43.4055 li
114.889 42.9885 li
113.639 42.5725 li
112.306 42.2385 li
111.056 41.8225 li
109.806 41.4885 li
108.556 41.2385 li
107.306 40.9055 li
106.056 40.6555 li
104.889 40.4055 li
103.639 40.1555 li
102.473 39.9055 li
101.223 39.6555 li
100.056 39.4885 li
98.9729 39.2385 li
96.6389 38.7385 li
95.5559 38.4885 li
93.3889 37.9885 li
92.3059 37.6555 li
90.1389 37.1555 li
89.1389 36.9055 li
88.0559 36.6555 li
87.0559 36.4885 li
86.0559 36.2385 li
85.1389 35.9055 li
84.1389 35.5725 li
83.2229 35.4055 li
80.4729 34.6555 li
79.5559 34.4885 li
78.6389 34.2385 li
77.8059 34.1555 li
76.8889 33.9885 li
76.0559 33.8225 li
75.2229 33.6555 li
74.3889 33.4885 li
71.8889 32.7385 li
71.0559 32.5725 li
69.5559 32.0725 li
68.8059 31.9055 li
66.5559 31.1555 li
65.8889 30.9055 li
65.1389 30.5725 li
64.4729 30.4055 li
62.4729 29.6555 li
61.8889 29.4885 li
61.2229 29.3225 li
60.6389 29.0725 li
59.9729 28.9055 li
59.3889 28.7385 li
58.8059 28.5725 li
58.2229 28.4055 li
57.6389 28.2385 li
57.0559 27.9885 li
55.8889 27.8225 li
55.3889 27.7385 li
54.8889 27.6555 li
54.3059 27.5725 li
53.8059 27.4885 li
53.3059 27.4055 li
52.8059 27.2385 li
52.3059 27.1555 li
51.8059 27.0725 li
51.3889 26.9055 li
50.8889 26.8225 li
50.3889 26.7385 li
49.9729 26.6555 li
49.4729 26.5725 li
48.2229 26.3225 li
47.8059 26.3225 li
47.3889 26.2385 li
46.9729 26.1555 li
46.5559 26.0725 li
46.2229 26.1555 li
45.8059 26.0725 li
45.4729 25.9055 li
45.0559 25.8225 li
44.7229 25.8225 li
44.3059 25.9055 li
43.9729 25.9885 li
43.3059 26.1555 li
42.9729 26.1555 li
42.6389 26.3225 li
42.3889 26.3225 li
42.0559 26.4055 li
41.7229 26.5725 li
41.4729 26.8225 li
41.1389 26.8225 li
40.8889 27.0725 li
40.6389 26.9885 li
40.3889 27.2385 li
40.1389 27.2385 li
39.8889 27.5725 li
39.6389 27.7385 li
39.3889 37.6555 li
0 0 0 1 cmyk
@
grestore
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if

1 0 1 <> CUFAAA+Helvetica AddT42Char 
1 3864 20 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>CUFAAA+Helvetica AddT42Char 
1 4408 22 <000200b40000057805bd0009002700944012070d49014805590158056905
641478050816bb01300119001b011c40422321202660127112751403121e
1f141c1503211e161404261224251e0009091b071e0b02261c1b08202515
1f251603310f691b1a29082625270a192829d6219566182b2b4ef43c4dfd
3c4e10f64df4edd4edd4ed003f3c3c3ffd12392f3cfd3c39111739011112
39391239395d1112392b3130015d01323635342726232111032132171615
1406071e011f011617161715232e012f012627262321112303478ca3723d
66fe1ac702a8a86dcf6d6256570507030b122ef40a0c040c0764397afe3b
c7031c70929d391efe0a02a1315efd84a833237280c55429461421133c56
f590311bfd8a>CUFAAA+Helvetica AddT42Char 
1 5592 26 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>CUFAAA+Helvetica AddT42Char 
1 5996 27 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>CUFAAA+Helvetica AddT42Char 
1 6256 28 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>CUFAAA+Helvetica AddT42Char 
1 6660 29 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>CUFAAA+Helvetica AddT42Char 
1 6752 30 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>CUFAAA+Helvetica AddT42Char 
1 6820 31 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>CUFAAA+Helvetica AddT42Char 
1 7004 32 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>CUFAAA+Helvetica AddT42Char 
1 7244 33 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>CUFAAA+Helvetica AddT42Char 
1 7384 34 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/space 1 def
/P 20 def
/R 22 def
/a 26 def
/c 27 def
/e 28 def
/i 29 def
/l 30 def
/n 31 def
/o 32 def
/r 33 def
/s 34 def
end
CUFAAA+Helvetica /Encoding get
dup 32 /space put
dup 80 /P put
dup 82 /R put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 22{/.notdef}rp 
/P /.notdef /R 14{/.notdef}rp /a /.notdef /c /.notdef 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
198.889 308.072 mo
(Recall)
[7.22 5.56 5 5.56 2.22 0 ]xsh
YJZMCB+Helvetica*1 [0 -10 -10 0 0 0 ]msf
10.1392 167.739 mo
(Precision)
[-6.67007 -3.32993 -5.56 -5 -2.22 -5 -2.22 -5.56 0 ]ysh
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8892 287.656 mo
( )sh
385.139 13.6555 mo
( )sh
44.2229 178.323 mo
121.64 178.323 li
121.64 279.156 li
44.2229 279.156 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
44.2229 279.156 mo
44.2229 178.323 li
121.639 178.323 li
121.639 279.156 li
44.2229 279.156 li
@
44.2229 279.156 mo
121.639 279.156 li
44.2229 178.323 mo
121.639 178.323 li
44.2229 279.156 mo
44.2229 178.323 li
121.639 279.156 mo
121.639 178.323 li
44.2229 279.156 mo
121.639 279.156 li
44.2229 279.156 mo
44.2229 178.323 li
44.2229 279.156 mo
121.639 279.156 li
44.2229 178.323 mo
121.639 178.323 li
44.2229 279.156 mo
44.2229 178.323 li
121.639 279.156 mo
121.639 178.323 li
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 4684 23 <00020060ffd504f605e5002f003000fe405e290f27232626360e35214726
62267a0e7724096b08180e172502590e680eaa22030a0e3a2224220a0304
1c1886142f2f2b1c3a1403043a2b0930020a0e081124221f283030111825
17490825281a321f25114900252f193132a0216a89182b2b4ef44dedf4ed
4e10f64dedf4ed12392f1211393912113939003f3fed3fed12392f10ed11
1217392efd335d7131304379404d282e111f0008022602262d2506251a26
032c002b002d2e032c002b00052a082b011d131f2b001b15182b01191801
2d042b0009270b2b01250b012e042b000729042b001e121c2b0119161c2b
01002b2b2b2b10102b2b01103c2b2b2b2b103c2b2b2b2b2b2b818181005d
0116171633323736353427262f0126272635342433320415232627262322
06151417161f01161716151404232027263701011e073463fa705cb24b4c
a2c7c3518c0112fbe70143bb0f315bdab09a5a3bd0ce95518cfe9debfeee
9b9b03024d01da7d4e92203ea0783332252d2c355cb7c6fedff5763f7394
626c3220302f223b67c4f4d28c8bee040b00>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/S 23 def
end
CUFAAA+Helvetica /Encoding get
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 22{/.notdef}rp 
/P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c 
/.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
82.5559 189.489 mo
(SR)
[6.67007 0 ]xsh
2 lw
50.0559 185.906 mo
79.5559 185.906 li
.0639048 0 .996094 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 2844 14 <000100af000004aa05bd000900394018071e040409031e0100020908066b
011a0b03082500190a0bb80157b32195dc182b2b4ef44dfd3c4e10f64de4
003f3f3ced12392ffd313013211521112115211123af03fbfccc02d1fd2f
c705bdb4fe42affd6400>CUFAAA+Helvetica AddT42Char 
1 4036 21 <00020050ff8b05e805e50015002700e4406b69036a1579038513961bc71b
064a1c591b5a1c64157515781cb719c81a083808181b021b191901151a1b
1a1a1a0001190100191e121a1a00191a191a1b18150206240001111e1500
02050d191a1b18042127213a0d03273a0105091e31111a29243109192829
d8216a66182b2b4ef44ded4e10f64ded003f33ed3fed1112173911123939
39011112393912173908872e2b087d10c50187102b3c2b3c87102bc42b3c
313018437940281f2606100b260f250725220c243200200e1e3201260624
3200230a2132011f102132012508273200002b2b2b012b2b2b2b2b2b8181
015d005d2507270e01232027261110371221201716111407060704363727
371736123510002322001110002105dc64e352bf71feaac2ab94be017401
85bb9223357efe576c28a164c05b41fef1ebeefeea010b01020479ad2d36
e0da0148012ad40110fac3fed08e83c87e1a11197e7b9568010276010301
3cfed1fec5fef7fec6000000>CUFAAA+Helvetica AddT42Char 
1 5092 24 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/F 14 def
/Q 21 def
/T 24 def
end
CUFAAA+Helvetica /Encoding get
dup 70 /F put
dup 81 /Q put
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 12{/.notdef}rp 
/F 9{/.notdef}rp /P /Q /R /S /T 12{/.notdef}rp 
/a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
82.5559 201.656 mo
(PQFT)
[6.67007 7.78 6.10992 0 ]xsh
50.0559 198.156 mo
79.5559 198.156 li
.265019 .809232 0 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 2648 13 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>CUFAAA+Helvetica AddT42Char 
1 3440 18 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/D 13 def
/N 18 def
end
CUFAAA+Helvetica /Encoding get
dup 68 /D put
dup 78 /N put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F 7{/.notdef}rp /N /.notdef /P /Q 
/R /S /T 12{/.notdef}rp /a /.notdef /c /.notdef 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
82.5559 213.906 mo
(PFDN)
[6.67007 6.10992 7.22 0 ]xsh
50.0559 210.323 mo
79.5559 210.323 li
.520012 0 .126131 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 2944 15 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>CUFAAA+Helvetica AddT42Char 
1 3392 17 <000100c90000019205bd00030017b8002b2bba00010000002e2b00b80000
2fb800022f303113331123c9c9c905bdfa43>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/G 15 def
/I 17 def
end
CUFAAA+Helvetica /Encoding get
dup 71 /G put
dup 73 /I put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /.notdef /I 4{/.notdef}rp /N 
/.notdef /P /Q /R /S /T 12{/.notdef}rp /a 
/.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o 2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
82.5559 226.156 mo
(SIG)
[6.67007 2.78 0 ]xsh
50.0559 222.573 mo
79.5559 222.573 li
.627314 0 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
82.5559 238.406 mo
(FT)
[6.10992 0 ]xsh
50.0559 234.823 mo
79.5559 234.823 li
.895628 .7673 0 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 5184 25 <000100250000077105bd000c0156409508090178077909780b8701860405
47014b02440348044d08420a8908870ac802c703c707c80b0c580b670768
0b890286038607890b9902960395079a0ba902a603a507aa0b0f0808070a
080b1908160a5707060b08040a023e284528052506060700250c0c0b0904
01030b020305060c050002080a0b0307080e17171a0705068640080304f4
0a0209f4800b0001860c190d8e5e182b194e10f4184dfd39391afd3939fd
39391afd3939194e456544e618003f173c3f173c12173901874d2eed872e
ed4b5279b4090a09080ab8019a400f120101020405030406070908090a08
b8019a400a12040403010102000c0b877d1008c5872e18052b087d10c587
0810c5872e18052b087d10c54b5179b301010002b8019ab6090a09040405
03b8019a400f090908040503040607010001020c0b870810c0870810c087
10057afd1808c4188710057afd7d08c4313001725d5d71005d7213090133
090133012309012301fd0115014cd8014c0115dafe7ed1feadfeabd1fe80
05bdfb5504abfb5504abfa4304c2fb3e05bd>CUFAAA+Helvetica AddT42Char 
1 7832 35 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>CUFAAA+Helvetica AddT42Char 
1 8172 37 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/W 25 def
/t 35 def
/v 37 def
end
CUFAAA+Helvetica /Encoding get
dup 87 /W put
dup 116 /t put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /.notdef /I 4{/.notdef}rp /N 
/.notdef /P /Q /R /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /.notdef /v 137{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
82.5559 250.656 mo
(Wavelet)
[9.44 5.56 5 5.56 2.22 5.56 0 ]xsh
50.0559 247.073 mo
79.5559 247.073 li
0 .990631 1 .000396735 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 3280 16 <000100a10000052f05bd000b003f402108091e0302020401020a07080407
2506051a0d010a250b00190c0c0da0217670182b2b104ef43c4dfd3c4e10
f63c4dfd3c003f3c3f3c392f3cfd3c3130133311211133112311211123a1
c902fcc9c9fd04c905bdfda1025ffa4302affd510000>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/H 16 def
end
CUFAAA+Helvetica /Encoding get
dup 72 /H put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /H /I 4{/.notdef}rp /N 
/.notdef /P /Q /R /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /.notdef /v 137{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
82.5559 262.906 mo
(HFT)
[7.22 6.10992 0 ]xsh
50.0559 259.239 mo
79.5559 259.239 li
.653162 .154971 0 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: CUFAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CUFAAA+Helvetica gcheck setglobal} if
1 3612 19 <00030050ffd505e805e5000f001b001c008a402c8705c700c701c302c808
c90a064308153a0f031b3a07091c021c1c0b1231031a1e18310b191d1ed8
216a66182b2b4ef44ded4e10f64ded12392f003f3fed3fed313043794032
001a0d26012509250526160e18320014001232011a081832001006123201
170c1532011302153201190a1b320011041b32002b2b2b2b012b2b2b2b2b
2b2b2b81005d001716111007022120272611103712210012351000232200
1114122103049bbb92a7c4fe95feadc2ad94be0174011bebfef1ebe4fee0
f701150e05e5fac3fed0feb7daff00e0d8014a012ad40110faa20179f501
03013cfec7fecff4feb1055e>CUFAAA+Helvetica AddT42Char 
1 7992 36 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>CUFAAA+Helvetica AddT42Char 
CUFAAA+Helvetica /CharStrings get begin
/O 19 def
/u 36 def
end
CUFAAA+Helvetica /Encoding get
dup 79 /O put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCB+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /H /I 4{/.notdef}rp /N 
/O /P /Q /R /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /u /v 137{/.notdef}rp]
YJZMCB+Helvetica nf
YJZMCB+Helvetica*1 [10 0 0 -10 0 0 ]msf
82.5559 275.072 mo
(Ours)
[7.78 5.56 3.32993 0 ]xsh
50.0559 271.489 mo
79.5559 271.489 li
@
gsave
-18.8841 321.906 mo
429.056 321.906 li
429.056 658.073 li
-18.8841 658.073 li
cp
clp
gsave
-18.9441 658.906 mo
429.056 658.906 li
429.056 321.906 li
-18.9441 321.906 li
cp
clp
-18.9441 658.156 mo
429.139 658.156 li
429.139 321.906 li
-18.9441 321.906 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
grestore
grestore
39.3059 347.156 mo
386.473 347.156 li
386.473 621.073 li
39.3059 621.073 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
.5 lw
39.3059 621.073 mo
39.3059 347.156 li
386.473 347.156 li
386.473 621.073 li
39.3059 621.073 li
@
.333 lw
[.5 4 ] 0 dsh
39.3059 621.073 mo
386.473 621.073 li
39.3059 581.906 mo
386.473 581.906 li
39.3059 542.738 mo
386.473 542.738 li
39.3059 503.656 mo
386.473 503.656 li
39.3059 464.488 mo
386.473 464.488 li
39.3059 425.406 mo
386.473 425.406 li
39.3059 386.239 mo
386.473 386.239 li
39.3059 347.156 mo
386.473 347.156 li
1 /0 /CSD get_res sepcs
1 sep
@
.5 lw
[] 0 dsh
39.3059 621.073 mo
386.473 621.073 li
39.3059 347.156 mo
386.473 347.156 li
39.3059 621.073 mo
39.3059 347.156 li
386.473 621.073 mo
386.473 347.156 li
39.3059 621.073 mo
386.473 621.073 li
39.3059 621.073 mo
39.3059 347.156 li
77.8059 621.073 mo
77.8059 617.573 li
77.8059 347.156 mo
77.8059 350.573 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /XFAAAA+Helvetica
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000036c6670
676d000000000000042800000a1d676c796619113cdf0000139800001f80
686561640000000000000e4800000036686865610000000000000e800000
0024686d74780000000000000ea4000000946c6f636185988caa00000f38
0000004c6d6178700000000000000f84000000206e616d655c6d6d870000
0fa400000024707265700000000000000fc8000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0401bb000598a8a20b003265358
2321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db8005c2c4b535845441b2121592d00000000010000
00000000299acaab5f0f3cf500110800000000005f4d8f0000000000cff2
eef7f865fc270b9108f9000000090001000000000000000100000629fe29
00000c01f865fced0b910001000000000000000000000000000000250512
004202390000023900af04730040047300c4047300400473003104730034
047300420473004d0473004b05c700a504e300af0639006305c700a10239
00c905c7009c06390050055600af0639005005c700b40556006004e30021
078d0025047300520400003b0473004801c7008401c7008906aa00840473
00840473003b02aa00890400004202390017047300800400000b00000036
0036005600c400ea0176022202700304039a03e404460478052005580570
05c60644069a075407de08aa08d809a40a6e0af00bba0be80c0a0c860ce2
0d5a0da00e800ed00f2a0fc000010000002500920009006b000700020010
0010005d000007e80a1d0004000100000001001200010000000000060010
00004a525746494e2b48656c7665746963610000b800532bb800492bb800
3f2bb800352bb8002b2b4118008001a6009001a600a001a600030069018b
0079018b0089018b0099018b00040089018b0099018b00a9018b00b9018b
b2040840ba0179001a014a400b041f5414191f180a0b1fd2b80106b49e1f
d918e3bb0119000d00e10119b20d0009410a01a0019f0064001f01a50025
017a00480028019ab3296c1f60410a01a9007001a9008001a90003008001
a9000101a9b21e321fbe012c00250401001f0126001e0401b61fe7312d1f
e531b80201b21fc227b80401b21fc11eb80201400f1fc01d9e1fbf1d671f
be1d671fab27b80401b21faa29b80401b61fa91d6c1f931eb8019ab21f92
1db80101b21f911db80101b21f751db80201b61f6d29961f6431b8019ab2
1f4c96b802abb21f391db80156400b1f3638211f351de41f2f27b8080140
0b1f2d1d4c1f2a31cd1f241db802abb21f201eb8012540111f1c1d931f3a
1d4c1f1e1d45273a1d4527bb01aa019b002a019bb2254a1fba019b002501
7ab349293896b8017bb348283125b8017a403648289629482725294c1f25
2946272729482756c80784075b07410732072b072807260721071b071408
120810080e080c080a08080807b801acb23f1f06bb01ab003f001f01abb3
08060805b801aeb23f1f04bb01ad003f001f01adb70804080208000814b8
ffe0b40000010014b801abb41000000100b801abb606100000010006b801
adb300000100b801ad401f04000001000410000001001002000001000200
000001000002010802004a00b0018db806008516763f183f123e11394644
3e113946443e113946443e113946443e113946443e11394660443e113946
60443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b
2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376706a664565234560
23456560234560b08b766818b080622020b16a704565234520b003266062
636820b003266165b070236544b06a234420b176664565234520b0032660
62636820b003266165b066236544b0762344b10066455458b166406544b2
7640764523614459b36242725d456523456023456560234560b089766818
b080622020b172424565234520b003266062636820b003266165b0422365
44b072234420b1625d4565234520b003266062636820b003266165b05d23
6544b0622344b1005d455458b15d406544b262406245236144592b2b2b2b
456953427374b8019a2045694b20b02853b049515a58b020615944b801a6
20456944750000>
[8065 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 4028 21 <00020060ffd504f605e5002f003000fe405e290f27232626360e35214726
62267a0e7724096b08180e172502590e680eaa22030a0e3a2224220a0304
1c1886142f2f2b1c3a1403043a2b0930020a0e081124221f283030111825
17490825281a321f25114900252f193132a0216a89182b2b4ef44dedf4ed
4e10f64dedf4ed12392f1211393912113939003f3fed3fed12392f10ed11
1217392efd335d7131304379404d282e111f0008022602262d2506251a26
032c002b002d2e032c002b00052a082b011d131f2b001b15182b01191801
2d042b0009270b2b01250b012e042b000729042b001e121c2b0119161c2b
01002b2b2b2b10102b2b01103c2b2b2b2b103c2b2b2b2b2b2b818181005d
0116171633323736353427262f0126272635342433320415232627262322
06151417161f01161716151404232027263701011e073463fa705cb24b4c
a2c7c3518c0112fbe70143bb0f315bdab09a5a3bd0ce95518cfe9debfeee
9b9b03024d01da7d4e92203ea0783332252d2c355cb7c6fedff5763f7394
626c3220302f223b67c4f4d28c8bee040b00>XFAAAA+Helvetica AddT42Char 
1 3752 20 <000200b40000057805bd0009002700944012070d49014805590158056905
641478050816bb01300119001b011c40422321202660127112751403121e
1f141c1503211e161404261224251e0009091b071e0b02261c1b08202515
1f251603310f691b1a29082625270a192829d6219566182b2b4ef43c4dfd
3c4e10f64df4edd4edd4ed003f3c3c3ffd12392f3cfd3c39111739011112
39391239395d1112392b3130015d01323635342726232111032132171615
1406071e011f011617161715232e012f012627262321112303478ca3723d
66fe1ac702a8a86dcf6d6256570507030b122ef40a0c040c0764397afe3b
c7031c70929d391efe0a02a1315efd84a833237280c55429461421133c56
f590311bfd8a>XFAAAA+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g21 21 def
/g20 20 def
end
XFAAAA+Helvetica /Encoding get
dup 33 /g21 put
dup 34 /g20 put
pop
end
%ADOEndSubsetFont
/YJZMCC+Helvetica /XFAAAA+Helvetica findfont ct_VMDictPut
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 221{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
70.8892 633.156 mo
(!")
[6.67007 0 ]xsh
116.389 621.073 mo
116.389 617.573 li
116.389 347.156 mo
116.389 350.573 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 3208 18 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>XFAAAA+Helvetica AddT42Char 
1 3380 19 <00020050ff8b05e805e50015002700e4406b69036a1579038513961bc71b
064a1c591b5a1c64157515781cb719c81a083808181b021b191901151a1b
1a1a1a0001190100191e121a1a00191a191a1b18150206240001111e1500
02050d191a1b18042127213a0d03273a0105091e31111a29243109192829
d8216a66182b2b4ef44ded4e10f64ded003f33ed3fed1112173911123939
39011112393912173908872e2b087d10c50187102b3c2b3c87102bc42b3c
313018437940281f2606100b260f250725220c243200200e1e3201260624
3200230a2132011f102132012508273200002b2b2b012b2b2b2b2b2b8181
015d005d2507270e01232027261110371221201716111407060704363727
371736123510002322001110002105dc64e352bf71feaac2ab94be017401
85bb9223357efe576c28a164c05b41fef1ebeefeea010b01020479ad2d36
e0da0148012ad40110fac3fed08e83c87e1a11197e7b9568010276010301
3cfed1fec5fef7fec6000000>XFAAAA+Helvetica AddT42Char 
1 2188 12 <000100af000004aa05bd000900394018071e040409031e0100020908066b
011a0b03082500190a0bb80157b32195dc182b2b4ef44dfd3c4e10f64de4
003f3f3ced12392ffd313013211521112115211123af03fbfccc02d1fd2f
c705bdb4fe42affd6400>XFAAAA+Helvetica AddT42Char 
1 4436 22 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g18 18 def
/g19 19 def
/g12 12 def
/g22 22 def
end
XFAAAA+Helvetica /Encoding get
dup 35 /g18 put
dup 36 /g19 put
dup 37 /g12 put
dup 38 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 217{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
103.056 633.156 mo
(#$%&)
[6.67007 7.78 6.10992 0 ]xsh
154.973 621.073 mo
154.973 617.573 li
154.973 347.156 mo
154.973 350.573 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 1992 11 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>XFAAAA+Helvetica AddT42Char 
1 2784 16 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g11 11 def
/g16 16 def
end
XFAAAA+Helvetica /Encoding get
dup 39 /g11 put
dup 40 /g16 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 215{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
141.389 633.156 mo
(#%'\()
[6.67007 6.10992 7.22 0 ]xsh
193.556 621.073 mo
193.556 617.573 li
193.556 347.156 mo
193.556 350.573 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 2736 15 <000100c90000019205bd00030017b8002b2bba00010000002e2b00b80000
2fb800022f303113331123c9c9c905bdfa43>XFAAAA+Helvetica AddT42Char 
1 2288 13 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g15 15 def
/g13 13 def
end
XFAAAA+Helvetica /Encoding get
dup 41 /g15 put
dup 42 /g13 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 213{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
184.973 633.156 mo
(!\)*)
[6.67007 2.78 0 ]xsh
232.139 621.073 mo
232.139 617.573 li
232.139 347.156 mo
232.139 350.573 li
@
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
226.056 633.156 mo
(%&)
[6.10992 0 ]xsh
270.723 621.073 mo
270.723 617.573 li
270.723 347.156 mo
270.723 350.573 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 4528 23 <000100250000077105bd000c0156409508090178077909780b8701860405
47014b02440348044d08420a8908870ac802c703c707c80b0c580b670768
0b890286038607890b9902960395079a0ba902a603a507aa0b0f0808070a
080b1908160a5707060b08040a023e284528052506060700250c0c0b0904
01030b020305060c050002080a0b0307080e17171a0705068640080304f4
0a0209f4800b0001860c190d8e5e182b194e10f4184dfd39391afd3939fd
39391afd3939194e456544e618003f173c3f173c12173901874d2eed872e
ed4b5279b4090a09080ab8019a400f120101020405030406070908090a08
b8019a400a12040403010102000c0b877d1008c5872e18052b087d10c587
0810c5872e18052b087d10c54b5179b301010002b8019ab6090a09040405
03b8019a400f090908040503040607010001020c0b870810c0870810c087
10057afd1808c4188710057afd7d08c4313001725d5d71005d7213090133
090133012309012301fd0115014cd8014c0115dafe7ed1feadfeabd1fe80
05bdfb5504abfb5504abfa4304c2fb3e05bd>XFAAAA+Helvetica AddT42Char 
1 4936 24 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>XFAAAA+Helvetica AddT42Char 
1 7764 36 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>XFAAAA+Helvetica AddT42Char 
1 5600 26 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>XFAAAA+Helvetica AddT42Char 
1 6096 28 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>XFAAAA+Helvetica AddT42Char 
1 7424 34 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g23 23 def
/g24 24 def
/g36 36 def
/g26 26 def
/g28 28 def
/g34 34 def
end
XFAAAA+Helvetica /Encoding get
dup 43 /g23 put
dup 44 /g24 put
dup 45 /g36 put
dup 46 /g26 put
dup 47 /g28 put
dup 48 /g34 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 207{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
253.139 633.156 mo
(+,-./.0)
[9.44 5.56 5 5.56 2.22 5.56 0 ]xsh
309.306 621.073 mo
309.306 617.573 li
309.306 347.156 mo
309.306 350.573 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 2624 14 <000100a10000052f05bd000b003f402108091e0302020401020a07080407
2506051a0d010a250b00190c0c0da0217670182b2b104ef43c4dfd3c4e10
f63c4dfd3c003f3c3f3c392f3cfd3c3130133311211133112311211123a1
c902fcc9c9fd04c905bdfda1025ffa4302affd510000>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g14 14 def
end
XFAAAA+Helvetica /Encoding get
dup 49 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 206{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
299.639 633.156 mo
(1%&)
[7.22 6.10992 0 ]xsh
347.889 621.073 mo
347.889 617.573 li
347.889 347.156 mo
347.889 350.573 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 2956 17 <00030050ffd505e805e5000f001b001c008a402c8705c700c701c302c808
c90a064308153a0f031b3a07091c021c1c0b1231031a1e18310b191d1ed8
216a66182b2b4ef44ded4e10f64ded12392f003f3fed3fed313043794032
001a0d26012509250526160e18320014001232011a081832001006123201
170c1532011302153201190a1b320011041b32002b2b2b2b012b2b2b2b2b
2b2b2b81005d001716111007022120272611103712210012351000232200
1114122103049bbb92a7c4fe95feadc2ad94be0174011bebfef1ebe4fee0
f701150e05e5fac3fed0feb7daff00e0d8014a012ad40110faa20179f501
03013cfec7fecff4feb1055e>XFAAAA+Helvetica AddT42Char 
1 7584 35 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>XFAAAA+Helvetica AddT42Char 
1 6836 32 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>XFAAAA+Helvetica AddT42Char 
1 6976 33 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g17 17 def
/g35 35 def
/g32 32 def
/g33 33 def
end
XFAAAA+Helvetica /Encoding get
dup 50 /g17 put
dup 51 /g35 put
dup 52 /g32 put
dup 53 /g33 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 202{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
337.056 633.156 mo
(2345)
[7.78 5.56 3.32993 0 ]xsh
39.3059 621.073 mo
42.7229 621.073 li
386.473 621.073 mo
382.973 621.073 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 172 3 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g3 3 def
end
XFAAAA+Helvetica /Encoding get
dup 54 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 201{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
30.8892 624.739 mo
(6)sh
39.3059 581.906 mo
42.7229 581.906 li
386.473 581.906 mo
382.973 581.906 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 108 2 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>XFAAAA+Helvetica AddT42Char 
1 392 4 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g2 2 def
/g4 4 def
end
XFAAAA+Helvetica /Encoding get
dup 55 /g2 put
dup 56 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 199{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
22.5559 585.572 mo
(678)
[5.56 2.78 0 ]xsh
39.3059 542.738 mo
42.7229 542.738 li
386.473 542.738 mo
382.973 542.738 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 468 5 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g5 5 def
end
XFAAAA+Helvetica /Encoding get
dup 57 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 198{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
22.5559 546.406 mo
(679)
[5.56 2.78 0 ]xsh
39.3059 503.656 mo
42.7229 503.656 li
386.473 503.656 mo
382.973 503.656 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 748 6 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g6 6 def
end
XFAAAA+Helvetica /Encoding get
dup 58 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 197{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
22.5559 507.322 mo
(67:)
[5.56 2.78 0 ]xsh
39.3059 464.488 mo
42.7229 464.488 li
386.473 464.488 mo
382.973 464.488 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 1092 7 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g7 7 def
end
XFAAAA+Helvetica /Encoding get
dup 59 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 196{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
22.5559 468.156 mo
(67;)
[5.56 2.78 0 ]xsh
39.3059 425.406 mo
42.7229 425.406 li
386.473 425.406 mo
382.973 425.406 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 1248 8 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g8 8 def
end
XFAAAA+Helvetica /Encoding get
dup 60 /g8 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 195{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
22.5559 429.072 mo
(67<)
[5.56 2.78 0 ]xsh
39.3059 386.239 mo
42.7229 386.239 li
386.473 386.239 mo
382.973 386.239 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 1544 9 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g9 9 def
end
XFAAAA+Helvetica /Encoding get
dup 61 /g9 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 194{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
22.5559 389.906 mo
(67=)
[5.56 2.78 0 ]xsh
39.3059 347.156 mo
42.7229 347.156 li
386.473 347.156 mo
382.973 347.156 li
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 1844 10 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g10 10 def
end
XFAAAA+Helvetica /Encoding get
dup 62 /g10 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 193{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
22.5559 350.822 mo
(67>)
[5.56 2.78 0 ]xsh
39.3059 621.073 mo
386.473 621.073 li
39.3059 347.156 mo
386.473 347.156 li
39.3059 621.073 mo
39.3059 347.156 li
386.473 621.073 mo
386.473 347.156 li
@
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
65.8059 436.906 mo
72.7229 436.906 li
72.7229 621.073 li
65.8059 621.073 li
cp
1 .972106 .102541 .117464 cmyk
f
65.8059 621.073 mo
65.8059 436.906 li
72.7229 436.906 li
72.7229 621.073 li
65.8059 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
104.389 431.156 mo
111.306 431.156 li
111.306 621.073 li
104.389 621.073 li
cp
1 .972106 .102541 .117464 cmyk
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
104.389 621.073 mo
104.389 431.156 li
111.306 431.156 li
111.306 621.073 li
104.389 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
142.973 397.823 mo
149.806 397.823 li
149.806 621.073 li
142.973 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
142.973 621.073 mo
142.973 397.823 li
149.806 397.823 li
149.806 621.073 li
142.973 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
181.556 420.573 mo
188.389 420.573 li
188.389 621.073 li
181.556 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
181.556 621.073 mo
181.556 420.573 li
188.389 420.573 li
188.389 621.073 li
181.556 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
220.139 443.156 mo
226.972 443.156 li
226.972 621.073 li
220.139 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
220.139 621.073 mo
220.139 443.156 li
226.973 443.156 li
226.973 621.073 li
220.139 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
258.723 397.239 mo
265.556 397.239 li
265.556 621.071 li
258.723 621.071 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
258.723 621.073 mo
258.723 397.239 li
265.556 397.239 li
265.556 621.073 li
258.723 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
297.306 399.323 mo
304.139 399.323 li
304.139 621.073 li
297.306 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
297.306 621.073 mo
297.306 399.323 li
304.139 399.323 li
304.139 621.073 li
297.306 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
335.889 381.573 mo
342.722 381.573 li
342.722 621.073 li
335.889 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
335.889 621.073 mo
335.889 381.573 li
342.723 381.573 li
342.723 621.073 li
335.889 621.073 li
39.3059 621.073 mo
386.473 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
74.3889 510.323 mo
81.3059 510.323 li
81.3059 621.073 li
74.3889 621.073 li
cp
.406867 0 .821653 0 cmyk
f
74.3889 621.073 mo
74.3889 510.323 li
81.3059 510.323 li
81.3059 621.073 li
74.3889 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
112.973 507.906 mo
119.806 507.906 li
119.806 621.073 li
112.973 621.073 li
cp
.406867 0 .821653 0 cmyk
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
112.973 621.073 mo
112.973 507.906 li
119.806 507.906 li
119.806 621.073 li
112.973 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
151.556 503.573 mo
158.389 503.573 li
158.389 621.073 li
151.556 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
151.556 621.073 mo
151.556 503.573 li
158.389 503.573 li
158.389 621.073 li
151.556 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
190.139 530.906 mo
196.972 530.906 li
196.972 621.073 li
190.139 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
190.139 621.073 mo
190.139 530.906 li
196.973 530.906 li
196.973 621.073 li
190.139 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
228.723 511.073 mo
235.556 511.073 li
235.556 621.073 li
228.723 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
228.723 621.073 mo
228.723 511.073 li
235.556 511.073 li
235.556 621.073 li
228.723 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
267.306 524.238 mo
274.139 524.238 li
274.139 621.071 li
267.306 621.071 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
267.306 621.073 mo
267.306 524.238 li
274.139 524.238 li
274.139 621.073 li
267.306 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
305.889 480.406 mo
312.722 480.406 li
312.722 621.073 li
305.889 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
305.889 621.073 mo
305.889 480.406 li
312.723 480.406 li
312.723 621.073 li
305.889 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
344.389 459.156 mo
351.306 459.156 li
351.306 621.073 li
344.389 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
344.389 621.073 mo
344.389 459.156 li
351.306 459.156 li
351.306 621.073 li
344.389 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
82.9729 481.738 mo
89.8059 481.738 li
89.8059 621.071 li
82.9729 621.071 li
cp
.290196 1 1 .385595 cmyk
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
82.9729 621.073 mo
82.9729 481.738 li
89.8059 481.738 li
89.8059 621.073 li
82.9729 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
121.556 475.406 mo
128.389 475.406 li
128.389 621.073 li
121.556 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
121.556 621.073 mo
121.556 475.406 li
128.389 475.406 li
128.389 621.073 li
121.556 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
160.139 464.823 mo
166.972 464.823 li
166.972 621.073 li
160.139 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
160.139 621.073 mo
160.139 464.823 li
166.973 464.823 li
166.973 621.073 li
160.139 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
198.723 493.323 mo
205.556 493.323 li
205.556 621.073 li
198.723 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
198.723 621.073 mo
198.723 493.323 li
205.556 493.323 li
205.556 621.073 li
198.723 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
237.306 481.073 mo
244.139 481.073 li
244.139 621.073 li
237.306 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
237.306 621.073 mo
237.306 481.073 li
244.139 481.073 li
244.139 621.073 li
237.306 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
275.889 476.156 mo
282.722 476.156 li
282.722 621.073 li
275.889 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
275.889 621.073 mo
275.889 476.156 li
282.723 476.156 li
282.723 621.073 li
275.889 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
314.389 447.156 mo
321.306 447.156 li
321.306 621.073 li
314.389 621.073 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
314.389 621.073 mo
314.389 447.156 li
321.306 447.156 li
321.306 621.073 li
314.389 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
352.973 427.488 mo
359.89 427.488 li
359.89 621.071 li
352.973 621.071 li
cp
f
gsave
39.3059 621.156 mo
386.556 621.156 li
386.556 347.156 li
39.3059 347.156 li
cp
clp
352.973 621.073 mo
352.973 427.488 li
359.889 427.488 li
359.889 621.073 li
352.973 621.073 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if

1 0 1 <> XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g1 1 def
end
XFAAAA+Helvetica /Encoding get
dup 63 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 /g1 
192{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8892 624.656 mo
(?)sh
385.139 350.656 mo
(?)sh
44.2229 352.156 mo
137.306 352.156 li
137.306 392.156 li
44.2229 392.156 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
44.2229 392.156 mo
44.2229 352.156 li
137.306 352.156 li
137.306 392.156 li
44.2229 392.156 li
@
44.2229 392.156 mo
137.306 392.156 li
44.2229 352.156 mo
137.306 352.156 li
44.2229 392.156 mo
44.2229 352.156 li
137.306 392.156 mo
137.306 352.156 li
44.2229 392.156 mo
137.306 392.156 li
44.2229 392.156 mo
44.2229 352.156 li
44.2229 392.156 mo
137.306 392.156 li
44.2229 352.156 mo
137.306 352.156 li
44.2229 392.156 mo
44.2229 352.156 li
137.306 392.156 mo
137.306 352.156 li
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 5340 25 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>XFAAAA+Helvetica AddT42Char 
1 6004 27 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>XFAAAA+Helvetica AddT42Char 
1 6596 31 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>XFAAAA+Helvetica AddT42Char 
1 6412 30 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g25 25 def
/g27 27 def
/g31 31 def
/g30 30 def
end
XFAAAA+Helvetica /Encoding get
dup 64 /g25 put
dup 65 /g27 put
dup 66 /g31 put
dup 67 /g30 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 /g1 
/g25 /g27 /g31 /g30 188{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
84.2226 363.322 mo
(#4.)sh
99.7826 363.322 mo
(@A5ABC)
[5 2.22 5 2.22 5.56 0 ]xsh
50.3059 355.239 mo
81.0559 355.239 li
81.0559 364.322 li
50.3059 364.322 li
cp
1 .972106 .102541 .117464 cmyk
f
50.3059 364.323 mo
50.3059 355.239 li
81.0559 355.239 li
81.0559 364.323 li
50.3059 364.323 li
1 /0 /CSD get_res sepcs
1 sep
@
0 0 0 1 cmyk
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
84.2226 375.739 mo
(".@,//)
[7.22 5.56 5 5.56 2.22 0 ]xsh
50.3059 367.573 mo
81.0559 367.573 li
81.0559 376.656 li
50.3059 376.656 li
cp
.406867 0 .821653 0 cmyk
f
50.3059 376.656 mo
50.3059 367.573 li
81.0559 367.573 li
81.0559 376.656 li
50.3059 376.656 li
1 /0 /CSD get_res sepcs
1 sep
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: XFAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XFAAAA+Helvetica gcheck setglobal} if
1 6164 29 <0001008400000625044700260085403b0708070e060f1708170e170f2708
270e270f4819560b670b0c23250a1a1d23190a02041725211d171d0d0607
00061b1c2503130a2817171a112914b80101b21a291db80101400a00012e
25292600192728b8010db3216242182b2b4ef43c4dfde410f4edf4fd4e45
6544e6003f173c3f3f3c4deded111217390111123912393130005d133315
36373633321716173e013332171615112311342623220615112311342726
23220615112384b240345971804e2c243ca265d84e2abb6b4d6a99b71a29
7066a7b4042f984f243d3f244656539c548efd3702e86b508ea6fd9102bb
6d324b9ecffdc800>XFAAAA+Helvetica AddT42Char 
XFAAAA+Helvetica /CharStrings get begin
/g29 29 def
end
XFAAAA+Helvetica /Encoding get
dup 68 /g29 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMCC+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 /g1 
/g25 /g27 /g31 /g30 /g29 187{/.notdef}rp]
YJZMCC+Helvetica nf
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
84.2226 388.072 mo
(%)sh
%ADOBeginSubsetFont: GLAAAA+Helvetica-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (GLAAAA+Helvetica)
%%Title: (GLAAAA+Helvetica Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /GLAAAA+Helvetica def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-951 -481 1446 1122} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 2197 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7C
A97DB1343CA> |
239 <001C60D8A8C9B7F374C6243061E982D378A14DF0A305> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /GLAAAA+Helvetica-Identity-H /Identity-H 0 [/GLAAAA+Helvetica] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YJZMCD+Helvetica /GLAAAA+Helvetica-Identity-H findfont ct_VMDictPut
YJZMCD+Helvetica [10 0 0 -10 0 0 ]msf
90.3306 388.072 mo
(\000\357)sh
YJZMCC+Helvetica*1 [10 0 0 -10 0 0 ]msf
96.1706 388.072 mo
(D.,534.)
[8.32993 5.56 5.56 5 5.56 3.32993 0 ]xsh
50.3059 379.906 mo
81.0559 379.906 li
81.0559 388.989 li
50.3059 388.989 li
cp
.290196 1 1 .385595 cmyk
f
50.3059 388.989 mo
50.3059 379.906 li
81.0559 379.906 li
81.0559 388.989 li
50.3059 388.989 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/YJZMBZ+Helvetica*1 uf
/YJZMBZ+Helvetica uf
/VXVBAA+Helvetica uf
/YJZMBY+Helvetica*1 uf
/YJZMBY+Helvetica uf
/CBIAAA+Helvetica uf
/YJZMCB+Helvetica*1 uf
/YJZMCB+Helvetica uf
/CUFAAA+Helvetica uf
/YJZMCD+Helvetica-Identity-H uf
/YJZMCD+Helvetica /CIDFont ur
/YJZMCA+Helvetica-Identity-H uf
/YJZMCA+Helvetica /CIDFont ur
/YJZMCC+Helvetica*1 uf
/YJZMCC+Helvetica uf
/XFAAAA+Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
