%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: MSRA.pdf
%%Creator: Adobe Acrobat 10.1.0
%%For: zhaohongmiao
%%CreationDate: 2014/11/30, 21:42:17
%%BoundingBox: 0 0 390 637
%%HiResBoundingBox: 0 0 389.0365 636.9181
%%CropBox: 0 0 389.0365 636.9181
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 947 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2014-11-30T13:30:49Z"
   xmp:CreatorTool="OmniGraffle 6.0.1"
   xmp:ModifyDate="2014-11-30T21:41:59+08:00"
   xmp:MetadataDate="2014-11-30T21:41:59+08:00"
   pdf:Producer="Mac OS X 10.10.1 Quartz PDFContext"
   xmpMM:DocumentID="uuid:91851cb3-aa89-4126-a6cc-e0692c976676"
   xmpMM:InstanceID="uuid:d93263c3-77f3-410d-b0ab-113dbf5d8020">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>qiuxinxin</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -636.918 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 636.918 li
389.036 636.918 li
389.036 0 li
cp
clp
gsave
-32.1328 667.9 mo
910.867 667.9 li
910.867 -24.0995 li
-32.1328 -24.0995 li
cp
clp
-78.1328 -28.0995 mo
925.867 -28.0995 li
925.867 750.9 li
-78.1328 750.9 li
cp
false sop
0 0 0 0 cmyk
f
grestore
gsave
-23.0728 -15.0995 mo
424.867 -15.0995 li
424.867 321.067 li
-23.0728 321.067 li
cp
clp
gsave
-23.1328 321.9 mo
424.867 321.9 li
424.867 -15.0995 li
-23.1328 -15.0995 li
cp
clp
-23.1328 321.15 mo
424.95 321.15 li
424.95 -15.0995 li
-23.1328 -15.0995 li
cp
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
grestore
grestore
35.1172 10.1505 mo
382.284 10.1505 li
382.284 284.067 li
35.1172 284.067 li
cp
false sop
1 /0 /CSD get_res sepcs
0 sep
f
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
35.1172 284.067 mo
35.1172 10.1505 li
382.284 10.1505 li
382.284 284.067 li
35.1172 284.067 li
@
.333 lw
[.5 4 ] 0 dsh
35.1172 284.067 mo
35.1172 10.1505 li
69.7842 284.067 mo
69.7842 10.1505 li
104.534 284.067 mo
104.534 10.1505 li
139.2 284.067 mo
139.2 10.1505 li
173.95 284.067 mo
173.95 10.1505 li
208.7 284.067 mo
208.7 10.1505 li
243.367 284.067 mo
243.367 10.1505 li
278.117 284.067 mo
278.117 10.1505 li
312.784 284.067 mo
312.784 10.1505 li
347.534 284.067 mo
347.534 10.1505 li
382.284 284.067 mo
382.284 10.1505 li
35.1172 284.067 mo
382.284 284.067 li
35.1172 249.817 mo
382.284 249.817 li
35.1172 215.567 mo
382.284 215.567 li
35.1172 181.317 mo
382.284 181.317 li
35.1172 147.068 mo
382.284 147.068 li
35.1172 112.818 mo
382.284 112.818 li
35.1172 78.5675 mo
382.284 78.5675 li
35.1172 44.3174 mo
382.284 44.3174 li
35.1172 10.1505 mo
382.284 10.1505 li
1 /0 /CSD get_res sepcs
1 sep
@
.5 lw
[] 0 dsh
35.1172 284.067 mo
382.284 284.067 li
35.1172 10.1505 mo
382.284 10.1505 li
35.1172 284.067 mo
35.1172 10.1505 li
382.284 284.067 mo
382.284 10.1505 li
35.1172 284.067 mo
382.284 284.067 li
35.1172 284.067 mo
35.1172 10.1505 li
35.1172 284.067 mo
35.1172 280.567 li
35.1172 10.1505 mo
35.1172 13.5674 li
@
%ADOBeginSubsetFont: FXYAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /FXYAAA+Helvetica
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000036c6670
676d000000000000042800000a1d676c7966e480a8dd000013a000002118
686561640000000000000e4800000036686865610000000000000e800000
0024686d74780000000000000ea4000000986c6f63619a6e91b400000f3c
0000004e6d6178700000000000000f8c000000206e616d65587f758c0000
0fac00000024707265700000000000000fd0000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0401bb000598a8a20b003265358
2321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db8005c2c4b535845441b2121592d00000000010000
0000000037422dfa5f0f3cf500110800000000005f4d8f0000000000cff2
eef7f865fc270b9108f9000000090001000000000000000100000629fe29
00000c01f865fced0b910001000000000000000000000000000000260512
004202390000023900af04730040047300c4047300400473003104730034
047300420473004d0473004b047300420473004905c700a504e300af0639
006305c700a1023900c905c7009c06390050055600af0639005005c700b4
0556006004e30021078d0025047300520400003b0473004801c7008401c7
0089047300840473003b02aa00890400004202390017047300800400000b
000000360036005600c400ea0176022202700304039a03e40496052c058e
05c0066806a006b8070e078c07e2089c092609f20a200aec0bb60c380d02
0d300d520dae0e260e6c0f4c0f9c0ff6108c000000010000002600920009
006b0007000200100010005d000007e80a1d000400010000000100120001
000000000006001000004b4b5358505a2b48656c7665746963610000b800
532bb800492bb8003f2bb800352bb8002b2b4118008001a6009001a600a0
01a600030069018b0079018b0089018b0099018b00040089018b0099018b
00a9018b00b9018bb2040840ba0179001a014a400b041f5414191f180a0b
1fd2b80106b49e1fd918e3bb0119000d00e10119b20d0009410a01a0019f
0064001f01a50025017a00480028019ab3296c1f60410a01a9007001a900
8001a90003008001a9000101a9b21e321fbe012c00250401001f0126001e
0401b61fe7312d1fe531b80201b21fc227b80401b21fc11eb80201400f1f
c01d9e1fbf1d671fbe1d671fab27b80401b21faa29b80401b61fa91d6c1f
931eb8019ab21f921db80101b21f911db80101b21f751db80201b61f6d29
961f6431b8019ab21f4c96b802abb21f391db80156400b1f3638211f351d
e41f2f27b80801400b1f2d1d4c1f2a31cd1f241db802abb21f201eb80125
40111f1c1d931f3a1d4c1f1e1d45273a1d4527bb01aa019b002a019bb225
4a1fba019b0025017ab349293896b8017bb348283125b8017a4036482896
29482725294c1f252946272729482756c80784075b07410732072b072807
260721071b071408120810080e080c080a08080807b801acb23f1f06bb01
ab003f001f01abb308060805b801aeb23f1f04bb01ad003f001f01adb708
04080208000814b8ffe0b40000010014b801abb41000000100b801abb606
100000010006b801adb300000100b801ad401f0400000100041000000100
1002000001000200000001000002010802004a00b0018db806008516763f
183f123e113946443e113946443e113946443e113946443e113946443e11
394660443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358
b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376
706a66456523456023456560234560b08b766818b080622020b16a704565
234520b003266062636820b003266165b070236544b06a234420b1766645
65234520b003266062636820b003266165b066236544b0762344b1006645
5458b166406544b27640764523614459b36242725d456523456023456560
234560b089766818b080622020b172424565234520b003266062636820b0
03266165b042236544b072234420b1625d4565234520b003266062636820
b003266165b05d236544b0622344b1005d455458b15d406544b262406245
236144592b2b2b2b456953427374b8019a2045694b20b02853b049515a58
b020615944b801a620456944750000>
[8473 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 172 3 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>FXYAAA+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/zero 3 def
end
FXYAAA+Helvetica /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/YJZMBS+Helvetica /FXYAAA+Helvetica findfont ct_VMDictPut
/YJZMBS+Helvetica*1 
[48{/.notdef}rp /zero 207{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
32.3672 296.15 mo
(0)sh
69.7842 284.067 mo
69.7842 280.567 li
69.7842 10.1505 mo
69.7842 13.5674 li
@
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 108 2 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>FXYAAA+Helvetica AddT42Char 
1 392 4 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/period 2 def
/one 4 def
end
FXYAAA+Helvetica /Encoding get
dup 46 /period put
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one 206{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
62.8672 296.15 mo
(0.1)
[5.56 2.78 0 ]xsh
104.534 284.067 mo
104.534 280.567 li
104.534 10.1505 mo
104.534 13.5674 li
@
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 468 5 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/two 5 def
end
FXYAAA+Helvetica /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two 205{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
97.6172 296.15 mo
(0.2)
[5.56 2.78 0 ]xsh
139.2 284.067 mo
139.2 280.567 li
139.2 10.1505 mo
139.2 13.5674 li
@
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 748 6 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/three 6 def
end
FXYAAA+Helvetica /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three 204{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
132.284 296.15 mo
(0.3)
[5.56 2.78 0 ]xsh
173.95 284.067 mo
173.95 280.567 li
173.95 10.1505 mo
173.95 13.5674 li
@
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 1092 7 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/four 7 def
end
FXYAAA+Helvetica /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
203{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
167.034 296.15 mo
(0.4)
[5.56 2.78 0 ]xsh
208.7 284.067 mo
208.7 280.567 li
208.7 10.1505 mo
208.7 13.5674 li
@
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 1248 8 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/five 8 def
end
FXYAAA+Helvetica /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five 202{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
201.784 296.15 mo
(0.5)
[5.56 2.78 0 ]xsh
243.367 284.067 mo
243.367 280.567 li
243.367 10.1505 mo
243.367 13.5674 li
@
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 1544 9 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/six 9 def
end
FXYAAA+Helvetica /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six 201{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
236.451 296.15 mo
(0.6)
[5.56 2.78 0 ]xsh
278.117 284.067 mo
278.117 280.567 li
278.117 10.1505 mo
278.117 13.5674 li
@
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 1844 10 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/seven 10 def
end
FXYAAA+Helvetica /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven 200{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
271.201 296.15 mo
(0.7)
[5.56 2.78 0 ]xsh
312.784 284.067 mo
312.784 280.567 li
312.784 10.1505 mo
312.784 13.5674 li
@
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 1992 11 <00030042ffd7041a059c000b0017003200cb4047560157095a0f59136401
65096b0f691377250949107b197623722573277c317c3288198720872788
2e883198190d47083208250e0225320b3511112c05351e0517352c0d0238
21b80186b70e38296f2f08381bb80186b514382f3447331076c418d4edf4
ed10f5edf4ed003fed3fed12392fed39390111123912393130437940352a
2e1c201216030d162d1428000c2b0e28010a12082800061d082800041f02
2801152e1728000d2a172800071c0528010320052801002b2b2b2b012b2b
2b2b2b81818181015d005d00363534262322061514163312363534262322
061514163300272635343633321615140706071617161514022322243534
363702a48680838274966688a5aa8581a3959cfeb52a4fe8d5ceea442650
59335ffee8d1fedf7c7a0340855c5086865a6572fd3b87868b90938270a3
02a02b5080a0e6d99186532f2d293564a0bdfef9e3d87fb93100>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/eight 11 def
end
FXYAAA+Helvetica /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight 199{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
305.867 296.15 mo
(0.8)
[5.56 2.78 0 ]xsh
347.534 284.067 mo
347.534 280.567 li
347.534 10.1505 mo
347.534 13.5674 li
@
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 2348 12 <00020049ffd80411059a001b002700ab402e19052b052816480658056805
8919881a981a09460807212727350a0a182135100504351bc7180d07023c
071e3114b80155400b0d00291b8124380d2947281076c418d4edf4ed10f5
fd397d4b52787a2f18003feded3fed12392fed1112393130437940341f26
191a0b13010312250226220f24280020111e28010319002800260b242800
230e2128011f13212801011a042800250c2728002b2b2b2b012b2b2b2b2b
2b81818181015d01161716333236130e0123220235341233201316151007
02212226350036353426232206151416330110086b374581b6263cb166cf
f1eee8013977424f83fec7d2da0232b19f7b849b8895015a95391ed70149
5f4d0102cbc30128fee69be9fef9cbfeaedca601268db09e9bb1948ca500
>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/nine 12 def
end
FXYAAA+Helvetica /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine 198{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
340.617 296.15 mo
(0.9)
[5.56 2.78 0 ]xsh
382.284 284.067 mo
382.284 280.567 li
382.284 10.1505 mo
382.284 13.5674 li
@
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
379.534 296.15 mo
(1)sh
35.1172 284.067 mo
38.5342 284.067 li
382.284 284.067 mo
378.784 284.067 li
@
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 287.734 mo
(0.2)
[5.56 2.78 0 ]xsh
35.1172 249.817 mo
38.5342 249.817 li
382.284 249.817 mo
378.784 249.817 li
@
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 253.484 mo
(0.3)
[5.56 2.78 0 ]xsh
35.1172 215.567 mo
38.5342 215.567 li
382.284 215.567 mo
378.784 215.567 li
@
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 219.234 mo
(0.4)
[5.56 2.78 0 ]xsh
35.1172 181.317 mo
38.5342 181.317 li
382.284 181.317 mo
378.784 181.317 li
@
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 184.984 mo
(0.5)
[5.56 2.78 0 ]xsh
35.1172 147.068 mo
38.5342 147.068 li
382.284 147.068 mo
378.784 147.068 li
@
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 150.734 mo
(0.6)
[5.56 2.78 0 ]xsh
35.1172 112.818 mo
38.5342 112.818 li
382.284 112.818 mo
378.784 112.818 li
@
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 116.484 mo
(0.7)
[5.56 2.78 0 ]xsh
35.1172 78.5675 mo
38.5342 78.5675 li
382.284 78.5675 mo
378.784 78.5675 li
@
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 82.2339 mo
(0.8)
[5.56 2.78 0 ]xsh
35.1172 44.3174 mo
38.5342 44.3174 li
382.284 44.3174 mo
378.784 44.3174 li
@
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 47.9838 mo
(0.9)
[5.56 2.78 0 ]xsh
35.1172 10.1505 mo
38.5342 10.1505 li
382.284 10.1505 mo
378.784 10.1505 li
@
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
26.7005 13.8171 mo
(1)sh
35.1172 284.067 mo
382.284 284.067 li
35.1172 10.1505 mo
382.284 10.1505 li
35.1172 284.067 mo
35.1172 10.1505 li
382.284 284.067 mo
382.284 10.1505 li
@
gsave
35.1172 284.067 mo
382.367 284.067 li
382.367 10.0674 li
35.1172 10.0674 li
cp
clp
2 lw
381.867 280.65 mo
380.7 277.817 li
379.2 274.067 li
377.534 270.733 li
375.784 267.65 li
373.95 264.983 li
372.034 262.483 li
370.117 260.067 li
368.117 257.817 li
363.95 253.65 li
361.867 251.65 li
359.7 249.733 li
357.45 247.817 li
355.2 245.983 li
352.95 244.233 li
350.7 242.567 li
348.367 240.9 li
345.95 239.233 li
343.617 237.65 li
341.2 236.067 li
338.784 234.567 li
336.284 233.15 li
333.867 231.65 li
331.367 230.233 li
328.867 228.9 li
326.367 227.483 li
323.784 226.15 li
321.284 224.817 li
318.7 223.567 li
316.2 222.233 li
313.617 220.983 li
311.034 219.817 li
308.534 218.567 li
300.784 215.067 li
298.2 213.983 li
295.617 212.817 li
290.45 210.65 li
287.867 209.65 li
285.284 208.567 li
280.117 206.567 li
277.534 205.65 li
274.95 204.65 li
272.45 203.733 li
267.284 201.9 li
262.284 200.067 li
259.7 199.233 li
249.7 195.9 li
247.284 195.067 li
244.784 194.317 li
242.367 193.483 li
230.284 189.733 li
227.95 189.067 li
225.617 188.317 li
216.284 185.65 li
209.534 183.65 li
207.284 183.067 li
205.034 182.4 li
192.034 178.9 li
187.867 177.733 li
185.784 177.233 li
183.784 176.65 li
181.784 176.15 li
179.784 175.567 li
173.784 174.067 li
164.2 171.567 li
162.367 171.067 li
160.45 170.65 li
158.617 170.15 li
156.867 169.733 li
155.034 169.233 li
151.534 168.4 li
149.784 167.9 li
148.034 167.483 li
146.367 167.067 li
144.617 166.65 li
139.617 165.4 li
138.034 164.983 li
136.367 164.567 li
134.784 164.233 li
131.617 163.4 li
130.117 163.067 li
128.617 162.65 li
127.117 162.317 li
125.617 161.9 li
124.117 161.567 li
122.7 161.233 li
121.2 160.9 li
119.784 160.483 li
118.367 160.15 li
117.034 159.817 li
115.617 159.483 li
108.95 157.817 li
103.95 156.483 li
102.784 156.233 li
101.534 155.9 li
100.367 155.65 li
99.2002 155.318 li
98.0342 155.068 li
96.8672 154.733 li
95.7842 154.483 li
94.6172 154.15 li
92.4502 153.65 li
91.3672 153.318 li
90.3672 153.068 li
89.2842 152.733 li
87.2842 152.233 li
86.2842 151.9 li
85.2842 151.65 li
84.2842 151.318 li
82.4502 150.818 li
81.5342 150.483 li
80.5342 150.233 li
79.7002 149.983 li
78.7842 149.65 li
77.8672 149.4 li
77.0342 149.15 li
76.1172 148.9 li
74.4502 148.4 li
73.6172 148.068 li
72.8672 147.818 li
72.0342 147.568 li
71.2842 147.318 li
70.4502 147.15 li
68.2002 146.4 li
67.5342 146.15 li
66.0342 145.65 li
65.3672 145.483 li
62.0342 144.233 li
61.4502 143.983 li
60.7842 143.818 li
60.2002 143.568 li
59.6172 143.4 li
58.4502 142.9 li
57.8672 142.733 li
57.2842 142.483 li
56.7002 142.318 li
56.2002 142.15 li
55.6172 141.9 li
55.1172 141.65 li
54.6172 141.483 li
53.6172 140.983 li
53.1172 140.818 li
52.1172 140.318 li
51.7002 140.15 li
51.2002 139.9 li
50.7842 139.733 li
50.2842 139.483 li
49.8672 139.233 li
49.4502 139.068 li
48.6172 138.568 li
48.2002 138.4 li
47.7842 138.15 li
47.3672 137.983 li
47.0342 137.733 li
46.6172 137.568 li
46.2842 137.318 li
45.8672 137.068 li
45.5342 136.9 li
45.2002 136.65 li
44.7842 136.4 li
43.7842 135.65 li
43.4502 135.483 li
43.2002 135.318 li
42.5342 134.818 li
42.2842 134.568 li
41.9502 134.4 li
41.7002 134.15 li
41.3672 133.9 li
41.1172 133.733 li
40.7842 133.483 li
40.5342 133.318 li
40.2842 132.983 li
40.0342 132.818 li
39.7842 132.568 li
39.5342 132.4 li
39.2842 132.15 li
38.7842 131.818 li
37.8672 130.9 li
37.7002 130.65 li
37.4502 130.318 li
37.2842 130.068 li
37.0342 129.733 li
36.8672 129.483 li
36.7002 129.15 li
36.4502 128.9 li
36.2842 128.65 li
36.1172 128.818 li
35.9502 129.15 li
35.7002 131.483 li
35.5342 139.233 li
35.2842 175.817 li
.0639048 0 .996094 0 cmyk
@
382.284 281.233 mo
382.2 280.817 li
381.7 277.733 li
380.117 271.9 li
377.534 264.983 li
374.284 258.233 li
370.534 252.15 li
366.617 246.9 li
362.367 242.4 li
358.117 238.4 li
353.867 234.817 li
349.617 231.567 li
345.284 228.483 li
341.034 225.65 li
336.784 222.983 li
332.617 220.483 li
328.45 218.067 li
324.367 215.817 li
320.284 213.65 li
316.284 211.567 li
312.284 209.567 li
308.367 207.65 li
304.534 205.733 li
296.867 202.233 li
293.117 200.567 li
289.367 198.983 li
285.7 197.4 li
282.117 195.9 li
278.45 194.4 li
274.95 193.067 li
271.367 191.65 li
267.867 190.317 li
264.45 188.983 li
261.034 187.733 li
257.7 186.567 li
254.367 185.317 li
247.867 182.983 li
244.617 181.9 li
241.45 180.817 li
238.367 179.733 li
235.2 178.65 li
232.2 177.65 li
229.117 176.65 li
226.2 175.65 li
223.2 174.733 li
220.284 173.733 li
217.45 172.9 li
211.784 171.067 li
209.034 170.233 li
206.367 169.4 li
203.617 168.567 li
200.95 167.733 li
198.367 166.983 li
195.784 166.15 li
193.2 165.4 li
188.2 163.9 li
183.367 162.4 li
180.95 161.733 li
178.617 161.067 li
176.284 160.317 li
169.534 158.317 li
165.2 156.983 li
163.034 156.4 li
160.95 155.733 li
156.784 154.568 li
154.784 153.9 li
152.7 153.318 li
150.784 152.818 li
148.784 152.233 li
146.867 151.65 li
144.95 151.15 li
143.117 150.568 li
141.2 150.068 li
139.367 149.568 li
137.617 148.983 li
135.784 148.483 li
134.034 147.983 li
132.284 147.568 li
128.95 146.568 li
127.284 146.15 li
125.617 145.65 li
124.034 145.15 li
120.867 144.318 li
119.284 143.818 li
114.784 142.568 li
113.367 142.15 li
111.867 141.733 li
110.534 141.318 li
107.7 140.483 li
105.034 139.65 li
103.7 139.318 li
101.2 138.483 li
98.7002 137.818 li
97.4502 137.4 li
92.7842 136.068 li
88.4502 134.733 li
87.3672 134.483 li
86.3672 134.15 li
85.2842 133.818 li
84.2842 133.568 li
83.3672 133.233 li
82.3672 132.983 li
81.4502 132.65 li
80.4502 132.4 li
79.5342 132.15 li
78.6172 131.818 li
77.7842 131.568 li
76.8672 131.318 li
76.0342 131.068 li
75.2002 130.733 li
74.3672 130.568 li
73.5342 130.233 li
72.7002 130.068 li
71.9502 129.818 li
71.2002 129.483 li
68.2002 128.483 li
67.5342 128.233 li
66.7842 127.983 li
64.1172 126.983 li
63.5342 126.733 li
62.8672 126.483 li
62.2842 126.233 li
61.7002 126.068 li
59.3672 125.068 li
58.7842 124.9 li
57.2842 124.15 li
56.7002 123.9 li
56.2002 123.65 li
55.7842 123.483 li
54.7842 122.983 li
54.3672 122.818 li
53.8672 122.568 li
53.4502 122.318 li
53.0342 122.15 li
52.2002 121.65 li
51.7842 121.483 li
51.3672 121.233 li
50.9502 121.068 li
50.5342 120.818 li
50.2002 120.65 li
49.7842 120.4 li
49.4502 120.233 li
49.1172 119.983 li
48.7002 119.818 li
48.0342 119.483 li
47.7002 119.233 li
47.0342 118.9 li
46.7842 118.733 li
46.4502 118.483 li
46.1172 118.318 li
45.8672 118.15 li
45.5342 117.9 li
45.2842 117.733 li
44.9502 117.568 li
44.7002 117.318 li
44.2002 116.983 li
43.8672 116.733 li
43.1172 116.233 li
42.9502 115.983 li
42.2002 115.483 li
42.0342 115.233 li
41.5342 114.9 li
41.3672 114.65 li
41.2002 114.483 li
40.9502 114.318 li
40.2002 113.568 li
40.0342 113.318 li
39.7002 112.983 li
39.5342 112.733 li
39.3672 112.568 li
39.2002 112.318 li
39.0342 112.15 li
38.8672 111.9 li
38.7842 111.733 li
38.6172 111.483 li
38.4502 111.318 li
38.2842 111.068 li
38.2002 110.818 li
38.0342 110.65 li
37.9502 110.483 li
37.6172 109.983 li
37.5342 109.733 li
37.3672 109.568 li
37.2842 109.4 li
37.2002 109.15 li
37.0342 108.983 li
36.9502 108.733 li
36.8672 108.568 li
36.7002 108.4 li
36.6172 108.15 li
36.5342 107.818 li
36.4502 107.65 li
36.3672 107.4 li
36.2842 107.233 li
36.1172 106.983 li
35.9502 106.65 li
35.8672 106.4 li
35.7842 106.318 li
35.7002 106.15 li
35.6172 105.9 li
35.6172 105.733 li
35.4502 105.233 li
35.3672 105.15 li
35.2842 105.9 li
35.2002 111.483 li
.265019 .809232 0 0 cmyk
@
381.867 279.9 mo
381.784 278.817 li
381.617 277.733 li
381.534 276.733 li
381.45 275.817 li
381.367 274.983 li
381.2 273.15 li
381.117 272.15 li
381.034 271.233 li
380.95 270.15 li
380.867 269.15 li
380.7 268.15 li
380.617 267.15 li
380.45 266.067 li
380.367 264.983 li
380.2 263.983 li
379.7 260.733 li
379.45 259.65 li
379.284 258.567 li
378.784 256.4 li
378.45 255.233 li
378.2 254.15 li
377.534 251.983 li
377.117 250.9 li
376.784 249.817 li
376.367 248.65 li
375.95 247.567 li
375.45 246.483 li
374.95 245.317 li
373.95 243.15 li
373.367 241.983 li
371.617 238.733 li
370.95 237.567 li
370.2 236.483 li
369.534 235.4 li
368.784 234.233 li
368.034 233.15 li
367.2 232.067 li
366.367 230.9 li
365.534 229.817 li
364.617 228.733 li
363.7 227.567 li
361.867 225.4 li
360.867 224.233 li
359.784 223.15 li
358.784 221.983 li
357.7 220.9 li
356.534 219.817 li
355.367 218.65 li
354.2 217.567 li
351.7 215.4 li
350.367 214.233 li
347.7 212.067 li
342.034 207.733 li
340.534 206.65 li
338.95 205.567 li
337.45 204.483 li
334.284 202.317 li
332.617 201.233 li
330.95 200.233 li
327.617 198.067 li
325.867 196.983 li
324.117 195.983 li
320.45 193.817 li
318.617 192.817 li
316.784 191.733 li
314.95 190.733 li
313.034 189.733 li
311.117 188.65 li
309.117 187.65 li
307.2 186.567 li
301.2 183.567 li
299.2 182.483 li
288.784 177.483 li
286.617 176.483 li
284.534 175.483 li
282.367 174.567 li
275.867 171.567 li
273.7 170.65 li
271.45 169.65 li
269.284 168.733 li
267.117 167.733 li
264.867 166.817 li
262.7 165.9 li
258.2 164.067 li
256.034 163.15 li
249.284 160.4 li
247.034 159.567 li
244.784 158.65 li
242.534 157.817 li
240.367 156.983 li
238.117 156.067 li
235.95 155.233 li
233.7 154.4 li
231.534 153.568 li
229.284 152.733 li
224.95 151.068 li
222.7 150.233 li
220.534 149.4 li
218.367 148.65 li
216.2 147.818 li
214.117 146.983 li
211.95 146.233 li
209.867 145.483 li
207.784 144.65 li
205.617 143.9 li
203.534 143.15 li
201.45 142.318 li
199.45 141.568 li
197.367 140.818 li
195.367 140.068 li
193.367 139.483 li
191.367 138.818 li
189.367 138.068 li
187.367 137.4 li
185.367 136.65 li
183.45 136.068 li
181.534 135.318 li
175.784 133.318 li
173.95 132.733 li
172.117 132.068 li
170.284 131.483 li
168.45 130.818 li
166.617 130.233 li
164.867 129.733 li
161.367 128.568 li
159.617 128.068 li
157.867 127.65 li
154.534 126.65 li
152.867 126.068 li
149.534 125.068 li
146.367 124.068 li
144.784 123.65 li
143.2 123.4 li
141.7 122.9 li
140.117 122.568 li
138.617 122.068 li
137.117 121.733 li
135.617 121.483 li
132.784 120.483 li
131.367 120.15 li
129.95 119.9 li
128.534 119.568 li
127.2 119.318 li
125.867 119.4 li
124.534 119.068 li
123.2 119.068 li
121.95 119.15 li
120.617 118.983 li
119.367 118.818 li
118.117 118.568 li
116.95 118.4 li
115.7 118.483 li
114.534 118.65 li
113.367 118.483 li
112.2 118.65 li
111.034 118.65 li
109.95 118.733 li
108.784 118.4 li
107.7 118.733 li
106.617 118.9 li
105.534 118.9 li
104.45 118.733 li
103.367 118.9 li
102.367 119.233 li
101.367 119.233 li
99.3672 119.9 li
97.3672 120.9 li
96.4502 120.733 li
95.4502 120.983 li
94.5342 120.9 li
93.6172 121.068 li
91.7842 121.733 li
90.9502 121.65 li
90.0342 122.15 li
89.2002 122.568 li
88.2842 123.318 li
87.4502 123.818 li
86.6172 123.983 li
85.7842 124.65 li
85.0342 125.068 li
84.2002 125.733 li
83.4502 126.318 li
82.6172 127.068 li
81.8672 127.65 li
81.1172 128.4 li
80.3672 129.4 li
79.6172 129.983 li
78.8672 130.318 li
78.1172 130.733 li
77.3672 131.65 li
76.7002 132.4 li
75.9502 133.068 li
75.2842 134.068 li
74.5342 134.818 li
73.8672 135.9 li
73.1172 136.483 li
72.4502 137.15 li
71.7842 138.4 li
71.0342 139.9 li
70.3672 140.65 li
69.7002 141.068 li
68.9502 142.15 li
68.2842 143.068 li
67.5342 144.4 li
66.7842 145.65 li
66.0342 146.4 li
65.2842 146.983 li
64.4502 148.068 li
63.6172 149.568 li
62.6172 150.483 li
61.4502 151.568 li
60.0342 152.568 li
58.1172 153.65 li
55.3672 154.818 li
51.4502 157.067 li
44.6172 159.817 li
.520012 0 .126131 0 cmyk
@
382.2 281.233 mo
382.2 280.817 li
382.117 280.483 li
382.034 279.9 li
381.95 279.067 li
381.7 278.067 li
381.45 276.817 li
381.117 275.317 li
380.7 273.65 li
380.284 271.9 li
379.784 269.983 li
378.45 265.983 li
377.7 263.9 li
376.034 259.733 li
375.117 257.567 li
374.117 255.483 li
371.95 251.483 li
370.784 249.483 li
367.034 243.733 li
365.617 241.9 li
364.2 240.15 li
362.784 238.317 li
361.2 236.567 li
359.7 234.9 li
358.117 233.233 li
354.784 230.067 li
353.034 228.483 li
351.367 226.9 li
349.534 225.4 li
347.784 223.9 li
345.95 222.4 li
344.034 220.983 li
342.2 219.567 li
340.2 218.15 li
338.284 216.817 li
330.284 211.483 li
328.2 210.233 li
326.2 208.983 li
324.117 207.733 li
321.95 206.483 li
319.867 205.317 li
317.7 204.067 li
315.534 202.9 li
313.45 201.733 li
311.284 200.65 li
309.117 199.483 li
306.95 198.4 li
304.7 197.317 li
302.534 196.233 li
300.284 195.15 li
298.117 194.15 li
295.867 193.067 li
291.367 191.067 li
289.2 190.067 li
286.95 189.067 li
284.7 188.15 li
282.45 187.15 li
271.2 182.567 li
268.867 181.733 li
266.617 180.817 li
257.617 177.483 li
255.45 176.65 li
253.2 175.817 li
250.95 175.067 li
248.7 174.233 li
246.534 173.483 li
244.284 172.733 li
242.117 171.9 li
239.867 171.15 li
237.7 170.4 li
235.45 169.733 li
233.284 168.983 li
231.117 168.317 li
228.867 167.567 li
226.7 166.9 li
224.534 166.15 li
215.867 163.483 li
213.784 162.817 li
211.617 162.233 li
209.534 161.567 li
207.367 160.983 li
205.284 160.317 li
196.95 157.983 li
194.95 157.4 li
192.867 156.817 li
186.867 155.068 li
184.95 154.568 li
182.95 153.983 li
181.034 153.483 li
179.034 152.9 li
177.117 152.4 li
175.2 151.818 li
173.284 151.318 li
171.45 150.818 li
169.534 150.318 li
167.7 149.818 li
165.784 149.318 li
160.284 147.818 li
158.534 147.4 li
156.7 146.9 li
154.95 146.483 li
153.117 146.068 li
151.367 145.568 li
149.7 145.15 li
146.2 144.318 li
144.534 143.818 li
137.867 142.15 li
136.2 141.818 li
134.617 141.4 li
132.95 140.983 li
131.367 140.568 li
129.867 140.233 li
126.7 139.4 li
125.2 139.068 li
122.2 138.233 li
120.7 137.9 li
119.2 137.483 li
117.784 137.15 li
116.367 136.733 li
113.534 136.068 li
112.117 135.65 li
110.7 135.318 li
109.367 134.983 li
107.95 134.65 li
103.95 133.65 li
102.617 133.233 li
101.367 132.9 li
100.034 132.568 li
95.0342 131.233 li
92.7002 130.568 li
91.4502 130.233 li
90.2842 129.9 li
89.2002 129.65 li
86.8672 128.983 li
85.7842 128.65 li
84.7002 128.4 li
82.5342 127.733 li
81.5342 127.483 li
80.4502 127.15 li
79.4502 126.818 li
78.4502 126.568 li
77.4502 126.233 li
76.4502 125.983 li
75.4502 125.65 li
74.5342 125.4 li
73.5342 125.068 li
71.7002 124.568 li
70.7842 124.233 li
69.9502 123.983 li
69.0342 123.733 li
68.2002 123.4 li
67.2842 123.15 li
65.6172 122.65 li
64.8672 122.4 li
63.2002 121.9 li
60.9502 121.15 li
60.2002 120.818 li
58.7002 120.318 li
58.0342 120.068 li
57.2842 119.818 li
56.6172 119.568 li
55.9502 119.233 li
53.2842 118.233 li
52.7002 117.983 li
52.0342 117.733 li
51.4502 117.568 li
48.5342 116.318 li
48.0342 116.15 li
47.4502 115.9 li
46.9502 115.65 li
46.3672 115.483 li
44.8672 114.733 li
44.4502 114.483 li
43.9502 114.318 li
43.4502 114.068 li
43.0342 113.9 li
42.6172 113.65 li
42.1172 113.4 li
41.2842 112.9 li
40.8672 112.733 li
40.4502 112.483 li
40.1172 112.233 li
39.2842 111.733 li
38.9502 111.4 li
38.5342 111.233 li
38.2002 110.983 li
37.8672 110.818 li
37.4502 110.65 li
37.1172 110.568 li
36.7842 110.483 li
36.4502 110.733 li
36.1172 112.15 li
35.8672 117.15 li
35.5342 131.818 li
35.2842 162.817 li
.627314 0 1 0 cmyk
@
382.284 281.233 mo
376.117 279.9 li
371.617 277.233 li
366.617 274.567 li
356.284 268.4 li
351.284 265.233 li
346.45 262.233 li
341.7 259.317 li
337.2 256.317 li
332.867 253.567 li
328.7 250.65 li
324.617 247.733 li
320.7 245.067 li
316.95 242.4 li
313.367 239.9 li
309.784 237.483 li
306.284 235.15 li
302.95 232.817 li
299.617 230.567 li
296.45 228.233 li
293.284 225.983 li
290.2 223.9 li
287.2 221.817 li
284.284 219.817 li
281.45 217.817 li
278.534 215.9 li
275.784 214.067 li
273.117 212.317 li
267.784 208.65 li
262.617 205.317 li
260.117 203.733 li
257.617 202.233 li
252.784 199.233 li
250.45 197.733 li
248.117 196.317 li
245.784 194.817 li
243.534 193.483 li
241.367 192.067 li
239.117 190.733 li
236.95 189.483 li
234.867 188.233 li
232.7 187.067 li
230.617 185.9 li
228.617 184.817 li
224.45 182.65 li
222.45 181.65 li
220.367 180.65 li
218.367 179.65 li
214.534 177.65 li
210.7 175.817 li
208.784 174.983 li
206.95 174.067 li
205.034 173.15 li
203.2 172.317 li
201.45 171.4 li
199.617 170.65 li
197.867 169.817 li
196.117 169.067 li
194.367 168.4 li
191.034 166.9 li
189.367 166.317 li
187.7 165.567 li
186.034 164.9 li
181.284 162.9 li
178.117 161.733 li
176.617 161.233 li
175.117 160.65 li
172.117 159.65 li
170.7 159.15 li
169.2 158.733 li
167.784 158.233 li
166.367 157.817 li
164.95 157.233 li
163.534 156.817 li
162.2 156.317 li
160.784 155.9 li
159.45 155.483 li
158.034 155.068 li
156.7 154.65 li
155.367 154.318 li
152.7 153.483 li
151.45 153.15 li
150.117 152.733 li
148.784 152.483 li
143.784 151.15 li
142.617 150.818 li
141.367 150.483 li
140.2 150.15 li
139.034 149.9 li
137.867 149.568 li
136.784 149.233 li
135.617 148.983 li
134.534 148.65 li
133.367 148.318 li
132.284 148.068 li
131.2 147.65 li
130.117 147.4 li
129.034 147.068 li
127.95 146.818 li
126.95 146.483 li
125.867 146.233 li
120.867 144.568 li
119.867 144.318 li
118.95 144.068 li
116.95 143.568 li
115.117 143.068 li
114.2 142.9 li
111.45 142.15 li
110.534 141.983 li
109.617 141.733 li
108.784 141.483 li
107.867 141.318 li
106.2 140.818 li
105.284 140.568 li
104.45 140.318 li
103.617 140.15 li
101.117 139.4 li
100.284 139.233 li
99.5342 138.983 li
98.7002 138.818 li
97.9502 138.568 li
97.1172 138.4 li
96.3672 138.233 li
95.5342 138.068 li
94.7842 137.818 li
91.7842 137.15 li
91.0342 137.068 li
90.2842 136.9 li
89.6172 136.818 li
88.8672 136.65 li
88.2002 136.568 li
87.5342 136.483 li
86.7842 136.318 li
85.4502 135.983 li
84.7002 135.9 li
84.0342 135.818 li
83.3672 135.65 li
82.7002 135.568 li
81.3672 135.4 li
80.0342 135.068 li
79.4502 134.983 li
78.7842 134.818 li
78.1172 134.733 li
77.5342 134.568 li
76.8672 134.4 li
76.2842 134.233 li
75.6172 134.15 li
75.0342 133.983 li
74.4502 133.9 li
73.8672 133.733 li
73.2002 133.568 li
72.6172 133.483 li
70.8672 133.233 li
70.2842 133.15 li
69.1172 132.983 li
68.5342 132.818 li
67.9502 132.733 li
67.3672 132.65 li
66.7842 132.568 li
66.2842 132.4 li
65.7002 132.233 li
65.1172 132.15 li
64.5342 132.068 li
64.0342 131.983 li
63.4502 131.9 li
62.9502 131.818 li
62.3672 131.733 li
61.8672 131.65 li
61.2842 131.568 li
60.7842 131.483 li
60.2002 131.4 li
59.7002 131.318 li
59.1172 131.233 li
58.6172 131.068 li
58.1172 130.983 li
57.5342 130.9 li
57.0342 130.733 li
56.5342 130.733 li
55.9502 130.65 li
54.9502 130.483 li
54.4502 130.483 li
53.8672 130.4 li
53.3672 130.4 li
52.8672 130.318 li
52.3672 130.15 li
51.7842 130.15 li
51.2842 130.068 li
50.2842 129.9 li
49.7842 129.818 li
49.2842 129.733 li
47.2842 129.733 li
46.7842 129.568 li
46.2842 129.65 li
45.7842 129.568 li
45.2842 129.4 li
44.7842 129.4 li
44.2842 129.318 li
43.7842 129.318 li
43.2842 129.233 li
42.8672 129.15 li
42.3672 129.068 li
41.8672 129.15 li
41.3672 129.068 li
40.8672 128.983 li
40.3672 128.983 li
39.8672 128.818 li
39.3672 128.983 li
38.8672 129.233 li
38.3672 129.4 li
37.8672 129.983 li
37.4512 131.15 li
37.0342 132.983 li
36.5342 136.568 li
36.2012 140.733 li
35.8672 151.318 li
.895628 .7673 0 0 cmyk
@
382.284 281.233 mo
382.2 281.15 li
382.2 279.983 li
382.117 279.4 li
382.117 278.817 li
382.034 278.15 li
381.95 277.4 li
381.784 276.567 li
381.7 275.65 li
381.534 274.733 li
381.367 273.733 li
381.117 272.65 li
380.617 270.317 li
380.284 269.067 li
379.95 267.733 li
379.117 264.9 li
378.117 261.9 li
377.534 260.317 li
376.95 258.65 li
376.2 256.983 li
375.534 255.233 li
374.7 253.483 li
373.867 251.65 li
372.95 249.817 li
370.95 245.983 li
369.867 243.983 li
367.534 239.983 li
366.284 237.983 li
364.95 235.9 li
363.534 233.817 li
362.117 231.65 li
360.617 229.483 li
359.034 227.4 li
357.45 225.233 li
355.784 222.983 li
354.034 220.817 li
352.284 218.567 li
350.45 216.4 li
346.617 211.9 li
344.617 209.65 li
342.534 207.4 li
340.45 205.233 li
336.117 200.733 li
333.867 198.483 li
331.534 196.317 li
329.2 194.067 li
324.367 189.733 li
319.367 185.4 li
314.2 181.233 li
308.867 177.067 li
306.2 175.067 li
300.7 171.067 li
292.2 165.317 li
283.45 159.817 li
277.45 156.317 li
274.45 154.65 li
271.367 152.983 li
268.284 151.4 li
265.2 149.733 li
262.117 148.233 li
259.034 146.65 li
255.95 145.15 li
252.784 143.733 li
246.617 140.9 li
243.45 139.568 li
240.367 138.233 li
237.2 136.9 li
234.117 135.65 li
231.034 134.483 li
227.867 133.318 li
224.784 132.15 li
221.617 130.983 li
215.45 128.818 li
209.284 126.818 li
203.117 124.983 li
200.117 124.068 li
197.034 123.233 li
194.034 122.4 li
185.034 120.15 li
182.117 119.483 li
179.2 118.733 li
176.284 118.068 li
173.367 117.483 li
170.534 116.818 li
167.7 116.318 li
164.867 115.733 li
162.034 115.233 li
159.284 114.65 li
156.617 114.233 li
153.867 113.733 li
151.2 113.318 li
148.617 112.818 li
143.45 111.983 li
140.95 111.65 li
138.45 111.233 li
135.95 110.9 li
133.534 110.568 li
131.2 110.318 li
128.867 109.983 li
126.534 109.733 li
124.284 109.4 li
122.034 109.15 li
119.867 108.983 li
117.7 108.733 li
115.617 108.568 li
113.534 108.318 li
111.45 108.15 li
109.45 107.983 li
107.45 107.9 li
105.534 107.733 li
103.617 107.65 li
101.784 107.483 li
99.9502 107.4 li
98.1172 107.318 li
96.3672 107.233 li
94.6172 107.233 li
92.9502 107.15 li
79.2002 107.15 li
77.8672 107.233 li
72.8672 107.233 li
71.7002 107.318 li
68.3672 107.318 li
67.2842 107.4 li
66.2842 107.4 li
65.2842 107.483 li
63.3672 107.483 li
62.4502 107.568 li
61.5342 107.568 li
60.7002 107.65 li
59.8672 107.733 li
59.0342 107.733 li
58.2842 107.818 li
57.4502 107.818 li
56.7002 107.9 li
56.0342 107.983 li
55.2842 107.983 li
53.9502 108.15 li
53.2842 108.15 li
52.7002 108.233 li
52.1172 108.233 li
51.5342 108.318 li
50.9502 108.4 li
50.3672 108.4 li
49.8672 108.483 li
49.3672 108.483 li
48.8672 108.568 li
48.3672 108.568 li
47.8672 108.65 li
46.9502 108.65 li
46.5342 108.733 li
44.1172 108.733 li
43.7842 108.818 li
42.3672 108.818 li
42.0342 108.9 li
41.3672 108.9 li
40.9502 108.983 li
40.6172 109.068 li
40.2842 109.233 li
39.9502 109.318 li
39.7002 109.4 li
39.3672 109.568 li
39.1172 109.65 li
38.8672 109.818 li
38.6172 109.9 li
38.3672 110.068 li
38.2002 110.15 li
37.9502 110.233 li
37.7842 110.318 li
37.6172 110.318 li
37.4502 110.4 li
37.2842 110.483 li
37.1172 110.568 li
36.9502 110.733 li
36.8672 110.9 li
36.7002 111.068 li
36.6172 111.068 li
36.3672 111.318 li
36.0342 111.983 li
35.9502 112.233 li
35.8672 112.318 li
35.7842 112.483 li
35.7002 112.568 li
35.6172 112.818 li
35.6172 112.9 li
35.5342 112.983 li
35.5342 113.068 li
35.4502 113.15 li
35.3672 113.15 li
35.3672 113.318 li
35.2842 113.4 li
35.2842 113.568 li
35.2002 113.733 li
35.2002 114.483 li
35.1172 115.483 li
35.1172 175.733 li
0 .990631 1 .000396735 cmyk
@
382.284 281.233 mo
382.2 280.817 li
381.867 278.733 li
381.367 275.317 li
380.7 271.4 li
379.867 267.317 li
378.95 263.233 li
377.867 259.4 li
376.784 255.65 li
375.534 252.15 li
374.284 248.733 li
372.95 245.483 li
371.45 242.317 li
369.95 239.233 li
368.45 236.317 li
366.867 233.4 li
365.2 230.65 li
361.7 225.317 li
359.95 222.817 li
358.117 220.317 li
356.2 217.817 li
354.284 215.4 li
352.367 213.067 li
350.45 210.817 li
348.45 208.483 li
346.367 206.317 li
344.284 204.233 li
342.2 202.067 li
337.867 198.067 li
333.534 194.233 li
331.284 192.317 li
329.034 190.567 li
326.784 188.733 li
324.534 186.983 li
322.284 185.317 li
319.95 183.567 li
317.7 181.9 li
315.367 180.317 li
313.117 178.733 li
310.784 177.15 li
308.534 175.65 li
306.2 174.067 li
303.867 172.65 li
301.617 171.15 li
296.95 168.317 li
294.7 166.983 li
292.367 165.567 li
290.034 164.233 li
287.784 162.983 li
285.45 161.65 li
283.2 160.4 li
280.867 159.15 li
278.617 157.9 li
276.284 156.733 li
274.034 155.568 li
271.7 154.4 li
269.45 153.233 li
267.117 152.15 li
264.867 150.983 li
260.367 148.818 li
258.117 147.818 li
255.867 146.733 li
251.367 144.733 li
249.2 143.733 li
246.95 142.733 li
244.7 141.818 li
240.367 139.983 li
238.117 139.068 li
235.95 138.233 li
233.784 137.318 li
227.284 134.818 li
225.2 134.068 li
223.034 133.233 li
218.867 131.733 li
216.784 130.9 li
214.7 130.15 li
212.7 129.483 li
210.617 128.733 li
208.617 127.983 li
206.617 127.318 li
204.617 126.568 li
200.617 125.233 li
198.7 124.483 li
196.7 123.818 li
194.784 123.15 li
192.867 122.568 li
189.034 121.233 li
187.117 120.65 li
185.284 119.983 li
183.45 119.4 li
181.534 118.818 li
179.7 118.233 li
177.95 117.65 li
176.117 117.068 li
174.284 116.568 li
172.534 115.983 li
170.784 115.483 li
169.034 114.9 li
163.784 113.4 li
162.117 112.9 li
160.367 112.4 li
158.7 111.9 li
157.034 111.483 li
155.367 110.983 li
153.784 110.483 li
152.117 110.068 li
150.534 109.65 li
148.867 109.233 li
145.7 108.4 li
144.2 107.983 li
142.617 107.568 li
139.617 106.733 li
138.117 106.4 li
136.617 105.983 li
135.117 105.65 li
133.617 105.233 li
130.784 104.568 li
129.367 104.15 li
123.7 102.818 li
122.367 102.483 li
121.034 102.233 li
119.7 101.9 li
118.284 101.568 li
117.034 101.318 li
115.7 101.068 li
114.367 100.733 li
113.117 100.483 li
111.867 100.15 li
109.367 99.6505 li
108.117 99.3175 li
106.867 99.0675 li
105.7 98.8175 li
104.45 98.5675 li
99.7842 97.5675 li
98.7002 97.3175 li
97.5342 97.0675 li
93.2002 96.0675 li
92.1172 95.9005 li
91.1172 95.6505 li
90.0342 95.4005 li
89.0342 95.2335 li
88.0342 94.9835 li
86.9502 94.8175 li
86.0342 94.5675 li
85.0342 94.4005 li
84.0342 94.1505 li
83.1172 93.9835 li
82.1172 93.8175 li
81.2002 93.6505 li
80.2842 93.4005 li
79.3672 93.2335 li
75.7002 92.5675 li
74.0342 92.2335 li
73.1172 92.0675 li
72.2842 91.9005 li
70.6172 91.5675 li
69.8672 91.4005 li
69.0342 91.2335 li
68.2842 91.1505 li
67.4502 90.9835 li
65.9502 90.6505 li
65.2002 90.5675 li
63.7002 90.2335 li
63.0342 90.0675 li
62.2842 89.9005 li
61.6172 89.7335 li
60.8672 89.5675 li
60.2002 89.3175 li
59.5342 89.1505 li
58.8672 89.0675 li
56.8672 88.5675 li
56.2842 88.4005 li
55.6172 88.2335 li
54.4502 87.9005 li
53.7842 87.7335 li
52.6172 87.4005 li
52.1172 87.3175 li
50.9502 86.9835 li
50.4502 86.8175 li
49.8672 86.5675 li
49.3672 86.4835 li
48.7842 86.3175 li
47.7842 85.9835 li
47.2842 85.8175 li
46.7842 85.6505 li
45.7842 85.3175 li
45.3672 85.1505 li
44.8672 84.9835 li
44.4502 84.8175 li
43.9502 84.7335 li
43.5342 84.5675 li
43.1172 84.4835 li
42.2842 84.1505 li
41.8672 84.0675 li
41.4502 83.9005 li
41.0342 83.8175 li
40.6172 83.6505 li
40.2842 83.4835 li
39.8672 83.3175 li
39.5342 83.2335 li
39.2002 83.1505 li
38.7842 82.9835 li
38.4502 82.8175 li
37.7842 82.6505 li
37.4502 82.4835 li
37.1172 82.4835 li
36.8672 82.3175 li
36.5342 82.2335 li
36.2842 82.1505 li
35.9502 81.9835 li
35.7002 81.9005 li
35.4502 81.9005 li
35.2002 94.0665 li
.653162 .154971 0 0 cmyk
@
382.284 281.233 mo
382.2 280.817 li
382.2 278.65 li
382.117 275.65 li
382.034 272.483 li
381.784 269.15 li
381.534 265.733 li
381.2 262.317 li
380.784 258.9 li
380.367 255.567 li
379.2 249.067 li
377.867 242.733 li
377.117 239.733 li
376.284 236.733 li
375.367 233.733 li
373.534 228.067 li
372.45 225.317 li
371.45 222.567 li
370.284 219.9 li
367.95 214.733 li
366.7 212.233 li
365.367 209.733 li
364.034 207.317 li
362.617 204.9 li
361.2 202.65 li
359.7 200.317 li
358.2 198.067 li
355.034 193.733 li
353.367 191.567 li
351.784 189.483 li
350.034 187.483 li
348.367 185.4 li
346.617 183.4 li
344.867 181.483 li
339.367 175.733 li
337.534 173.9 li
333.7 170.4 li
331.7 168.65 li
325.7 163.65 li
323.7 162.067 li
319.534 158.9 li
313.284 154.4 li
311.117 152.983 li
306.95 150.15 li
304.784 148.818 li
302.617 147.4 li
300.534 146.068 li
296.2 143.4 li
291.867 140.9 li
289.784 139.65 li
287.534 138.4 li
285.45 137.233 li
283.2 136.068 li
276.7 132.568 li
274.45 131.483 li
270.117 129.318 li
267.867 128.233 li
265.7 127.233 li
263.45 126.15 li
261.284 125.15 li
259.034 124.15 li
256.867 123.15 li
254.617 122.233 li
252.45 121.233 li
250.284 120.318 li
248.034 119.4 li
243.7 117.568 li
241.45 116.65 li
237.117 114.983 li
234.95 114.068 li
230.617 112.4 li
228.45 111.65 li
226.284 110.818 li
224.117 110.068 li
222.034 109.233 li
219.867 108.483 li
217.784 107.733 li
215.617 107.068 li
211.45 105.568 li
209.284 104.9 li
207.2 104.15 li
205.2 103.483 li
201.034 102.15 li
199.034 101.483 li
196.95 100.818 li
194.95 100.15 li
192.95 99.5675 li
190.867 98.9005 li
188.867 98.3175 li
186.95 97.7335 li
184.95 97.0675 li
182.95 96.4835 li
181.034 95.9005 li
179.117 95.4005 li
175.284 94.2335 li
171.45 93.2335 li
169.534 92.6505 li
165.867 91.6505 li
163.95 91.1505 li
162.2 90.7335 li
158.534 89.7335 li
156.784 89.3175 li
155.034 88.8175 li
153.284 88.4005 li
151.534 87.9005 li
148.034 87.0675 li
146.367 86.5675 li
138.034 84.4835 li
136.367 84.1505 li
133.2 83.3175 li
131.617 82.9835 li
130.034 82.5675 li
128.45 82.2335 li
126.95 81.8175 li
125.367 81.4835 li
123.867 81.0675 li
119.367 80.0675 li
117.95 79.7335 li
116.534 79.3175 li
112.284 78.3175 li
110.95 78.0675 li
109.534 77.7335 li
108.2 77.4005 li
106.867 77.1505 li
105.534 76.8175 li
104.284 76.5675 li
102.95 76.2335 li
101.7 75.9835 li
100.367 75.7335 li
99.1172 75.4005 li
96.6172 74.9005 li
95.4502 74.6505 li
94.2002 74.4005 li
90.7002 73.6505 li
89.5342 73.4835 li
88.3672 73.2335 li
87.2842 72.9835 li
86.1172 72.8175 li
83.9502 72.3175 li
82.8672 72.1505 li
81.8672 71.9005 li
80.7842 71.7335 li
79.7842 71.5675 li
78.7002 71.3175 li
77.7002 71.1505 li
76.7842 70.9005 li
75.7842 70.7335 li
74.7842 70.5675 li
73.8672 70.4005 li
72.8672 70.2335 li
71.9502 69.9835 li
70.1172 69.6505 li
69.2842 69.4835 li
68.3672 69.3175 li
67.5342 69.1505 li
66.6172 68.9835 li
64.1172 68.4835 li
63.3672 68.3175 li
62.5342 68.1505 li
61.7842 67.9835 li
60.9502 67.8175 li
60.2002 67.6505 li
59.4502 67.5675 li
58.7002 67.4005 li
58.0342 67.2335 li
57.2842 67.0675 li
56.5342 66.9835 li
55.8672 66.8175 li
55.2002 66.6505 li
54.5342 66.5675 li
53.8672 66.4005 li
53.2002 66.3175 li
52.5342 66.2335 li
51.9502 66.1505 li
51.2842 66.0675 li
50.1172 65.9005 li
49.4502 65.8174 li
48.8672 65.7335 li
48.3672 65.6505 li
47.7842 65.5674 li
47.2002 65.4835 li
46.7002 65.4835 li
46.1172 65.4005 li
45.6172 65.3174 li
45.1172 65.3174 li
44.1172 65.1505 li
43.6172 65.1505 li
43.1172 65.0674 li
42.7002 64.9835 li
42.2002 64.9835 li
41.7842 64.9005 li
41.2842 64.9005 li
40.8672 64.8174 li
37.1172 64.8174 li
36.7842 64.7335 li
36.1172 64.7335 li
35.7842 64.8174 li
35.5342 64.9005 li
35.2842 70.1505 li
0 0 0 1 cmyk
@
grestore
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if

1 0 1 <> FXYAAA+Helvetica AddT42Char 
1 3864 20 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>FXYAAA+Helvetica AddT42Char 
1 4408 22 <000200b40000057805bd0009002700944012070d49014805590158056905
641478050816bb01300119001b011c40422321202660127112751403121e
1f141c1503211e161404261224251e0009091b071e0b02261c1b08202515
1f251603310f691b1a29082625270a192829d6219566182b2b4ef43c4dfd
3c4e10f64df4edd4edd4ed003f3c3c3ffd12392f3cfd3c39111739011112
39391239395d1112392b3130015d01323635342726232111032132171615
1406071e011f011617161715232e012f012627262321112303478ca3723d
66fe1ac702a8a86dcf6d6256570507030b122ef40a0c040c0764397afe3b
c7031c70929d391efe0a02a1315efd84a833237280c55429461421133c56
f590311bfd8a>FXYAAA+Helvetica AddT42Char 
1 5592 26 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>FXYAAA+Helvetica AddT42Char 
1 5996 27 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>FXYAAA+Helvetica AddT42Char 
1 6256 28 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>FXYAAA+Helvetica AddT42Char 
1 6660 29 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>FXYAAA+Helvetica AddT42Char 
1 6752 30 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>FXYAAA+Helvetica AddT42Char 
1 6820 31 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>FXYAAA+Helvetica AddT42Char 
1 7004 32 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>FXYAAA+Helvetica AddT42Char 
1 7244 33 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>FXYAAA+Helvetica AddT42Char 
1 7384 34 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/space 1 def
/P 20 def
/R 22 def
/a 26 def
/c 27 def
/e 28 def
/i 29 def
/l 30 def
/n 31 def
/o 32 def
/r 33 def
/s 34 def
end
FXYAAA+Helvetica /Encoding get
dup 32 /space put
dup 80 /P put
dup 82 /R put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 22{/.notdef}rp 
/P /.notdef /R 14{/.notdef}rp /a /.notdef /c /.notdef 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
194.7 308.067 mo
(Recall)
[7.22 5.56 5 5.56 2.22 0 ]xsh
YJZMBS+Helvetica*1 [0 -10 -10 0 0 0 ]msf
11.5339 167.734 mo
(Precision)
[-6.67007 -3.32993 -5.56 -5 -2.22 -5 -2.22 -5.56 0 ]ysh
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
33.7005 287.567 mo
( )sh
380.951 13.5671 mo
( )sh
40.0342 178.233 mo
117.451 178.233 li
117.451 279.066 li
40.0342 279.066 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
40.0342 279.067 mo
40.0342 178.233 li
117.45 178.233 li
117.45 279.067 li
40.0342 279.067 li
@
40.0342 279.067 mo
117.45 279.067 li
40.0342 178.233 mo
117.45 178.233 li
40.0342 279.067 mo
40.0342 178.233 li
117.45 279.067 mo
117.45 178.233 li
40.0342 279.067 mo
117.45 279.067 li
40.0342 279.067 mo
40.0342 178.233 li
40.0342 279.067 mo
117.45 279.067 li
40.0342 178.233 mo
117.45 178.233 li
40.0342 279.067 mo
40.0342 178.233 li
117.45 279.067 mo
117.45 178.233 li
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 4684 23 <00020060ffd504f605e5002f003000fe405e290f27232626360e35214726
62267a0e7724096b08180e172502590e680eaa22030a0e3a2224220a0304
1c1886142f2f2b1c3a1403043a2b0930020a0e081124221f283030111825
17490825281a321f25114900252f193132a0216a89182b2b4ef44dedf4ed
4e10f64dedf4ed12392f1211393912113939003f3fed3fed12392f10ed11
1217392efd335d7131304379404d282e111f0008022602262d2506251a26
032c002b002d2e032c002b00052a082b011d131f2b001b15182b01191801
2d042b0009270b2b01250b012e042b000729042b001e121c2b0119161c2b
01002b2b2b2b10102b2b01103c2b2b2b2b103c2b2b2b2b2b2b818181005d
0116171633323736353427262f0126272635342433320415232627262322
06151417161f01161716151404232027263701011e073463fa705cb24b4c
a2c7c3518c0112fbe70143bb0f315bdab09a5a3bd0ce95518cfe9debfeee
9b9b03024d01da7d4e92203ea0783332252d2c355cb7c6fedff5763f7394
626c3220302f223b67c4f4d28c8bee040b00>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/S 23 def
end
FXYAAA+Helvetica /Encoding get
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 22{/.notdef}rp 
/P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c 
/.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
78.3672 189.4 mo
(SR)
[6.67007 0 ]xsh
2 lw
45.8672 185.817 mo
75.3672 185.817 li
.0639048 0 .996094 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 2844 14 <000100af000004aa05bd000900394018071e040409031e0100020908066b
011a0b03082500190a0bb80157b32195dc182b2b4ef44dfd3c4e10f64de4
003f3f3ced12392ffd313013211521112115211123af03fbfccc02d1fd2f
c705bdb4fe42affd6400>FXYAAA+Helvetica AddT42Char 
1 4036 21 <00020050ff8b05e805e50015002700e4406b69036a1579038513961bc71b
064a1c591b5a1c64157515781cb719c81a083808181b021b191901151a1b
1a1a1a0001190100191e121a1a00191a191a1b18150206240001111e1500
02050d191a1b18042127213a0d03273a0105091e31111a29243109192829
d8216a66182b2b4ef44ded4e10f64ded003f33ed3fed1112173911123939
39011112393912173908872e2b087d10c50187102b3c2b3c87102bc42b3c
313018437940281f2606100b260f250725220c243200200e1e3201260624
3200230a2132011f102132012508273200002b2b2b012b2b2b2b2b2b8181
015d005d2507270e01232027261110371221201716111407060704363727
371736123510002322001110002105dc64e352bf71feaac2ab94be017401
85bb9223357efe576c28a164c05b41fef1ebeefeea010b01020479ad2d36
e0da0148012ad40110fac3fed08e83c87e1a11197e7b9568010276010301
3cfed1fec5fef7fec6000000>FXYAAA+Helvetica AddT42Char 
1 5092 24 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/F 14 def
/Q 21 def
/T 24 def
end
FXYAAA+Helvetica /Encoding get
dup 70 /F put
dup 81 /Q put
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 12{/.notdef}rp 
/F 9{/.notdef}rp /P /Q /R /S /T 12{/.notdef}rp 
/a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
78.3672 201.567 mo
(PQFT)
[6.67007 7.78 6.10992 0 ]xsh
45.8672 198.067 mo
75.3672 198.067 li
.265019 .809232 0 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 2648 13 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>FXYAAA+Helvetica AddT42Char 
1 3440 18 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/D 13 def
/N 18 def
end
FXYAAA+Helvetica /Encoding get
dup 68 /D put
dup 78 /N put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F 7{/.notdef}rp /N /.notdef /P /Q 
/R /S /T 12{/.notdef}rp /a /.notdef /c /.notdef 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
78.3672 213.817 mo
(PFDN)
[6.67007 6.10992 7.22 0 ]xsh
45.8672 210.233 mo
75.3672 210.233 li
.520012 0 .126131 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 2944 15 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>FXYAAA+Helvetica AddT42Char 
1 3392 17 <000100c90000019205bd00030017b8002b2bba00010000002e2b00b80000
2fb800022f303113331123c9c9c905bdfa43>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/G 15 def
/I 17 def
end
FXYAAA+Helvetica /Encoding get
dup 71 /G put
dup 73 /I put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /.notdef /I 4{/.notdef}rp /N 
/.notdef /P /Q /R /S /T 12{/.notdef}rp /a 
/.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o 2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
78.3672 226.067 mo
(SIG)
[6.67007 2.78 0 ]xsh
45.8672 222.483 mo
75.3672 222.483 li
.627314 0 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
78.3672 238.317 mo
(FT)
[6.10992 0 ]xsh
45.8672 234.733 mo
75.3672 234.733 li
.895628 .7673 0 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 5184 25 <000100250000077105bd000c0156409508090178077909780b8701860405
47014b02440348044d08420a8908870ac802c703c707c80b0c580b670768
0b890286038607890b9902960395079a0ba902a603a507aa0b0f0808070a
080b1908160a5707060b08040a023e284528052506060700250c0c0b0904
01030b020305060c050002080a0b0307080e17171a0705068640080304f4
0a0209f4800b0001860c190d8e5e182b194e10f4184dfd39391afd3939fd
39391afd3939194e456544e618003f173c3f173c12173901874d2eed872e
ed4b5279b4090a09080ab8019a400f120101020405030406070908090a08
b8019a400a12040403010102000c0b877d1008c5872e18052b087d10c587
0810c5872e18052b087d10c54b5179b301010002b8019ab6090a09040405
03b8019a400f090908040503040607010001020c0b870810c0870810c087
10057afd1808c4188710057afd7d08c4313001725d5d71005d7213090133
090133012309012301fd0115014cd8014c0115dafe7ed1feadfeabd1fe80
05bdfb5504abfb5504abfa4304c2fb3e05bd>FXYAAA+Helvetica AddT42Char 
1 7832 35 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>FXYAAA+Helvetica AddT42Char 
1 8172 37 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/W 25 def
/t 35 def
/v 37 def
end
FXYAAA+Helvetica /Encoding get
dup 87 /W put
dup 116 /t put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /.notdef /I 4{/.notdef}rp /N 
/.notdef /P /Q /R /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /.notdef /v 137{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
78.3672 250.567 mo
(Wavelet)
[9.44 5.56 5 5.56 2.22 5.56 0 ]xsh
45.8672 246.983 mo
75.3672 246.983 li
0 .990631 1 .000396735 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 3280 16 <000100a10000052f05bd000b003f402108091e0302020401020a07080407
2506051a0d010a250b00190c0c0da0217670182b2b104ef43c4dfd3c4e10
f63c4dfd3c003f3c3f3c392f3cfd3c3130133311211133112311211123a1
c902fcc9c9fd04c905bdfda1025ffa4302affd510000>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/H 16 def
end
FXYAAA+Helvetica /Encoding get
dup 72 /H put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /H /I 4{/.notdef}rp /N 
/.notdef /P /Q /R /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /.notdef /v 137{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
78.3672 262.817 mo
(HFT)
[7.22 6.10992 0 ]xsh
45.8672 259.15 mo
75.3672 259.15 li
.653162 .154971 0 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FXYAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FXYAAA+Helvetica gcheck setglobal} if
1 3612 19 <00030050ffd505e805e5000f001b001c008a402c8705c700c701c302c808
c90a064308153a0f031b3a07091c021c1c0b1231031a1e18310b191d1ed8
216a66182b2b4ef44ded4e10f64ded12392f003f3fed3fed313043794032
001a0d26012509250526160e18320014001232011a081832001006123201
170c1532011302153201190a1b320011041b32002b2b2b2b012b2b2b2b2b
2b2b2b81005d001716111007022120272611103712210012351000232200
1114122103049bbb92a7c4fe95feadc2ad94be0174011bebfef1ebe4fee0
f701150e05e5fac3fed0feb7daff00e0d8014a012ad40110faa20179f501
03013cfec7fecff4feb1055e>FXYAAA+Helvetica AddT42Char 
1 7992 36 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>FXYAAA+Helvetica AddT42Char 
FXYAAA+Helvetica /CharStrings get begin
/O 19 def
/u 36 def
end
FXYAAA+Helvetica /Encoding get
dup 79 /O put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBS+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /H /I 4{/.notdef}rp /N 
/O /P /Q /R /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /u /v 137{/.notdef}rp]
YJZMBS+Helvetica nf
YJZMBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
78.3672 274.984 mo
(Ours)
[7.78 5.56 3.32993 0 ]xsh
45.8672 271.4 mo
75.3672 271.4 li
@
gsave
-23.0728 321.9 mo
424.867 321.9 li
424.867 658.067 li
-23.0728 658.067 li
cp
clp
gsave
-23.1328 658.9 mo
424.867 658.9 li
424.867 321.9 li
-23.1328 321.9 li
cp
clp
-23.1328 658.15 mo
424.95 658.15 li
424.95 321.9 li
-23.1328 321.9 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
grestore
grestore
35.1172 347.15 mo
382.284 347.15 li
382.284 621.067 li
35.1172 621.067 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
.5 lw
35.1172 621.067 mo
35.1172 347.15 li
382.284 347.15 li
382.284 621.067 li
35.1172 621.067 li
@
.333 lw
[.5 4 ] 0 dsh
35.1172 621.067 mo
382.284 621.067 li
35.1172 581.9 mo
382.284 581.9 li
35.1172 542.733 mo
382.284 542.733 li
35.1172 503.65 mo
382.284 503.65 li
35.1172 464.483 mo
382.284 464.483 li
35.1172 425.4 mo
382.284 425.4 li
35.1172 386.233 mo
382.284 386.233 li
35.1172 347.15 mo
382.284 347.15 li
1 /0 /CSD get_res sepcs
1 sep
@
.5 lw
[] 0 dsh
35.1172 621.067 mo
382.284 621.067 li
35.1172 347.15 mo
382.284 347.15 li
35.1172 621.067 mo
35.1172 347.15 li
382.284 621.067 mo
382.284 347.15 li
35.1172 621.067 mo
382.284 621.067 li
35.1172 621.067 mo
35.1172 347.15 li
73.6172 621.067 mo
73.6172 617.567 li
73.6172 347.15 mo
73.6172 350.567 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /DTOAAA+Helvetica
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000036c6670
676d000000000000042800000a1d676c796619113cdf0000139800001f80
686561640000000000000e4800000036686865610000000000000e800000
0024686d74780000000000000ea4000000946c6f636185988caa00000f38
0000004c6d6178700000000000000f84000000206e616d655c6d6d870000
0fa400000024707265700000000000000fc8000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0401bb000598a8a20b003265358
2321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db8005c2c4b535845441b2121592d00000000010000
00000000299acaab5f0f3cf500110800000000005f4d8f0000000000cff2
eef7f865fc270b9108f9000000090001000000000000000100000629fe29
00000c01f865fced0b910001000000000000000000000000000000250512
004202390000023900af04730040047300c4047300400473003104730034
047300420473004d0473004b05c700a504e300af0639006305c700a10239
00c905c7009c06390050055600af0639005005c700b40556006004e30021
078d0025047300520400003b0473004801c7008401c7008906aa00840473
00840473003b02aa00890400004202390017047300800400000b00000036
0036005600c400ea0176022202700304039a03e404460478052005580570
05c60644069a075407de08aa08d809a40a6e0af00bba0be80c0a0c860ce2
0d5a0da00e800ed00f2a0fc000010000002500920009006b000700020010
0010005d000007e80a1d0004000100000001001200010000000000060010
00004a525746494e2b48656c7665746963610000b800532bb800492bb800
3f2bb800352bb8002b2b4118008001a6009001a600a001a600030069018b
0079018b0089018b0099018b00040089018b0099018b00a9018b00b9018b
b2040840ba0179001a014a400b041f5414191f180a0b1fd2b80106b49e1f
d918e3bb0119000d00e10119b20d0009410a01a0019f0064001f01a50025
017a00480028019ab3296c1f60410a01a9007001a9008001a90003008001
a9000101a9b21e321fbe012c00250401001f0126001e0401b61fe7312d1f
e531b80201b21fc227b80401b21fc11eb80201400f1fc01d9e1fbf1d671f
be1d671fab27b80401b21faa29b80401b61fa91d6c1f931eb8019ab21f92
1db80101b21f911db80101b21f751db80201b61f6d29961f6431b8019ab2
1f4c96b802abb21f391db80156400b1f3638211f351de41f2f27b8080140
0b1f2d1d4c1f2a31cd1f241db802abb21f201eb8012540111f1c1d931f3a
1d4c1f1e1d45273a1d4527bb01aa019b002a019bb2254a1fba019b002501
7ab349293896b8017bb348283125b8017a403648289629482725294c1f25
2946272729482756c80784075b07410732072b072807260721071b071408
120810080e080c080a08080807b801acb23f1f06bb01ab003f001f01abb3
08060805b801aeb23f1f04bb01ad003f001f01adb70804080208000814b8
ffe0b40000010014b801abb41000000100b801abb606100000010006b801
adb300000100b801ad401f04000001000410000001001002000001000200
000001000002010802004a00b0018db806008516763f183f123e11394644
3e113946443e113946443e113946443e113946443e11394660443e113946
60443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b
2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376706a664565234560
23456560234560b08b766818b080622020b16a704565234520b003266062
636820b003266165b070236544b06a234420b176664565234520b0032660
62636820b003266165b066236544b0762344b10066455458b166406544b2
7640764523614459b36242725d456523456023456560234560b089766818
b080622020b172424565234520b003266062636820b003266165b0422365
44b072234420b1625d4565234520b003266062636820b003266165b05d23
6544b0622344b1005d455458b15d406544b262406245236144592b2b2b2b
456953427374b8019a2045694b20b02853b049515a58b020615944b801a6
20456944750000>
[8065 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 4028 21 <00020060ffd504f605e5002f003000fe405e290f27232626360e35214726
62267a0e7724096b08180e172502590e680eaa22030a0e3a2224220a0304
1c1886142f2f2b1c3a1403043a2b0930020a0e081124221f283030111825
17490825281a321f25114900252f193132a0216a89182b2b4ef44dedf4ed
4e10f64dedf4ed12392f1211393912113939003f3fed3fed12392f10ed11
1217392efd335d7131304379404d282e111f0008022602262d2506251a26
032c002b002d2e032c002b00052a082b011d131f2b001b15182b01191801
2d042b0009270b2b01250b012e042b000729042b001e121c2b0119161c2b
01002b2b2b2b10102b2b01103c2b2b2b2b103c2b2b2b2b2b2b818181005d
0116171633323736353427262f0126272635342433320415232627262322
06151417161f01161716151404232027263701011e073463fa705cb24b4c
a2c7c3518c0112fbe70143bb0f315bdab09a5a3bd0ce95518cfe9debfeee
9b9b03024d01da7d4e92203ea0783332252d2c355cb7c6fedff5763f7394
626c3220302f223b67c4f4d28c8bee040b00>DTOAAA+Helvetica AddT42Char 
1 3752 20 <000200b40000057805bd0009002700944012070d49014805590158056905
641478050816bb01300119001b011c40422321202660127112751403121e
1f141c1503211e161404261224251e0009091b071e0b02261c1b08202515
1f251603310f691b1a29082625270a192829d6219566182b2b4ef43c4dfd
3c4e10f64df4edd4edd4ed003f3c3c3ffd12392f3cfd3c39111739011112
39391239395d1112392b3130015d01323635342726232111032132171615
1406071e011f011617161715232e012f012627262321112303478ca3723d
66fe1ac702a8a86dcf6d6256570507030b122ef40a0c040c0764397afe3b
c7031c70929d391efe0a02a1315efd84a833237280c55429461421133c56
f590311bfd8a>DTOAAA+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g21 21 def
/g20 20 def
end
DTOAAA+Helvetica /Encoding get
dup 33 /g21 put
dup 34 /g20 put
pop
end
%ADOEndSubsetFont
/YJZMBT+Helvetica /DTOAAA+Helvetica findfont ct_VMDictPut
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 221{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
66.7005 633.15 mo
(!")
[6.67007 0 ]xsh
112.2 621.067 mo
112.2 617.567 li
112.2 347.15 mo
112.2 350.567 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 3208 18 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>DTOAAA+Helvetica AddT42Char 
1 3380 19 <00020050ff8b05e805e50015002700e4406b69036a1579038513961bc71b
064a1c591b5a1c64157515781cb719c81a083808181b021b191901151a1b
1a1a1a0001190100191e121a1a00191a191a1b18150206240001111e1500
02050d191a1b18042127213a0d03273a0105091e31111a29243109192829
d8216a66182b2b4ef44ded4e10f64ded003f33ed3fed1112173911123939
39011112393912173908872e2b087d10c50187102b3c2b3c87102bc42b3c
313018437940281f2606100b260f250725220c243200200e1e3201260624
3200230a2132011f102132012508273200002b2b2b012b2b2b2b2b2b8181
015d005d2507270e01232027261110371221201716111407060704363727
371736123510002322001110002105dc64e352bf71feaac2ab94be017401
85bb9223357efe576c28a164c05b41fef1ebeefeea010b01020479ad2d36
e0da0148012ad40110fac3fed08e83c87e1a11197e7b9568010276010301
3cfed1fec5fef7fec6000000>DTOAAA+Helvetica AddT42Char 
1 2188 12 <000100af000004aa05bd000900394018071e040409031e0100020908066b
011a0b03082500190a0bb80157b32195dc182b2b4ef44dfd3c4e10f64de4
003f3f3ced12392ffd313013211521112115211123af03fbfccc02d1fd2f
c705bdb4fe42affd6400>DTOAAA+Helvetica AddT42Char 
1 4436 22 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g18 18 def
/g19 19 def
/g12 12 def
/g22 22 def
end
DTOAAA+Helvetica /Encoding get
dup 35 /g18 put
dup 36 /g19 put
dup 37 /g12 put
dup 38 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 217{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
98.8672 633.15 mo
(#$%&)
[6.67007 7.78 6.10992 0 ]xsh
150.784 621.067 mo
150.784 617.567 li
150.784 347.15 mo
150.784 350.567 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 1992 11 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>DTOAAA+Helvetica AddT42Char 
1 2784 16 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g11 11 def
/g16 16 def
end
DTOAAA+Helvetica /Encoding get
dup 39 /g11 put
dup 40 /g16 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 215{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
137.2 633.15 mo
(#%'\()
[6.67007 6.10992 7.22 0 ]xsh
189.367 621.067 mo
189.367 617.567 li
189.367 347.15 mo
189.367 350.567 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 2736 15 <000100c90000019205bd00030017b8002b2bba00010000002e2b00b80000
2fb800022f303113331123c9c9c905bdfa43>DTOAAA+Helvetica AddT42Char 
1 2288 13 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g15 15 def
/g13 13 def
end
DTOAAA+Helvetica /Encoding get
dup 41 /g15 put
dup 42 /g13 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 213{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
180.784 633.15 mo
(!\)*)
[6.67007 2.78 0 ]xsh
227.95 621.067 mo
227.95 617.567 li
227.95 347.15 mo
227.95 350.567 li
@
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
221.867 633.15 mo
(%&)
[6.10992 0 ]xsh
266.534 621.067 mo
266.534 617.567 li
266.534 347.15 mo
266.534 350.567 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 4528 23 <000100250000077105bd000c0156409508090178077909780b8701860405
47014b02440348044d08420a8908870ac802c703c707c80b0c580b670768
0b890286038607890b9902960395079a0ba902a603a507aa0b0f0808070a
080b1908160a5707060b08040a023e284528052506060700250c0c0b0904
01030b020305060c050002080a0b0307080e17171a0705068640080304f4
0a0209f4800b0001860c190d8e5e182b194e10f4184dfd39391afd3939fd
39391afd3939194e456544e618003f173c3f173c12173901874d2eed872e
ed4b5279b4090a09080ab8019a400f120101020405030406070908090a08
b8019a400a12040403010102000c0b877d1008c5872e18052b087d10c587
0810c5872e18052b087d10c54b5179b301010002b8019ab6090a09040405
03b8019a400f090908040503040607010001020c0b870810c0870810c087
10057afd1808c4188710057afd7d08c4313001725d5d71005d7213090133
090133012309012301fd0115014cd8014c0115dafe7ed1feadfeabd1fe80
05bdfb5504abfb5504abfa4304c2fb3e05bd>DTOAAA+Helvetica AddT42Char 
1 4936 24 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>DTOAAA+Helvetica AddT42Char 
1 7764 36 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>DTOAAA+Helvetica AddT42Char 
1 5600 26 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>DTOAAA+Helvetica AddT42Char 
1 6096 28 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>DTOAAA+Helvetica AddT42Char 
1 7424 34 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g23 23 def
/g24 24 def
/g36 36 def
/g26 26 def
/g28 28 def
/g34 34 def
end
DTOAAA+Helvetica /Encoding get
dup 43 /g23 put
dup 44 /g24 put
dup 45 /g36 put
dup 46 /g26 put
dup 47 /g28 put
dup 48 /g34 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 207{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
248.951 633.15 mo
(+,-./.0)
[9.44 5.56 5 5.56 2.22 5.56 0 ]xsh
305.117 621.067 mo
305.117 617.567 li
305.117 347.15 mo
305.117 350.567 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 2624 14 <000100a10000052f05bd000b003f402108091e0302020401020a07080407
2506051a0d010a250b00190c0c0da0217670182b2b104ef43c4dfd3c4e10
f63c4dfd3c003f3c3f3c392f3cfd3c3130133311211133112311211123a1
c902fcc9c9fd04c905bdfda1025ffa4302affd510000>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g14 14 def
end
DTOAAA+Helvetica /Encoding get
dup 49 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 206{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
295.451 633.15 mo
(1%&)
[7.22 6.10992 0 ]xsh
343.7 621.067 mo
343.7 617.567 li
343.7 347.15 mo
343.7 350.567 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 2956 17 <00030050ffd505e805e5000f001b001c008a402c8705c700c701c302c808
c90a064308153a0f031b3a07091c021c1c0b1231031a1e18310b191d1ed8
216a66182b2b4ef44ded4e10f64ded12392f003f3fed3fed313043794032
001a0d26012509250526160e18320014001232011a081832001006123201
170c1532011302153201190a1b320011041b32002b2b2b2b012b2b2b2b2b
2b2b2b81005d001716111007022120272611103712210012351000232200
1114122103049bbb92a7c4fe95feadc2ad94be0174011bebfef1ebe4fee0
f701150e05e5fac3fed0feb7daff00e0d8014a012ad40110faa20179f501
03013cfec7fecff4feb1055e>DTOAAA+Helvetica AddT42Char 
1 7584 35 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>DTOAAA+Helvetica AddT42Char 
1 6836 32 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>DTOAAA+Helvetica AddT42Char 
1 6976 33 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g17 17 def
/g35 35 def
/g32 32 def
/g33 33 def
end
DTOAAA+Helvetica /Encoding get
dup 50 /g17 put
dup 51 /g35 put
dup 52 /g32 put
dup 53 /g33 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 202{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
332.867 633.15 mo
(2345)
[7.78 5.56 3.32993 0 ]xsh
35.1172 621.067 mo
38.5342 621.067 li
382.284 621.067 mo
378.784 621.067 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 172 3 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g3 3 def
end
DTOAAA+Helvetica /Encoding get
dup 54 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 201{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
26.7005 624.734 mo
(6)sh
35.1172 581.9 mo
38.5342 581.9 li
382.284 581.9 mo
378.784 581.9 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 108 2 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>DTOAAA+Helvetica AddT42Char 
1 392 4 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g2 2 def
/g4 4 def
end
DTOAAA+Helvetica /Encoding get
dup 55 /g2 put
dup 56 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 199{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 585.567 mo
(678)
[5.56 2.78 0 ]xsh
35.1172 542.733 mo
38.5342 542.733 li
382.284 542.733 mo
378.784 542.733 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 468 5 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g5 5 def
end
DTOAAA+Helvetica /Encoding get
dup 57 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 198{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 546.4 mo
(679)
[5.56 2.78 0 ]xsh
35.1172 503.65 mo
38.5342 503.65 li
382.284 503.65 mo
378.784 503.65 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 748 6 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g6 6 def
end
DTOAAA+Helvetica /Encoding get
dup 58 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 197{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 507.317 mo
(67:)
[5.56 2.78 0 ]xsh
35.1172 464.483 mo
38.5342 464.483 li
382.284 464.483 mo
378.784 464.483 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 1092 7 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g7 7 def
end
DTOAAA+Helvetica /Encoding get
dup 59 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 196{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 468.15 mo
(67;)
[5.56 2.78 0 ]xsh
35.1172 425.4 mo
38.5342 425.4 li
382.284 425.4 mo
378.784 425.4 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 1248 8 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g8 8 def
end
DTOAAA+Helvetica /Encoding get
dup 60 /g8 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 195{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 429.067 mo
(67<)
[5.56 2.78 0 ]xsh
35.1172 386.233 mo
38.5342 386.233 li
382.284 386.233 mo
378.784 386.233 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 1544 9 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g9 9 def
end
DTOAAA+Helvetica /Encoding get
dup 61 /g9 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 194{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 389.9 mo
(67=)
[5.56 2.78 0 ]xsh
35.1172 347.15 mo
38.5342 347.15 li
382.284 347.15 mo
378.784 347.15 li
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 1844 10 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g10 10 def
end
DTOAAA+Helvetica /Encoding get
dup 62 /g10 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 193{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
18.3672 350.817 mo
(67>)
[5.56 2.78 0 ]xsh
35.1172 621.067 mo
382.284 621.067 li
35.1172 347.15 mo
382.284 347.15 li
35.1172 621.067 mo
35.1172 347.15 li
382.284 621.067 mo
382.284 347.15 li
@
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
61.6172 421.65 mo
68.5342 421.65 li
68.5342 621.067 li
61.6172 621.067 li
cp
1 .972106 .102541 .117464 cmyk
f
61.6172 621.067 mo
61.6172 421.65 li
68.5342 421.65 li
68.5342 621.067 li
61.6172 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
100.2 405.817 mo
107.117 405.817 li
107.117 621.067 li
100.2 621.067 li
cp
1 .972106 .102541 .117464 cmyk
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
100.2 621.067 mo
100.2 405.817 li
107.117 405.817 li
107.117 621.067 li
100.2 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
138.784 376.4 mo
145.617 376.4 li
145.617 621.067 li
138.784 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
138.784 621.067 mo
138.784 376.4 li
145.617 376.4 li
145.617 621.067 li
138.784 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
177.367 394.4 mo
184.2 394.4 li
184.2 621.067 li
177.367 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
177.367 621.067 mo
177.367 394.4 li
184.2 394.4 li
184.2 621.067 li
177.367 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
215.95 408.317 mo
222.783 408.317 li
222.783 621.067 li
215.95 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
215.95 621.067 mo
215.95 408.317 li
222.784 408.317 li
222.784 621.067 li
215.95 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
254.534 357.65 mo
261.367 357.65 li
261.367 621.067 li
254.534 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
254.534 621.067 mo
254.534 357.65 li
261.367 357.65 li
261.367 621.067 li
254.534 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
293.117 371.233 mo
299.95 371.233 li
299.95 621.066 li
293.117 621.066 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
293.117 621.067 mo
293.117 371.233 li
299.95 371.233 li
299.95 621.067 li
293.117 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
331.7 355.567 mo
338.533 355.567 li
338.533 621.067 li
331.7 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
331.7 621.067 mo
331.7 355.567 li
338.534 355.567 li
338.534 621.067 li
331.7 621.067 li
35.1172 621.067 mo
382.284 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
70.2002 456.15 mo
77.1172 456.15 li
77.1172 621.067 li
70.2002 621.067 li
cp
.406867 0 .821653 0 cmyk
f
70.2002 621.067 mo
70.2002 456.15 li
77.1172 456.15 li
77.1172 621.067 li
70.2002 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
108.784 451.733 mo
115.617 451.733 li
115.617 621.066 li
108.784 621.066 li
cp
.406867 0 .821653 0 cmyk
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
108.784 621.067 mo
108.784 451.733 li
115.617 451.733 li
115.617 621.067 li
108.784 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
147.367 444.567 mo
154.2 444.567 li
154.2 621.067 li
147.367 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
147.367 621.067 mo
147.367 444.567 li
154.2 444.567 li
154.2 621.067 li
147.367 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
185.95 469.733 mo
192.783 469.733 li
192.783 621.066 li
185.95 621.066 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
185.95 621.067 mo
185.95 469.733 li
192.784 469.733 li
192.784 621.067 li
185.95 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
224.534 463.983 mo
231.367 463.983 li
231.367 621.066 li
224.534 621.066 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
224.534 621.067 mo
224.534 463.983 li
231.367 463.983 li
231.367 621.067 li
224.534 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
263.117 466.15 mo
269.95 466.15 li
269.95 621.067 li
263.117 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
263.117 621.067 mo
263.117 466.15 li
269.95 466.15 li
269.95 621.067 li
263.117 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
301.7 414.983 mo
308.533 414.983 li
308.533 621.066 li
301.7 621.066 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
301.7 621.067 mo
301.7 414.983 li
308.534 414.983 li
308.534 621.067 li
301.7 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
340.2 399.4 mo
347.117 399.4 li
347.117 621.067 li
340.2 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
340.2 621.067 mo
340.2 399.4 li
347.117 399.4 li
347.117 621.067 li
340.2 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
78.7842 442.65 mo
85.6172 442.65 li
85.6172 621.067 li
78.7842 621.067 li
cp
.290196 1 1 .385595 cmyk
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
78.7842 621.067 mo
78.7842 442.65 li
85.6172 442.65 li
85.6172 621.067 li
78.7842 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
117.367 429.567 mo
124.2 429.567 li
124.2 621.067 li
117.367 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
117.367 621.067 mo
117.367 429.567 li
124.2 429.567 li
124.2 621.067 li
117.367 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
155.95 416.15 mo
162.783 416.15 li
162.783 621.067 li
155.95 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
155.95 621.067 mo
155.95 416.15 li
162.784 416.15 li
162.784 621.067 li
155.95 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
194.534 438.65 mo
201.367 438.65 li
201.367 621.067 li
194.534 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
194.534 621.067 mo
194.534 438.65 li
201.367 438.65 li
201.367 621.067 li
194.534 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
233.117 435.65 mo
239.95 435.65 li
239.95 621.067 li
233.117 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
233.117 621.067 mo
233.117 435.65 li
239.95 435.65 li
239.95 621.067 li
233.117 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
271.7 417.65 mo
278.533 417.65 li
278.533 621.067 li
271.7 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
271.7 621.067 mo
271.7 417.65 li
278.534 417.65 li
278.534 621.067 li
271.7 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
310.2 396.233 mo
317.117 396.233 li
317.117 621.066 li
310.2 621.066 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
310.2 621.067 mo
310.2 396.233 li
317.117 396.233 li
317.117 621.067 li
310.2 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
348.784 381.067 mo
355.701 381.067 li
355.701 621.067 li
348.784 621.067 li
cp
f
gsave
35.1172 621.15 mo
382.367 621.15 li
382.367 347.15 li
35.1172 347.15 li
cp
clp
348.784 621.067 mo
348.784 381.067 li
355.7 381.067 li
355.7 621.067 li
348.784 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if

1 0 1 <> DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g1 1 def
end
DTOAAA+Helvetica /Encoding get
dup 63 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 /g1 
192{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
33.7005 624.65 mo
(?)sh
380.951 350.65 mo
(?)sh
40.0342 352.15 mo
133.117 352.15 li
133.117 392.15 li
40.0342 392.15 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
40.0342 392.15 mo
40.0342 352.15 li
133.117 352.15 li
133.117 392.15 li
40.0342 392.15 li
@
40.0342 392.15 mo
133.117 392.15 li
40.0342 352.15 mo
133.117 352.15 li
40.0342 392.15 mo
40.0342 352.15 li
133.117 392.15 mo
133.117 352.15 li
40.0342 392.15 mo
133.117 392.15 li
40.0342 392.15 mo
40.0342 352.15 li
40.0342 392.15 mo
133.117 392.15 li
40.0342 352.15 mo
133.117 352.15 li
40.0342 392.15 mo
40.0342 352.15 li
133.117 392.15 mo
133.117 352.15 li
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 5340 25 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>DTOAAA+Helvetica AddT42Char 
1 6004 27 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>DTOAAA+Helvetica AddT42Char 
1 6596 31 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>DTOAAA+Helvetica AddT42Char 
1 6412 30 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g25 25 def
/g27 27 def
/g31 31 def
/g30 30 def
end
DTOAAA+Helvetica /Encoding get
dup 64 /g25 put
dup 65 /g27 put
dup 66 /g31 put
dup 67 /g30 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 /g1 
/g25 /g27 /g31 /g30 188{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
80.0339 363.317 mo
(#4.)sh
95.5939 363.317 mo
(@A5ABC)
[5 2.22 5 2.22 5.56 0 ]xsh
46.1172 355.233 mo
76.8672 355.233 li
76.8672 364.316 li
46.1172 364.316 li
cp
1 .972106 .102541 .117464 cmyk
f
46.1172 364.317 mo
46.1172 355.233 li
76.8672 355.233 li
76.8672 364.317 li
46.1172 364.317 li
1 /0 /CSD get_res sepcs
1 sep
@
0 0 0 1 cmyk
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
80.0339 375.734 mo
(".@,//)
[7.22 5.56 5 5.56 2.22 0 ]xsh
46.1172 367.567 mo
76.8672 367.567 li
76.8672 376.65 li
46.1172 376.65 li
cp
.406867 0 .821653 0 cmyk
f
46.1172 376.65 mo
46.1172 367.567 li
76.8672 367.567 li
76.8672 376.65 li
46.1172 376.65 li
1 /0 /CSD get_res sepcs
1 sep
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: DTOAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DTOAAA+Helvetica gcheck setglobal} if
1 6164 29 <0001008400000625044700260085403b0708070e060f1708170e170f2708
270e270f4819560b670b0c23250a1a1d23190a02041725211d171d0d0607
00061b1c2503130a2817171a112914b80101b21a291db80101400a00012e
25292600192728b8010db3216242182b2b4ef43c4dfde410f4edf4fd4e45
6544e6003f173c3f3f3c4deded111217390111123912393130005d133315
36373633321716173e013332171615112311342623220615112311342726
23220615112384b240345971804e2c243ca265d84e2abb6b4d6a99b71a29
7066a7b4042f984f243d3f244656539c548efd3702e86b508ea6fd9102bb
6d324b9ecffdc800>DTOAAA+Helvetica AddT42Char 
DTOAAA+Helvetica /CharStrings get begin
/g29 29 def
end
DTOAAA+Helvetica /Encoding get
dup 68 /g29 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBT+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 /g1 
/g25 /g27 /g31 /g30 /g29 187{/.notdef}rp]
YJZMBT+Helvetica nf
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
80.0339 388.067 mo
(%)sh
%ADOBeginSubsetFont: XSAAAA+Helvetica-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (XSAAAA+Helvetica)
%%Title: (XSAAAA+Helvetica Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /XSAAAA+Helvetica def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-951 -481 1446 1122} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 2197 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7C
A97DB1343CA> |
239 <001C60D8A8C9B7F374C6243061E982D378A14DF0A305> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /XSAAAA+Helvetica-Identity-H /Identity-H 0 [/XSAAAA+Helvetica] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YJZMBU+Helvetica /XSAAAA+Helvetica-Identity-H findfont ct_VMDictPut
YJZMBU+Helvetica [10 0 0 -10 0 0 ]msf
86.1419 388.067 mo
(\000\357)sh
YJZMBT+Helvetica*1 [10 0 0 -10 0 0 ]msf
91.9819 388.067 mo
(D.,534.)
[8.32993 5.56 5.56 5 5.56 3.32993 0 ]xsh
46.1172 379.9 mo
76.8672 379.9 li
76.8672 388.983 li
46.1172 388.983 li
cp
.290196 1 1 .385595 cmyk
f
46.1172 388.983 mo
46.1172 379.9 li
76.8672 379.9 li
76.8672 388.983 li
46.1172 388.983 li
1 /0 /CSD get_res sepcs
1 sep
@
gsave
453.927 -15.0995 mo
901.867 -15.0995 li
901.867 321.067 li
453.927 321.067 li
cp
clp
gsave
453.867 321.9 mo
901.867 321.9 li
901.867 -15.0995 li
453.867 -15.0995 li
cp
clp
453.867 321.15 mo
901.95 321.15 li
901.95 -15.0995 li
453.867 -15.0995 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
grestore
grestore
512.117 10.1505 mo
859.284 10.1505 li
859.284 284.067 li
512.117 284.067 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
512.117 284.067 mo
512.117 10.1505 li
859.284 10.1505 li
859.284 284.067 li
512.117 284.067 li
@
.333 lw
[.5 4 ] 0 dsh
512.117 284.067 mo
512.117 10.1505 li
546.784 284.067 mo
546.784 10.1505 li
581.534 284.067 mo
581.534 10.1505 li
616.2 284.067 mo
616.2 10.1505 li
650.95 284.067 mo
650.95 10.1505 li
685.7 284.067 mo
685.7 10.1505 li
720.367 284.067 mo
720.367 10.1505 li
755.117 284.067 mo
755.117 10.1505 li
789.784 284.067 mo
789.784 10.1505 li
824.534 284.067 mo
824.534 10.1505 li
859.284 284.067 mo
859.284 10.1505 li
512.117 284.067 mo
859.284 284.067 li
512.117 256.65 mo
859.284 256.65 li
512.117 229.233 mo
859.284 229.233 li
512.117 201.817 mo
859.284 201.817 li
512.117 174.483 mo
859.284 174.483 li
512.117 147.068 mo
859.284 147.068 li
512.117 119.65 mo
859.284 119.65 li
512.117 92.3175 mo
859.284 92.3175 li
512.117 64.9005 mo
859.284 64.9005 li
512.117 37.4835 mo
859.284 37.4835 li
512.117 10.1505 mo
859.284 10.1505 li
1 /0 /CSD get_res sepcs
1 sep
@
.5 lw
[] 0 dsh
512.117 284.067 mo
859.284 284.067 li
512.117 10.1505 mo
859.284 10.1505 li
512.117 284.067 mo
512.117 10.1505 li
859.284 284.067 mo
859.284 10.1505 li
512.117 284.067 mo
859.284 284.067 li
512.117 284.067 mo
512.117 10.1505 li
512.117 284.067 mo
512.117 280.567 li
512.117 10.1505 mo
512.117 13.5674 li
@
%ADOBeginSubsetFont: FLEAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /FLEAAA+Helvetica
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000036c6670
676d000000000000042800000a1d676c7966e480a8dd000013a000002118
686561640000000000000e4800000036686865610000000000000e800000
0024686d74780000000000000ea4000000986c6f63619a6e91b400000f3c
0000004e6d6178700000000000000f8c000000206e616d65587f758c0000
0fac00000024707265700000000000000fd0000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0401bb000598a8a20b003265358
2321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db8005c2c4b535845441b2121592d00000000010000
0000000037422dfa5f0f3cf500110800000000005f4d8f0000000000cff2
eef7f865fc270b9108f9000000090001000000000000000100000629fe29
00000c01f865fced0b910001000000000000000000000000000000260512
004202390000023900af04730040047300c4047300400473003104730034
047300420473004d0473004b047300420473004905c700a504e300af0639
006305c700a1023900c905c7009c06390050055600af0639005005c700b4
0556006004e30021078d0025047300520400003b0473004801c7008401c7
0089047300840473003b02aa00890400004202390017047300800400000b
000000360036005600c400ea0176022202700304039a03e40496052c058e
05c0066806a006b8070e078c07e2089c092609f20a200aec0bb60c380d02
0d300d520dae0e260e6c0f4c0f9c0ff6108c000000010000002600920009
006b0007000200100010005d000007e80a1d000400010000000100120001
000000000006001000004b4b5358505a2b48656c7665746963610000b800
532bb800492bb8003f2bb800352bb8002b2b4118008001a6009001a600a0
01a600030069018b0079018b0089018b0099018b00040089018b0099018b
00a9018b00b9018bb2040840ba0179001a014a400b041f5414191f180a0b
1fd2b80106b49e1fd918e3bb0119000d00e10119b20d0009410a01a0019f
0064001f01a50025017a00480028019ab3296c1f60410a01a9007001a900
8001a90003008001a9000101a9b21e321fbe012c00250401001f0126001e
0401b61fe7312d1fe531b80201b21fc227b80401b21fc11eb80201400f1f
c01d9e1fbf1d671fbe1d671fab27b80401b21faa29b80401b61fa91d6c1f
931eb8019ab21f921db80101b21f911db80101b21f751db80201b61f6d29
961f6431b8019ab21f4c96b802abb21f391db80156400b1f3638211f351d
e41f2f27b80801400b1f2d1d4c1f2a31cd1f241db802abb21f201eb80125
40111f1c1d931f3a1d4c1f1e1d45273a1d4527bb01aa019b002a019bb225
4a1fba019b0025017ab349293896b8017bb348283125b8017a4036482896
29482725294c1f252946272729482756c80784075b07410732072b072807
260721071b071408120810080e080c080a08080807b801acb23f1f06bb01
ab003f001f01abb308060805b801aeb23f1f04bb01ad003f001f01adb708
04080208000814b8ffe0b40000010014b801abb41000000100b801abb606
100000010006b801adb300000100b801ad401f0400000100041000000100
1002000001000200000001000002010802004a00b0018db806008516763f
183f123e113946443e113946443e113946443e113946443e113946443e11
394660443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358
b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376
706a66456523456023456560234560b08b766818b080622020b16a704565
234520b003266062636820b003266165b070236544b06a234420b1766645
65234520b003266062636820b003266165b066236544b0762344b1006645
5458b166406544b27640764523614459b36242725d456523456023456560
234560b089766818b080622020b172424565234520b003266062636820b0
03266165b042236544b072234420b1625d4565234520b003266062636820
b003266165b05d236544b0622344b1005d455458b15d406544b262406245
236144592b2b2b2b456953427374b8019a2045694b20b02853b049515a58
b020615944b801a620456944750000>
[8473 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 172 3 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>FLEAAA+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/zero 3 def
end
FLEAAA+Helvetica /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/YJZMBV+Helvetica /FLEAAA+Helvetica findfont ct_VMDictPut
/YJZMBV+Helvetica*1 
[48{/.notdef}rp /zero 207{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
509.367 296.15 mo
(0)sh
546.784 284.067 mo
546.784 280.567 li
546.784 10.1505 mo
546.784 13.5674 li
@
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 108 2 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>FLEAAA+Helvetica AddT42Char 
1 392 4 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/period 2 def
/one 4 def
end
FLEAAA+Helvetica /Encoding get
dup 46 /period put
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one 206{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
539.867 296.15 mo
(0.1)
[5.56 2.77997 0 ]xsh
581.534 284.067 mo
581.534 280.567 li
581.534 10.1505 mo
581.534 13.5674 li
@
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 468 5 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/two 5 def
end
FLEAAA+Helvetica /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two 205{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
574.617 296.15 mo
(0.2)
[5.56 2.77997 0 ]xsh
616.2 284.067 mo
616.2 280.567 li
616.2 10.1505 mo
616.2 13.5674 li
@
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 748 6 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/three 6 def
end
FLEAAA+Helvetica /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three 204{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
609.284 296.15 mo
(0.3)
[5.56 2.77997 0 ]xsh
650.95 284.067 mo
650.95 280.567 li
650.95 10.1505 mo
650.95 13.5674 li
@
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 1092 7 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/four 7 def
end
FLEAAA+Helvetica /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
203{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
644.034 296.15 mo
(0.4)
[5.56 2.77997 0 ]xsh
685.7 284.067 mo
685.7 280.567 li
685.7 10.1505 mo
685.7 13.5674 li
@
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 1248 8 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/five 8 def
end
FLEAAA+Helvetica /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five 202{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
678.784 296.15 mo
(0.5)
[5.56 2.77997 0 ]xsh
720.367 284.067 mo
720.367 280.567 li
720.367 10.1505 mo
720.367 13.5674 li
@
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 1544 9 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/six 9 def
end
FLEAAA+Helvetica /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six 201{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
713.451 296.15 mo
(0.6)
[5.56 2.77997 0 ]xsh
755.117 284.067 mo
755.117 280.567 li
755.117 10.1505 mo
755.117 13.5674 li
@
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 1844 10 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/seven 10 def
end
FLEAAA+Helvetica /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven 200{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
748.201 296.15 mo
(0.7)
[5.56 2.77997 0 ]xsh
789.784 284.067 mo
789.784 280.567 li
789.784 10.1505 mo
789.784 13.5674 li
@
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 1992 11 <00030042ffd7041a059c000b0017003200cb4047560157095a0f59136401
65096b0f691377250949107b197623722573277c317c3288198720872788
2e883198190d47083208250e0225320b3511112c05351e0517352c0d0238
21b80186b70e38296f2f08381bb80186b514382f3447331076c418d4edf4
ed10f5edf4ed003fed3fed12392fed39390111123912393130437940352a
2e1c201216030d162d1428000c2b0e28010a12082800061d082800041f02
2801152e1728000d2a172800071c0528010320052801002b2b2b2b012b2b
2b2b2b81818181015d005d00363534262322061514163312363534262322
061514163300272635343633321615140706071617161514022322243534
363702a48680838274966688a5aa8581a3959cfeb52a4fe8d5ceea442650
59335ffee8d1fedf7c7a0340855c5086865a6572fd3b87868b90938270a3
02a02b5080a0e6d99186532f2d293564a0bdfef9e3d87fb93100>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/eight 11 def
end
FLEAAA+Helvetica /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight 199{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
782.867 296.15 mo
(0.8)
[5.56 2.77997 0 ]xsh
824.534 284.067 mo
824.534 280.567 li
824.534 10.1505 mo
824.534 13.5674 li
@
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 2348 12 <00020049ffd80411059a001b002700ab402e19052b052816480658056805
8919881a981a09460807212727350a0a182135100504351bc7180d07023c
071e3114b80155400b0d00291b8124380d2947281076c418d4edf4ed10f5
fd397d4b52787a2f18003feded3fed12392fed1112393130437940341f26
191a0b13010312250226220f24280020111e28010319002800260b242800
230e2128011f13212801011a042800250c2728002b2b2b2b012b2b2b2b2b
2b81818181015d01161716333236130e0123220235341233201316151007
02212226350036353426232206151416330110086b374581b6263cb166cf
f1eee8013977424f83fec7d2da0232b19f7b849b8895015a95391ed70149
5f4d0102cbc30128fee69be9fef9cbfeaedca601268db09e9bb1948ca500
>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/nine 12 def
end
FLEAAA+Helvetica /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine 198{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
817.617 296.15 mo
(0.9)
[5.56 2.77997 0 ]xsh
859.284 284.067 mo
859.284 280.567 li
859.284 10.1505 mo
859.284 13.5674 li
@
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
856.534 296.15 mo
(1)sh
512.117 284.067 mo
515.534 284.067 li
859.284 284.067 mo
855.784 284.067 li
@
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
489.784 287.734 mo
(0.25)
[5.56 2.78 5.56 0 ]xsh
512.117 256.65 mo
515.534 256.65 li
859.284 256.65 mo
855.784 256.65 li
@
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
495.367 260.317 mo
(0.3)
[5.56 2.78 0 ]xsh
512.117 229.233 mo
515.534 229.233 li
859.284 229.233 mo
855.784 229.233 li
@
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
489.784 232.9 mo
(0.35)
[5.56 2.78 5.56 0 ]xsh
512.117 201.817 mo
515.534 201.817 li
859.284 201.817 mo
855.784 201.817 li
@
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
495.367 205.484 mo
(0.4)
[5.56 2.78 0 ]xsh
512.117 174.483 mo
515.534 174.483 li
859.284 174.483 mo
855.784 174.483 li
@
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
489.784 178.15 mo
(0.45)
[5.56 2.78 5.56 0 ]xsh
512.117 147.068 mo
515.534 147.068 li
859.284 147.068 mo
855.784 147.068 li
@
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
495.367 150.734 mo
(0.5)
[5.56 2.78 0 ]xsh
512.117 119.65 mo
515.534 119.65 li
859.284 119.65 mo
855.784 119.65 li
@
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
489.784 123.317 mo
(0.55)
[5.56 2.78 5.56 0 ]xsh
512.117 92.3175 mo
515.534 92.3175 li
859.284 92.3175 mo
855.784 92.3175 li
@
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
495.367 95.9839 mo
(0.6)
[5.56 2.78 0 ]xsh
512.117 64.9005 mo
515.534 64.9005 li
859.284 64.9005 mo
855.784 64.9005 li
@
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
489.784 68.5672 mo
(0.65)
[5.56 2.78 5.56 0 ]xsh
512.117 37.4835 mo
515.534 37.4835 li
859.284 37.4835 mo
855.784 37.4835 li
@
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
495.367 41.1505 mo
(0.7)
[5.56 2.78 0 ]xsh
512.117 10.1505 mo
515.534 10.1505 li
859.284 10.1505 mo
855.784 10.1505 li
@
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
489.784 13.8171 mo
(0.75)
[5.56 2.78 5.56 0 ]xsh
512.117 284.067 mo
859.284 284.067 li
512.117 10.1505 mo
859.284 10.1505 li
512.117 284.067 mo
512.117 10.1505 li
859.284 284.067 mo
859.284 10.1505 li
@
gsave
512.117 284.15 mo
859.367 284.15 li
859.367 10.1505 li
512.117 10.1505 li
cp
clp
2 lw
858.784 264.567 mo
857.367 263.4 li
855.45 261.567 li
853.45 259.733 li
851.367 257.983 li
849.367 256.233 li
847.367 254.567 li
841.367 249.817 li
839.284 248.317 li
837.117 246.817 li
835.034 245.317 li
830.534 242.317 li
828.284 240.9 li
825.95 239.483 li
821.117 236.817 li
818.7 235.4 li
816.284 234.067 li
813.784 232.817 li
811.284 231.483 li
803.784 227.733 li
798.617 225.233 li
796.034 224.067 li
793.45 222.817 li
790.867 221.65 li
782.867 218.15 li
777.534 215.983 li
774.867 214.817 li
769.534 212.65 li
766.784 211.567 li
764.117 210.567 li
758.784 208.4 li
756.034 207.4 li
753.367 206.317 li
740.034 201.317 li
737.45 200.4 li
734.784 199.4 li
732.2 198.4 li
729.617 197.483 li
727.034 196.483 li
721.867 194.65 li
719.367 193.733 li
716.784 192.817 li
709.284 190.067 li
706.867 189.233 li
704.367 188.4 li
701.95 187.483 li
699.45 186.65 li
694.617 184.983 li
692.2 184.233 li
687.367 182.567 li
684.95 181.817 li
682.617 180.983 li
680.284 180.233 li
677.95 179.4 li
675.617 178.65 li
673.367 177.817 li
671.117 177.067 li
668.867 176.233 li
666.7 175.483 li
664.45 174.733 li
660.117 173.233 li
658.034 172.483 li
655.867 171.733 li
653.784 171.067 li
649.617 169.567 li
647.617 168.817 li
645.534 168.067 li
643.534 167.4 li
641.617 166.65 li
639.617 165.9 li
637.7 165.15 li
635.784 164.483 li
633.867 163.733 li
630.2 162.4 li
628.367 161.65 li
626.617 161.067 li
624.867 160.317 li
623.034 159.65 li
621.367 158.983 li
619.617 158.317 li
617.867 157.733 li
616.2 157.067 li
612.867 155.9 li
611.284 155.318 li
609.617 154.733 li
608.034 154.15 li
606.45 153.65 li
604.95 153.068 li
603.367 152.568 li
597.367 150.568 li
593.117 149.068 li
591.7 148.65 li
590.284 148.15 li
588.95 147.733 li
587.534 147.233 li
586.2 146.818 li
584.95 146.4 li
582.284 145.568 li
581.034 145.15 li
579.784 144.818 li
577.284 143.983 li
576.117 143.65 li
574.867 143.318 li
573.7 142.983 li
572.534 142.568 li
571.367 142.233 li
570.2 141.983 li
569.117 141.65 li
567.95 141.318 li
566.867 141.068 li
565.784 140.733 li
564.784 140.4 li
563.7 140.068 li
562.7 139.818 li
561.7 139.483 li
559.7 138.983 li
558.7 138.65 li
557.784 138.4 li
556.867 138.068 li
553.2 137.068 li
552.367 136.733 li
549.867 135.983 li
549.117 135.733 li
548.284 135.483 li
544.534 134.233 li
543.867 133.983 li
543.117 133.733 li
542.45 133.568 li
540.45 132.818 li
539.867 132.568 li
539.2 132.4 li
538.617 132.15 li
537.95 131.983 li
536.784 131.65 li
535.617 131.15 li
535.034 130.983 li
534.534 130.818 li
533.95 130.483 li
533.45 130.233 li
532.867 129.983 li
532.367 129.818 li
531.867 129.568 li
531.367 129.4 li
530.867 129.15 li
529.867 128.818 li
529.367 128.483 li
528.95 128.318 li
528.534 128.068 li
528.034 127.9 li
527.2 127.4 li
526.784 127.318 li
526.284 127.068 li
525.95 126.983 li
525.117 126.65 li
524.7 126.4 li
524.367 126.15 li
523.95 125.818 li
523.617 125.568 li
523.2 125.318 li
522.867 124.983 li
522.2 124.483 li
521.867 124.318 li
520.867 123.568 li
520.617 123.233 li
520.284 122.818 li
519.95 122.568 li
519.7 122.233 li
519.45 121.983 li
519.117 121.818 li
518.867 121.568 li
518.617 121.233 li
518.284 121.233 li
518.034 121.068 li
517.784 120.818 li
517.534 120.65 li
517.367 120.4 li
516.617 119.9 li
516.45 119.733 li
516.2 119.568 li
515.95 119.483 li
515.534 119.483 li
515.2 119.15 li
514.95 118.983 li
514.617 118.483 li
514.45 118.318 li
514.284 118.233 li
514.034 118.233 li
513.7 117.9 li
513.534 118.068 li
513.367 117.733 li
513.2 117.65 li
512.95 118.4 li
512.784 118.818 li
512.617 119.568 li
512.45 127.15 li
512.367 139.983 li
512.2 176.65 li
.0639048 0 .996094 0 cmyk
@
859.284 264.817 mo
859.117 264.65 li
858.367 263.233 li
856.867 260.65 li
854.534 257.067 li
851.45 253.233 li
847.867 249.233 li
843.867 245.4 li
839.617 241.9 li
835.2 238.817 li
830.784 235.9 li
826.367 233.233 li
821.95 230.733 li
817.617 228.317 li
809.117 223.817 li
804.95 221.65 li
800.784 219.567 li
796.617 217.567 li
792.534 215.65 li
788.534 213.733 li
784.534 211.9 li
780.617 210.15 li
776.7 208.483 li
772.867 206.817 li
769.117 205.15 li
765.284 203.567 li
757.784 200.567 li
754.034 199.15 li
750.367 197.817 li
746.617 196.4 li
743.034 195.067 li
732.284 191.317 li
728.784 190.067 li
725.367 188.817 li
721.95 187.65 li
711.95 184.15 li
708.784 182.983 li
705.534 181.9 li
702.367 180.817 li
699.284 179.817 li
696.2 178.733 li
693.2 177.65 li
690.2 176.65 li
687.2 175.567 li
684.284 174.567 li
675.784 171.567 li
667.534 168.567 li
664.867 167.65 li
659.7 165.65 li
657.117 164.733 li
654.617 163.733 li
652.117 162.817 li
649.617 161.817 li
647.284 160.9 li
644.867 159.983 li
642.534 159.15 li
640.2 158.233 li
637.867 157.4 li
635.617 156.483 li
629.117 153.983 li
626.95 153.233 li
624.867 152.483 li
622.867 151.733 li
620.784 150.983 li
616.784 149.483 li
614.867 148.733 li
611.034 147.4 li
609.2 146.65 li
605.534 145.318 li
598.534 142.65 li
595.2 141.318 li
593.617 140.733 li
592.034 140.068 li
588.867 138.9 li
587.367 138.233 li
585.867 137.65 li
584.45 137.068 li
582.95 136.483 li
581.534 135.983 li
580.2 135.4 li
578.784 134.9 li
577.534 134.233 li
576.2 133.65 li
574.95 133.15 li
572.45 131.983 li
571.284 131.483 li
570.034 130.9 li
568.867 130.4 li
567.7 129.818 li
565.534 128.818 li
564.45 128.233 li
562.284 127.233 li
559.284 125.733 li
558.284 125.318 li
557.284 124.818 li
556.367 124.4 li
554.534 123.4 li
552.7 122.568 li
551.867 122.068 li
551.034 121.733 li
548.534 120.483 li
547.034 119.65 li
546.2 119.233 li
545.534 118.818 li
544.784 118.483 li
544.034 118.068 li
543.367 117.733 li
542.7 117.318 li
542.034 116.983 li
541.367 116.568 li
540.7 116.233 li
540.034 115.818 li
539.45 115.4 li
538.784 114.983 li
538.2 114.568 li
537.617 114.233 li
536.45 113.4 li
535.867 113.068 li
535.367 112.733 li
534.784 112.4 li
534.284 112.068 li
533.784 111.65 li
533.2 111.318 li
532.784 110.9 li
531.784 110.233 li
531.284 109.983 li
530.867 109.65 li
530.367 109.4 li
529.95 109.15 li
529.534 108.818 li
528.7 108.318 li
527.867 107.65 li
527.534 107.318 li
527.117 107.068 li
526.784 106.733 li
526.367 106.4 li
526.034 106.068 li
525.7 105.818 li
525.284 105.568 li
524.617 105.068 li
524.367 104.733 li
523.367 103.983 li
523.117 103.733 li
522.784 103.568 li
522.534 103.233 li
522.2 102.983 li
520.867 101.65 li
520.7 101.4 li
520.2 100.733 li
519.7 100.233 li
519.534 99.9835 li
519.284 99.7335 li
519.034 99.5675 li
518.2 98.7335 li
518.034 98.4835 li
517.7 98.1505 li
517.45 98.0675 li
517.117 97.7335 li
516.95 97.6505 li
516.784 97.4835 li
516.617 97.4005 li
516.45 97.4005 li
516.284 97.3175 li
515.867 97.3175 li
515.7 97.2335 li
515.534 97.3175 li
515.284 97.3175 li
515.117 97.1505 li
515.034 96.9835 li
514.867 96.9005 li
514.784 96.9005 li
514.7 96.6505 li
514.534 96.6505 li
514.45 96.5675 li
514.367 96.5675 li
514.2 96.4835 li
514.034 96.3175 li
513.95 96.4005 li
513.784 96.4005 li
513.7 96.6505 li
513.617 96.5675 li
513.45 96.4835 li
513.367 96.4835 li
513.284 96.5675 li
513.117 96.5675 li
513.034 96.4005 li
512.95 96.4005 li
512.784 96.0675 li
512.7 96.0675 li
512.7 95.5675 li
512.617 95.3175 li
512.534 94.9835 li
512.534 94.8175 li
512.45 94.9005 li
512.367 94.8175 li
512.284 94.9005 li
512.2 95.7335 li
512.2 103.483 li
.265019 .809232 0 0 cmyk
@
857.784 262.983 mo
857.034 261.733 li
856.284 260.567 li
855.617 259.483 li
855.034 258.567 li
854.534 257.817 li
854.034 256.983 li
853.534 256.233 li
853.117 255.4 li
852.617 254.567 li
852.117 253.65 li
851.117 251.983 li
850.7 251.15 li
850.2 250.233 li
849.7 249.233 li
849.2 248.317 li
848.617 247.4 li
848.117 246.4 li
847.617 245.483 li
847.117 244.483 li
846.534 243.567 li
844.784 240.567 li
844.2 239.65 li
843.617 238.65 li
840.284 233.65 li
839.534 232.65 li
838.867 231.65 li
838.117 230.567 li
837.284 229.567 li
836.534 228.483 li
835.7 227.483 li
834.867 226.4 li
833.95 225.4 li
833.117 224.317 li
832.2 223.233 li
831.2 222.233 li
830.284 221.15 li
829.2 220.067 li
828.2 218.983 li
826.034 216.817 li
822.534 213.567 li
821.284 212.483 li
819.95 211.4 li
818.7 210.317 li
817.367 209.317 li
811.7 204.983 li
807.2 201.733 li
805.617 200.733 li
804.034 199.65 li
799.034 196.4 li
797.284 195.4 li
792.034 192.15 li
790.2 191.067 li
788.45 189.983 li
786.534 188.9 li
784.7 187.817 li
782.784 186.817 li
780.784 185.733 li
778.867 184.65 li
776.867 183.567 li
774.867 182.567 li
770.867 180.4 li
768.784 179.4 li
762.534 176.15 li
760.284 175.067 li
758.117 174.067 li
753.784 171.9 li
751.534 170.817 li
749.367 169.733 li
744.867 167.567 li
742.617 166.4 li
740.367 165.317 li
738.2 164.233 li
735.95 163.15 li
733.617 161.983 li
726.867 158.733 li
724.534 157.65 li
722.284 156.483 li
719.95 155.4 li
717.7 154.318 li
713.034 152.15 li
710.784 150.983 li
706.117 148.818 li
703.7 147.733 li
692.034 142.318 li
689.784 141.233 li
685.117 139.068 li
678.367 135.818 li
673.867 133.818 li
671.7 132.818 li
669.534 131.733 li
667.367 130.733 li
665.2 130.318 li
661.034 128.318 li
658.867 127.318 li
656.784 126.318 li
654.7 125.4 li
652.7 124.483 li
650.617 123.568 li
646.617 121.733 li
644.534 120.818 li
642.617 119.983 li
640.617 119.15 li
638.7 118.318 li
636.784 117.983 li
634.95 117.15 li
633.034 116.818 li
631.2 115.9 li
629.367 114.9 li
627.617 114.4 li
625.784 114.15 li
624.034 113.9 li
622.284 113.233 li
620.617 112.4 li
618.867 111.733 li
617.2 110.983 li
615.534 110.15 li
613.95 109.318 li
612.367 108.568 li
610.784 107.65 li
607.617 105.983 li
604.617 104.318 li
600.117 101.568 li
598.7 101.233 li
597.2 100.318 li
595.784 99.9835 li
594.367 99.2335 li
593.034 98.9835 li
591.617 98.3175 li
590.284 97.9835 li
588.95 97.9005 li
587.617 97.7335 li
586.284 96.9835 li
585.034 96.7335 li
583.784 96.9005 li
582.534 96.2335 li
581.284 95.4835 li
580.117 95.1505 li
578.867 94.4005 li
577.7 93.7335 li
576.617 93.4005 li
575.45 93.8175 li
574.367 94.3175 li
573.2 94.4835 li
572.2 94.9005 li
571.117 94.3175 li
570.034 94.4835 li
569.034 94.9005 li
568.034 96.1505 li
566.95 96.3175 li
566.034 95.9005 li
565.034 97.2335 li
564.034 98.4005 li
563.117 97.9835 li
562.2 98.6505 li
561.284 98.5675 li
560.367 100.233 li
559.45 99.8175 li
558.617 100.568 li
557.784 100.733 li
556.867 100.9 li
556.034 100.983 li
555.2 101.983 li
554.45 102.983 li
553.617 104.318 li
552.867 105.818 li
552.117 107.068 li
551.367 107.733 li
550.617 107.818 li
549.95 108.318 li
549.2 108.9 li
548.534 109.65 li
547.784 110.733 li
547.117 111.818 li
546.45 112.818 li
545.867 113.068 li
545.2 114.4 li
544.617 115.818 li
543.95 115.9 li
543.367 117.233 li
542.784 118.068 li
542.2 118.818 li
541.617 120.65 li
541.034 121.483 li
539.284 127.733 li
538.784 129.068 li
538.284 131.9 li
537.7 133.733 li
537.2 134.4 li
536.7 135.733 li
536.117 136.568 li
535.617 138.15 li
535.117 140.568 li
534.617 140.233 li
534.117 140.733 li
533.617 141.983 li
533.117 143.068 li
532.617 143.318 li
532.117 145.15 li
531.617 147.568 li
531.117 149.568 li
530.534 150.65 li
530.034 152.15 li
529.534 154.65 li
528.951 157.4 li
528.284 159.4 li
527.534 161.983 li
526.617 162.817 li
525.451 166.983 li
523.867 168.567 li
521.617 172.317 li
517.617 176.483 li
.520012 0 .126131 0 cmyk
@
859.2 264.817 mo
859.2 264.733 li
859.117 264.65 li
859.034 264.4 li
858.867 264.067 li
858.617 263.65 li
858.367 263.067 li
857.95 262.4 li
857.534 261.567 li
857.034 260.733 li
856.367 259.817 li
855.7 258.817 li
854.95 257.65 li
854.034 256.483 li
853.2 255.15 li
852.284 253.817 li
851.284 252.317 li
850.2 250.9 li
849.117 249.4 li
846.784 246.4 li
844.284 243.4 li
842.95 241.983 li
841.617 240.483 li
838.7 237.567 li
837.117 236.15 li
835.45 234.817 li
833.784 233.4 li
832.034 232.067 li
830.284 230.65 li
826.617 227.983 li
824.7 226.733 li
820.867 224.067 li
817.034 221.567 li
815.034 220.317 li
812.95 219.067 li
810.867 217.9 li
808.784 216.65 li
806.7 215.483 li
804.617 214.233 li
798.117 210.733 li
795.867 209.65 li
793.7 208.483 li
791.45 207.4 li
789.117 206.233 li
784.45 204.067 li
782.2 203.067 li
779.784 202.067 li
775.117 200.067 li
772.7 199.15 li
770.367 198.15 li
768.034 197.233 li
765.617 196.317 li
760.95 194.483 li
758.534 193.65 li
751.534 190.9 li
749.2 190.067 li
746.95 189.15 li
744.617 188.233 li
742.367 187.4 li
740.117 186.483 li
737.784 185.65 li
724.284 180.15 li
722.117 179.317 li
717.617 177.483 li
715.367 176.65 li
708.617 173.9 li
704.117 172.233 li
701.867 171.317 li
697.367 169.65 li
695.2 168.817 li
690.7 167.15 li
688.534 166.317 li
686.367 165.567 li
684.117 164.733 li
681.95 163.983 li
679.7 163.233 li
675.367 161.733 li
673.284 160.983 li
671.117 160.317 li
668.95 159.567 li
662.7 157.567 li
660.7 156.9 li
658.617 156.233 li
656.534 155.65 li
654.534 154.983 li
652.534 154.4 li
650.45 153.733 li
648.45 153.15 li
646.534 152.483 li
644.534 151.9 li
642.617 151.233 li
640.617 150.65 li
638.7 149.983 li
632.95 148.233 li
627.45 146.483 li
625.617 145.983 li
623.784 145.4 li
622.034 144.818 li
620.284 144.318 li
618.534 143.733 li
615.034 142.733 li
608.367 140.733 li
606.784 140.318 li
600.45 138.318 li
597.45 137.318 li
596.034 136.818 li
594.534 136.318 li
587.45 133.818 li
584.784 132.818 li
583.45 132.233 li
582.117 131.733 li
580.867 131.233 li
579.534 130.733 li
577.034 129.733 li
575.784 129.318 li
573.284 128.318 li
572.117 127.9 li
567.45 125.9 li
565.284 124.9 li
564.2 124.483 li
563.117 123.983 li
562.117 123.483 li
561.034 122.983 li
558.034 121.733 li
557.034 121.233 li
556.034 120.9 li
555.117 120.483 li
554.117 120.068 li
553.2 119.733 li
552.284 119.318 li
550.45 118.65 li
549.617 118.318 li
548.7 117.9 li
544.534 115.818 li
543.784 115.483 li
542.95 115.068 li
542.2 114.65 li
540.7 113.983 li
539.95 113.733 li
538.45 113.068 li
537.117 112.4 li
536.367 112.068 li
535.034 111.233 li
534.367 110.733 li
533.784 110.4 li
532.45 109.568 li
531.284 108.9 li
530.617 108.568 li
530.034 108.318 li
529.45 107.9 li
528.867 107.568 li
528.284 107.15 li
527.784 106.818 li
527.2 106.483 li
526.7 106.15 li
526.117 105.733 li
525.617 105.4 li
525.117 104.9 li
524.534 104.65 li
524.034 104.233 li
523.534 103.733 li
523.034 103.4 li
522.617 102.983 li
522.117 102.65 li
521.617 102.233 li
521.2 101.733 li
520.784 101.318 li
520.367 100.983 li
519.867 100.65 li
519.45 100.233 li
519.117 99.6505 li
518.284 98.6505 li
517.95 98.2335 li
517.534 97.7335 li
517.2 97.3175 li
516.867 97.0675 li
516.534 96.5675 li
516.2 95.9835 li
515.784 95.6505 li
515.45 95.0675 li
515.117 94.8175 li
514.867 94.4835 li
514.534 93.9835 li
514.2 93.6505 li
513.867 93.1505 li
513.617 93.1505 li
513.284 92.5675 li
513.034 93.5675 li
512.7 99.4005 li
512.45 120.4 li
512.284 171.983 li
.627314 0 1 0 cmyk
@
859.284 264.817 mo
849.95 263.567 li
843.117 260.983 li
835.534 258.65 li
827.867 256.233 li
820.45 253.9 li
813.284 251.483 li
806.534 249.067 li
800.034 246.567 li
793.867 244.4 li
787.95 242.4 li
782.367 240.4 li
777.034 238.4 li
771.867 236.483 li
766.867 234.483 li
762.034 232.65 li
757.45 230.733 li
752.95 228.817 li
748.7 226.983 li
744.617 225.317 li
740.7 223.65 li
736.784 222.067 li
732.95 220.4 li
729.284 218.733 li
725.617 217.317 li
722.034 215.817 li
718.7 214.483 li
715.367 213.233 li
712.117 211.983 li
708.95 210.9 li
705.867 209.483 li
702.867 208.233 li
699.95 207.067 li
694.284 204.567 li
691.534 203.4 li
688.867 202.15 li
686.284 200.817 li
683.7 199.4 li
681.2 198.15 li
678.7 196.817 li
676.284 195.567 li
671.617 192.9 li
669.367 191.817 li
667.2 190.817 li
664.95 189.817 li
662.784 188.9 li
660.617 188.067 li
658.617 187.067 li
656.534 186.15 li
654.534 185.15 li
652.617 183.983 li
650.7 183.15 li
648.867 182.233 li
646.95 181.4 li
645.117 180.65 li
643.367 179.65 li
641.617 178.817 li
638.117 176.983 li
636.45 176.15 li
634.784 175.4 li
633.2 174.567 li
631.534 173.817 li
629.95 173.067 li
628.284 172.4 li
626.784 171.65 li
625.2 170.817 li
623.7 170.15 li
622.117 169.483 li
620.617 168.817 li
619.2 168.15 li
617.7 167.567 li
616.2 167.067 li
614.784 166.483 li
613.367 165.983 li
612.034 165.483 li
610.617 164.9 li
607.95 163.9 li
606.617 163.317 li
605.367 162.733 li
604.034 162.317 li
602.784 161.733 li
601.534 161.233 li
600.367 160.567 li
599.2 159.983 li
598.034 159.233 li
596.867 158.65 li
595.784 158.067 li
594.617 157.483 li
593.534 156.733 li
592.45 156.15 li
591.45 155.483 li
590.367 154.983 li
588.367 153.65 li
587.367 153.15 li
586.367 152.4 li
585.367 151.818 li
584.367 151.318 li
583.45 150.9 li
582.45 150.483 li
581.534 150.068 li
580.617 149.4 li
578.784 148.568 li
577.867 148.233 li
577.034 147.9 li
576.117 147.568 li
575.284 147.15 li
574.45 146.818 li
571.95 146.068 li
570.284 145.733 li
569.534 145.483 li
568.7 145.318 li
567.95 145.068 li
567.117 144.818 li
566.367 144.65 li
565.7 144.318 li
564.867 144.318 li
564.2 144.15 li
563.45 144.068 li
562.784 143.9 li
562.034 143.733 li
561.367 143.068 li
560.7 142.9 li
559.95 142.733 li
559.367 142.483 li
558.7 142.15 li
558.034 141.4 li
557.45 140.9 li
556.784 140.483 li
556.2 139.983 li
555.534 139.568 li
554.95 139.233 li
552.034 137.983 li
550.867 137.65 li
550.367 137.4 li
549.2 137.068 li
548.7 137.068 li
548.117 136.983 li
547.117 136.818 li
546.617 136.733 li
546.117 136.568 li
545.117 136.4 li
543.617 135.9 li
543.117 135.818 li
542.7 135.65 li
542.2 135.568 li
541.7 135.4 li
541.284 135.233 li
540.784 134.9 li
540.284 134.4 li
539.784 134.233 li
539.367 134.068 li
538.95 133.983 li
538.45 133.9 li
538.034 133.818 li
537.617 133.65 li
537.2 133.568 li
536.784 133.483 li
536.45 133.4 li
536.034 133.233 li
535.617 133.15 li
535.284 132.9 li
534.867 132.818 li
534.534 132.65 li
533.701 132.65 li
533.367 132.483 li
532.951 132.568 li
532.617 132.4 li
532.284 132.4 li
531.867 132.233 li
531.534 132.15 li
531.2 132.068 li
530.784 132.068 li
530.45 131.983 li
530.117 131.983 li
529.7 131.9 li
529.367 131.818 li
529.034 131.818 li
528.7 131.733 li
528.284 131.733 li
527.95 131.65 li
527.617 131.65 li
527.284 131.733 li
526.95 131.65 li
526.617 131.568 li
526.284 131.568 li
525.95 131.318 li
525.617 131.318 li
525.367 131.4 li
525.034 131.233 li
524.7 131.233 li
524.367 131.15 li
523.45 131.15 li
523.117 131.068 li
522.867 131.068 li
522.534 130.983 li
522.284 130.9 li
521.95 130.983 li
521.7 131.068 li
521.45 131.15 li
521.117 131.068 li
520.867 131.15 li
520.617 131.15 li
520.284 131.233 li
520.034 131.483 li
519.784 131.4 li
519.45 131.233 li
519.2 131.233 li
518.95 130.983 li
518.617 130.9 li
518.367 130.818 li
518.117 130.318 li
517.784 129.983 li
517.534 129.568 li
517.284 129.483 li
517.034 128.818 li
516.7 128.483 li
516.45 128.4 li
516.117 128.4 li
515.867 128.483 li
515.534 128.4 li
515.284 128.233 li
515.034 127.733 li
514.7 127.483 li
514.45 126.818 li
514.034 128.068 li
513.784 128.15 li
513.534 129.318 li
513.284 130.568 li
513.117 133.483 li
512.867 134.568 li
512.7 140.568 li
512.534 151.068 li
512.45 159.233 li
.895628 .7673 0 0 cmyk
@
859.284 264.817 mo
859.2 264.817 li
858.784 263.983 li
858.45 263.483 li
858.117 262.9 li
857.7 262.233 li
857.284 261.483 li
856.784 260.733 li
856.2 259.817 li
855.617 258.817 li
854.95 257.733 li
854.2 256.65 li
853.367 255.483 li
852.534 254.233 li
851.534 252.983 li
850.534 251.65 li
849.45 250.317 li
848.284 248.9 li
847.034 247.4 li
845.617 245.983 li
844.2 244.483 li
841.034 241.317 li
839.284 239.733 li
837.45 238.15 li
835.617 236.483 li
833.7 234.733 li
829.534 231.233 li
827.45 229.4 li
825.284 227.483 li
820.784 223.65 li
818.45 221.733 li
816.034 219.817 li
813.534 217.817 li
808.367 213.817 li
803.034 209.817 li
800.284 207.733 li
797.534 205.733 li
794.7 203.65 li
791.784 201.567 li
788.784 199.567 li
782.784 195.4 li
776.617 191.233 li
773.45 189.067 li
763.95 182.817 li
760.7 180.817 li
757.45 178.733 li
754.117 176.733 li
750.784 174.817 li
747.45 172.817 li
744.034 170.9 li
740.7 168.9 li
737.284 167.067 li
733.867 165.15 li
727.034 161.483 li
723.617 159.567 li
720.284 157.817 li
716.867 155.983 li
713.534 154.15 li
710.2 152.4 li
706.867 150.568 li
703.534 148.9 li
700.2 147.15 li
696.95 145.483 li
693.7 143.733 li
690.534 142.15 li
687.284 140.483 li
684.117 138.983 li
681.034 137.4 li
674.867 134.4 li
671.784 132.983 li
665.784 129.983 li
654.117 124.65 li
648.45 121.983 li
645.7 120.733 li
642.867 119.483 li
640.2 118.318 li
637.45 117.15 li
634.784 115.983 li
632.117 114.983 li
629.534 113.983 li
626.867 112.983 li
624.284 112.068 li
619.284 110.233 li
614.45 108.568 li
612.117 107.818 li
609.784 107.15 li
605.284 105.818 li
603.034 105.233 li
600.867 104.568 li
598.784 104.068 li
596.617 103.483 li
592.617 102.483 li
590.617 102.068 li
588.7 101.568 li
584.867 100.733 li
581.2 100.068 li
579.45 99.7335 li
577.784 99.4005 li
576.034 99.1505 li
574.367 98.9835 li
572.7 98.8175 li
571.117 98.7335 li
569.534 98.7335 li
567.95 98.6505 li
560.784 98.6505 li
559.45 98.7335 li
558.117 98.8175 li
556.867 98.7335 li
552.034 98.7335 li
550.867 98.8175 li
549.784 98.9005 li
548.7 98.9835 li
547.7 99.1505 li
545.7 99.1505 li
544.7 99.2335 li
541.117 99.2335 li
540.284 99.1505 li
539.534 99.0675 li
538.7 99.0675 li
537.95 98.9835 li
537.2 99.0675 li
535.784 99.0675 li
535.117 99.1505 li
534.45 99.1505 li
533.784 99.3175 li
533.2 99.4835 li
532.534 99.5675 li
531.95 99.7335 li
531.367 99.8175 li
530.784 99.9835 li
529.617 100.15 li
528.617 100.15 li
528.117 100.233 li
527.117 100.233 li
526.7 100.318 li
524.534 100.318 li
524.117 100.4 li
523.784 100.4 li
523.367 100.483 li
523.034 100.483 li
522.7 100.4 li
522.367 100.483 li
521.95 100.483 li
521.617 100.65 li
521.367 100.65 li
521.034 100.733 li
520.7 100.733 li
520.45 100.65 li
519.617 100.65 li
519.284 100.818 li
518.784 100.818 li
518.534 100.9 li
517.784 100.9 li
517.534 100.983 li
517.367 101.15 li
517.117 101.15 li
516.867 101.233 li
516.617 101.4 li
516.45 101.65 li
516.2 101.983 li
515.7 102.983 li
515.367 103.818 li
515.117 104.318 li
514.95 104.818 li
514.617 105.483 li
514.45 105.568 li
514.367 105.818 li
514.2 105.983 li
514.034 106.068 li
513.95 106.318 li
513.784 106.568 li
513.7 106.9 li
513.534 107.068 li
513.367 107.4 li
513.284 107.818 li
513.2 108.068 li
513.117 107.983 li
513.034 108.4 li
512.95 108.483 li
512.867 108.733 li
512.784 108.733 li
512.7 108.65 li
512.7 108.483 li
512.617 108.483 li
512.534 108.733 li
512.534 108.568 li
512.45 108.483 li
512.45 108.733 li
512.45 108.233 li
512.367 108.15 li
512.367 107.9 li
512.283 107.9 li
512.283 108.233 li
512.2 108.4 li
512.2 109.568 li
512.117 110.318 li
512.117 188.733 li
0 .990631 1 .000396735 cmyk
@
859.284 264.817 mo
859.117 264.733 li
858.7 263.983 li
857.95 262.317 li
856.867 260.15 li
855.534 257.65 li
854.034 254.9 li
852.45 252.067 li
850.7 249.15 li
848.95 246.317 li
847.117 243.4 li
845.2 240.567 li
843.2 237.817 li
841.034 234.983 li
838.867 232.233 li
836.617 229.483 li
834.284 226.9 li
831.867 224.233 li
829.534 221.65 li
827.117 219.067 li
824.7 216.4 li
817.2 208.9 li
814.7 206.483 li
812.117 204.067 li
809.617 201.65 li
807.034 199.233 li
804.45 196.983 li
801.867 194.65 li
796.534 190.317 li
793.867 188.233 li
785.867 182.233 li
780.534 178.4 li
777.784 176.567 li
772.45 172.9 li
769.7 171.15 li
767.034 169.4 li
764.284 167.733 li
758.95 164.4 li
756.284 162.817 li
753.534 161.233 li
750.867 159.733 li
745.7 156.733 li
743.034 155.233 li
740.534 153.733 li
737.95 152.318 li
735.45 150.818 li
732.867 149.4 li
727.867 146.568 li
725.367 145.233 li
722.867 143.818 li
720.367 142.483 li
717.95 141.15 li
713.117 138.65 li
706.117 134.9 li
696.784 130.233 li
694.534 129.15 li
692.284 127.983 li
689.95 126.983 li
687.7 125.9 li
685.534 124.9 li
683.284 123.9 li
678.95 121.9 li
676.784 120.983 li
674.617 119.983 li
670.45 118.15 li
668.367 117.318 li
666.367 116.4 li
664.284 115.483 li
656.284 112.15 li
654.367 111.318 li
652.367 110.483 li
650.534 109.733 li
648.617 108.9 li
646.7 108.15 li
643.034 106.483 li
641.2 105.733 li
639.367 104.9 li
637.617 104.15 li
635.784 103.4 li
630.534 101.15 li
628.784 100.483 li
627.117 99.8175 li
625.367 99.0675 li
622.034 97.7335 li
620.45 97.0675 li
618.784 96.4005 li
615.617 95.0675 li
613.95 94.4835 li
612.45 93.8175 li
610.867 93.2335 li
609.284 92.7335 li
607.784 92.1505 li
606.284 91.6505 li
604.867 91.0675 li
603.367 90.4835 li
602.034 89.9005 li
599.2 88.7335 li
597.867 88.1505 li
596.534 87.6505 li
595.2 87.0675 li
593.867 86.5675 li
592.617 85.9835 li
591.284 85.4835 li
588.784 84.4835 li
587.534 83.9005 li
586.284 83.4005 li
585.117 82.9005 li
583.867 82.4005 li
581.534 81.4005 li
579.2 80.5675 li
578.117 80.1505 li
577.034 79.8175 li
575.867 79.4005 li
574.784 78.9835 li
573.7 78.6505 li
572.7 78.2335 li
571.617 77.9005 li
570.534 77.4835 li
566.534 76.1505 li
565.617 75.7335 li
564.617 75.4835 li
563.7 75.1505 li
562.7 74.8175 li
560.867 74.1505 li
560.034 73.7335 li
559.117 73.4835 li
558.2 73.1505 li
555.7 72.1505 li
554.784 71.9005 li
554.034 71.5675 li
553.2 71.3175 li
552.367 70.9835 li
551.617 70.7335 li
550.784 70.4835 li
550.034 70.3175 li
549.2 70.0675 li
548.45 69.9005 li
547.7 69.6505 li
546.95 69.4835 li
546.2 69.2335 li
545.534 68.9835 li
544.784 68.7335 li
543.45 68.2335 li
542.7 68.0675 li
541.367 67.5675 li
540.784 67.4005 li
540.117 67.1505 li
539.45 66.9835 li
538.867 66.8175 li
538.2 66.5675 li
537.617 66.3175 li
537.034 66.1505 li
536.45 65.9005 li
535.284 65.5674 li
534.7 65.3174 li
534.2 65.2335 li
533.617 64.9835 li
533.117 64.7335 li
532.534 64.6505 li
532.034 64.4835 li
531.534 64.2335 li
530.95 64.0674 li
529.45 63.8174 li
529.034 63.6505 li
528.534 63.4835 li
528.034 63.3174 li
527.534 63.2335 li
527.117 63.1505 li
526.617 63.0674 li
526.2 62.9835 li
525.367 62.6505 li
524.534 62.1505 li
523.7 61.8174 li
523.284 61.7335 li
522.867 61.5674 li
522.534 61.4005 li
522.117 61.3174 li
521.7 61.2335 li
521.367 61.1505 li
519.617 61.1505 li
519.284 61.0674 li
518.95 61.0674 li
518.284 60.9005 li
518.034 60.8174 li
517.7 60.6505 li
516.2 60.6505 li
515.95 60.5674 li
515.7 60.4835 li
515.45 60.4835 li
515.117 60.3174 li
514.867 60.3174 li
514.617 60.0674 li
514.367 60.0674 li
513.867 59.9005 li
513.617 59.9835 li
513.45 59.6505 li
513.2 59.4005 li
512.95 58.9005 li
512.784 58.4005 li
512.534 58.4835 li
512.367 58.3174 li
512.2 75.0675 li
.653162 .154971 0 0 cmyk
@
859.284 264.817 mo
859.2 264.65 li
858.784 263.317 li
858.117 261.317 li
857.284 258.983 li
856.284 256.483 li
855.2 253.65 li
854.034 250.817 li
852.784 247.9 li
851.45 244.9 li
850.117 241.983 li
848.7 239.067 li
847.117 236.15 li
845.617 233.15 li
844.117 230.233 li
842.534 227.233 li
840.95 224.317 li
839.367 221.483 li
837.7 218.567 li
836.117 215.65 li
832.617 209.983 li
830.867 207.233 li
829.034 204.483 li
823.534 196.483 li
821.617 193.817 li
817.784 188.65 li
815.867 186.15 li
813.867 183.65 li
811.867 181.233 li
807.7 176.4 li
805.534 174.067 li
803.367 171.817 li
801.284 169.567 li
799.034 167.317 li
796.867 165.067 li
792.534 160.733 li
790.2 158.65 li
788.034 156.483 li
785.784 154.483 li
783.45 152.4 li
778.95 148.4 li
774.284 144.568 li
771.95 142.733 li
769.7 140.9 li
767.367 139.15 li
765.117 137.318 li
762.784 135.65 li
760.534 133.9 li
758.2 132.233 li
755.95 130.568 li
753.617 128.9 li
751.367 127.233 li
749.117 125.65 li
746.867 123.983 li
740.117 119.233 li
731.117 113.233 li
728.867 111.818 li
726.7 110.4 li
724.45 109.068 li
722.284 107.65 li
720.034 106.233 li
709.2 99.5675 li
707.117 98.3175 li
704.95 96.9835 li
702.784 95.8175 li
700.617 94.5675 li
698.534 93.4005 li
696.367 92.1505 li
694.284 90.9835 li
692.117 89.8175 li
690.034 88.6505 li
687.95 87.5675 li
685.95 86.4005 li
683.867 85.2335 li
679.867 83.0675 li
677.867 81.9005 li
675.867 80.8175 li
673.95 79.7335 li
671.95 78.6505 li
670.034 77.5675 li
668.034 76.5675 li
666.117 75.4835 li
662.284 73.4835 li
660.45 72.4835 li
658.534 71.5675 li
656.7 70.6505 li
654.784 69.7335 li
652.95 68.8175 li
651.034 67.9835 li
649.2 67.0675 li
647.367 66.2335 li
645.617 65.4005 li
643.784 64.5674 li
641.95 63.8174 li
640.2 62.9835 li
638.45 62.2335 li
636.617 61.4835 li
633.117 59.9835 li
631.45 59.2335 li
629.7 58.5674 li
628.034 57.8174 li
626.367 57.1505 li
624.7 56.4005 li
621.367 55.0674 li
619.784 54.4835 li
618.117 53.8174 li
614.95 52.4835 li
613.45 51.9005 li
611.867 51.3174 li
608.867 50.3174 li
607.284 49.8174 li
605.867 49.2335 li
602.867 48.2335 li
601.45 47.6505 li
595.784 45.6505 li
594.45 45.2335 li
593.034 44.7335 li
590.367 43.9005 li
589.034 43.4005 li
587.7 42.9835 li
586.45 42.5674 li
585.117 42.2335 li
583.867 41.8174 li
582.617 41.4835 li
581.367 41.2335 li
580.117 40.9005 li
578.867 40.6505 li
577.7 40.4005 li
576.45 40.1505 li
575.284 39.9005 li
574.034 39.6505 li
572.867 39.4835 li
571.784 39.2335 li
569.45 38.7335 li
568.367 38.4835 li
566.2 37.9835 li
565.117 37.6505 li
562.95 37.1505 li
561.95 36.9005 li
560.867 36.6505 li
559.867 36.4835 li
558.867 36.2335 li
557.95 35.9005 li
556.95 35.5674 li
556.034 35.4005 li
553.284 34.6505 li
552.367 34.4835 li
551.45 34.2335 li
550.617 34.1505 li
549.7 33.9835 li
548.867 33.8174 li
548.034 33.6505 li
547.2 33.4835 li
544.7 32.7335 li
543.867 32.5674 li
542.367 32.0674 li
541.617 31.9005 li
539.367 31.1505 li
538.7 30.9005 li
537.95 30.5674 li
537.284 30.4005 li
535.284 29.6505 li
534.7 29.4835 li
534.034 29.3174 li
533.45 29.0674 li
532.784 28.9005 li
532.2 28.7335 li
531.617 28.5674 li
531.034 28.4005 li
530.45 28.2335 li
529.867 27.9835 li
528.7 27.8174 li
528.2 27.7335 li
527.7 27.6505 li
527.117 27.5674 li
526.617 27.4835 li
526.117 27.4005 li
525.617 27.2335 li
525.117 27.1505 li
524.617 27.0674 li
524.2 26.9005 li
523.7 26.8174 li
523.2 26.7335 li
522.784 26.6505 li
522.284 26.5674 li
521.034 26.3174 li
520.617 26.3174 li
520.2 26.2335 li
519.784 26.1505 li
519.367 26.0674 li
519.034 26.1505 li
518.617 26.0674 li
518.284 25.9005 li
517.867 25.8174 li
517.534 25.8174 li
517.117 25.9005 li
516.784 25.9835 li
516.117 26.1505 li
515.784 26.1505 li
515.45 26.3174 li
515.2 26.3174 li
514.867 26.4005 li
514.534 26.5674 li
514.284 26.8174 li
513.95 26.8174 li
513.7 27.0674 li
513.45 26.9835 li
513.2 27.2335 li
512.95 27.2335 li
512.7 27.5674 li
512.45 27.7335 li
512.2 37.6505 li
0 0 0 1 cmyk
@
grestore
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if

1 0 1 <> FLEAAA+Helvetica AddT42Char 
1 3864 20 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>FLEAAA+Helvetica AddT42Char 
1 4408 22 <000200b40000057805bd0009002700944012070d49014805590158056905
641478050816bb01300119001b011c40422321202660127112751403121e
1f141c1503211e161404261224251e0009091b071e0b02261c1b08202515
1f251603310f691b1a29082625270a192829d6219566182b2b4ef43c4dfd
3c4e10f64df4edd4edd4ed003f3c3c3ffd12392f3cfd3c39111739011112
39391239395d1112392b3130015d01323635342726232111032132171615
1406071e011f011617161715232e012f012627262321112303478ca3723d
66fe1ac702a8a86dcf6d6256570507030b122ef40a0c040c0764397afe3b
c7031c70929d391efe0a02a1315efd84a833237280c55429461421133c56
f590311bfd8a>FLEAAA+Helvetica AddT42Char 
1 5592 26 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>FLEAAA+Helvetica AddT42Char 
1 5996 27 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>FLEAAA+Helvetica AddT42Char 
1 6256 28 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>FLEAAA+Helvetica AddT42Char 
1 6660 29 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>FLEAAA+Helvetica AddT42Char 
1 6752 30 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>FLEAAA+Helvetica AddT42Char 
1 6820 31 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>FLEAAA+Helvetica AddT42Char 
1 7004 32 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>FLEAAA+Helvetica AddT42Char 
1 7244 33 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>FLEAAA+Helvetica AddT42Char 
1 7384 34 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/space 1 def
/P 20 def
/R 22 def
/a 26 def
/c 27 def
/e 28 def
/i 29 def
/l 30 def
/n 31 def
/o 32 def
/r 33 def
/s 34 def
end
FLEAAA+Helvetica /Encoding get
dup 32 /space put
dup 80 /P put
dup 82 /R put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 22{/.notdef}rp 
/P /.notdef /R 14{/.notdef}rp /a /.notdef /c /.notdef 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
671.7 308.067 mo
(Recall)
[7.22003 5.56 5 5.56 2.21997 0 ]xsh
YJZMBV+Helvetica*1 [0 -10 -10 0 0 0 ]msf
482.95 167.734 mo
(Precision)
[-6.67007 -3.32993 -5.56 -5 -2.22 -5 -2.22 -5.56 0 ]ysh
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
510.7 287.65 mo
( )sh
857.951 13.6505 mo
( )sh
517.034 178.317 mo
594.451 178.317 li
594.451 279.15 li
517.034 279.15 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
517.034 279.15 mo
517.034 178.317 li
594.45 178.317 li
594.45 279.15 li
517.034 279.15 li
@
517.034 279.15 mo
594.45 279.15 li
517.034 178.317 mo
594.45 178.317 li
517.034 279.15 mo
517.034 178.317 li
594.45 279.15 mo
594.45 178.317 li
517.034 279.15 mo
594.45 279.15 li
517.034 279.15 mo
517.034 178.317 li
517.034 279.15 mo
594.45 279.15 li
517.034 178.317 mo
594.45 178.317 li
517.034 279.15 mo
517.034 178.317 li
594.45 279.15 mo
594.45 178.317 li
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 4684 23 <00020060ffd504f605e5002f003000fe405e290f27232626360e35214726
62267a0e7724096b08180e172502590e680eaa22030a0e3a2224220a0304
1c1886142f2f2b1c3a1403043a2b0930020a0e081124221f283030111825
17490825281a321f25114900252f193132a0216a89182b2b4ef44dedf4ed
4e10f64dedf4ed12392f1211393912113939003f3fed3fed12392f10ed11
1217392efd335d7131304379404d282e111f0008022602262d2506251a26
032c002b002d2e032c002b00052a082b011d131f2b001b15182b01191801
2d042b0009270b2b01250b012e042b000729042b001e121c2b0119161c2b
01002b2b2b2b10102b2b01103c2b2b2b2b103c2b2b2b2b2b2b818181005d
0116171633323736353427262f0126272635342433320415232627262322
06151417161f01161716151404232027263701011e073463fa705cb24b4c
a2c7c3518c0112fbe70143bb0f315bdab09a5a3bd0ce95518cfe9debfeee
9b9b03024d01da7d4e92203ea0783332252d2c355cb7c6fedff5763f7394
626c3220302f223b67c4f4d28c8bee040b00>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/S 23 def
end
FLEAAA+Helvetica /Encoding get
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 22{/.notdef}rp 
/P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c 
/.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
555.367 189.484 mo
(SR)
[6.67004 0 ]xsh
2 lw
522.867 185.9 mo
552.367 185.9 li
.0639048 0 .996094 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 2844 14 <000100af000004aa05bd000900394018071e040409031e0100020908066b
011a0b03082500190a0bb80157b32195dc182b2b4ef44dfd3c4e10f64de4
003f3f3ced12392ffd313013211521112115211123af03fbfccc02d1fd2f
c705bdb4fe42affd6400>FLEAAA+Helvetica AddT42Char 
1 4036 21 <00020050ff8b05e805e50015002700e4406b69036a1579038513961bc71b
064a1c591b5a1c64157515781cb719c81a083808181b021b191901151a1b
1a1a1a0001190100191e121a1a00191a191a1b18150206240001111e1500
02050d191a1b18042127213a0d03273a0105091e31111a29243109192829
d8216a66182b2b4ef44ded4e10f64ded003f33ed3fed1112173911123939
39011112393912173908872e2b087d10c50187102b3c2b3c87102bc42b3c
313018437940281f2606100b260f250725220c243200200e1e3201260624
3200230a2132011f102132012508273200002b2b2b012b2b2b2b2b2b8181
015d005d2507270e01232027261110371221201716111407060704363727
371736123510002322001110002105dc64e352bf71feaac2ab94be017401
85bb9223357efe576c28a164c05b41fef1ebeefeea010b01020479ad2d36
e0da0148012ad40110fac3fed08e83c87e1a11197e7b9568010276010301
3cfed1fec5fef7fec6000000>FLEAAA+Helvetica AddT42Char 
1 5092 24 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/F 14 def
/Q 21 def
/T 24 def
end
FLEAAA+Helvetica /Encoding get
dup 70 /F put
dup 81 /Q put
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 12{/.notdef}rp 
/F 9{/.notdef}rp /P /Q /R /S /T 12{/.notdef}rp 
/a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
555.367 201.65 mo
(PQFT)
[6.67004 7.78003 6.10992 0 ]xsh
522.867 198.15 mo
552.367 198.15 li
.265019 .809232 0 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 2648 13 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>FLEAAA+Helvetica AddT42Char 
1 3440 18 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/D 13 def
/N 18 def
end
FLEAAA+Helvetica /Encoding get
dup 68 /D put
dup 78 /N put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F 7{/.notdef}rp /N /.notdef /P /Q 
/R /S /T 12{/.notdef}rp /a /.notdef /c /.notdef 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
555.367 213.9 mo
(PFDN)
[6.67004 6.10992 7.22003 0 ]xsh
522.867 210.317 mo
552.367 210.317 li
.520012 0 .126131 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 2944 15 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>FLEAAA+Helvetica AddT42Char 
1 3392 17 <000100c90000019205bd00030017b8002b2bba00010000002e2b00b80000
2fb800022f303113331123c9c9c905bdfa43>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/G 15 def
/I 17 def
end
FLEAAA+Helvetica /Encoding get
dup 71 /G put
dup 73 /I put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /.notdef /I 4{/.notdef}rp /N 
/.notdef /P /Q /R /S /T 12{/.notdef}rp /a 
/.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o 2{/.notdef}rp /r /s 140{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
555.367 226.15 mo
(SIG)
[6.67004 2.78003 0 ]xsh
522.867 222.567 mo
552.367 222.567 li
.627314 0 1 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
555.367 238.4 mo
(FT)
[6.10992 0 ]xsh
522.867 234.817 mo
552.367 234.817 li
.895628 .7673 0 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 5184 25 <000100250000077105bd000c0156409508090178077909780b8701860405
47014b02440348044d08420a8908870ac802c703c707c80b0c580b670768
0b890286038607890b9902960395079a0ba902a603a507aa0b0f0808070a
080b1908160a5707060b08040a023e284528052506060700250c0c0b0904
01030b020305060c050002080a0b0307080e17171a0705068640080304f4
0a0209f4800b0001860c190d8e5e182b194e10f4184dfd39391afd3939fd
39391afd3939194e456544e618003f173c3f173c12173901874d2eed872e
ed4b5279b4090a09080ab8019a400f120101020405030406070908090a08
b8019a400a12040403010102000c0b877d1008c5872e18052b087d10c587
0810c5872e18052b087d10c54b5179b301010002b8019ab6090a09040405
03b8019a400f090908040503040607010001020c0b870810c0870810c087
10057afd1808c4188710057afd7d08c4313001725d5d71005d7213090133
090133012309012301fd0115014cd8014c0115dafe7ed1feadfeabd1fe80
05bdfb5504abfb5504abfa4304c2fb3e05bd>FLEAAA+Helvetica AddT42Char 
1 7832 35 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>FLEAAA+Helvetica AddT42Char 
1 8172 37 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/W 25 def
/t 35 def
/v 37 def
end
FLEAAA+Helvetica /Encoding get
dup 87 /W put
dup 116 /t put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /.notdef /I 4{/.notdef}rp /N 
/.notdef /P /Q /R /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /.notdef /v 137{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
555.367 250.65 mo
(Wavelet)
[9.44 5.56 5 5.56 2.21997 5.56 0 ]xsh
522.867 247.067 mo
552.367 247.067 li
0 .990631 1 .000396735 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 3280 16 <000100a10000052f05bd000b003f402108091e0302020401020a07080407
2506051a0d010a250b00190c0c0da0217670182b2b104ef43c4dfd3c4e10
f63c4dfd3c003f3c3f3c392f3cfd3c3130133311211133112311211123a1
c902fcc9c9fd04c905bdfda1025ffa4302affd510000>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/H 16 def
end
FLEAAA+Helvetica /Encoding get
dup 72 /H put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /H /I 4{/.notdef}rp /N 
/.notdef /P /Q /R /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /.notdef /v 137{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
555.367 262.9 mo
(HFT)
[7.21997 6.10992 0 ]xsh
522.867 259.233 mo
552.367 259.233 li
.653162 .154971 0 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: FLEAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FLEAAA+Helvetica gcheck setglobal} if
1 3612 19 <00030050ffd505e805e5000f001b001c008a402c8705c700c701c302c808
c90a064308153a0f031b3a07091c021c1c0b1231031a1e18310b191d1ed8
216a66182b2b4ef44ded4e10f64ded12392f003f3fed3fed313043794032
001a0d26012509250526160e18320014001232011a081832001006123201
170c1532011302153201190a1b320011041b32002b2b2b2b012b2b2b2b2b
2b2b2b81005d001716111007022120272611103712210012351000232200
1114122103049bbb92a7c4fe95feadc2ad94be0174011bebfef1ebe4fee0
f701150e05e5fac3fed0feb7daff00e0d8014a012ad40110faa20179f501
03013cfec7fecff4feb1055e>FLEAAA+Helvetica AddT42Char 
1 7992 36 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>FLEAAA+Helvetica AddT42Char 
FLEAAA+Helvetica /CharStrings get begin
/O 19 def
/u 36 def
end
FLEAAA+Helvetica /Encoding get
dup 79 /O put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBV+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 10{/.notdef}rp 
/D /.notdef /F /G /H /I 4{/.notdef}rp /N 
/O /P /Q /R /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /u /v 137{/.notdef}rp]
YJZMBV+Helvetica nf
YJZMBV+Helvetica*1 [10 0 0 -10 0 0 ]msf
555.367 275.067 mo
(Ours)
[7.77997 5.56 3.32996 0 ]xsh
522.867 271.483 mo
552.367 271.483 li
@
gsave
453.927 321.9 mo
901.867 321.9 li
901.867 658.067 li
453.927 658.067 li
cp
clp
gsave
453.867 658.9 mo
901.867 658.9 li
901.867 321.9 li
453.867 321.9 li
cp
clp
453.867 658.15 mo
901.95 658.15 li
901.95 321.9 li
453.867 321.9 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
grestore
grestore
512.117 347.15 mo
859.284 347.15 li
859.284 621.067 li
512.117 621.067 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
.5 lw
512.117 621.067 mo
512.117 347.15 li
859.284 347.15 li
859.284 621.067 li
512.117 621.067 li
@
.333 lw
[.5 4 ] 0 dsh
512.117 621.067 mo
859.284 621.067 li
512.117 581.9 mo
859.284 581.9 li
512.117 542.733 mo
859.284 542.733 li
512.117 503.65 mo
859.284 503.65 li
512.117 464.483 mo
859.284 464.483 li
512.117 425.4 mo
859.284 425.4 li
512.117 386.233 mo
859.284 386.233 li
512.117 347.15 mo
859.284 347.15 li
1 /0 /CSD get_res sepcs
1 sep
@
.5 lw
[] 0 dsh
512.117 621.067 mo
859.284 621.067 li
512.117 347.15 mo
859.284 347.15 li
512.117 621.067 mo
512.117 347.15 li
859.284 621.067 mo
859.284 347.15 li
512.117 621.067 mo
859.284 621.067 li
512.117 621.067 mo
512.117 347.15 li
550.617 621.067 mo
550.617 617.567 li
550.617 347.15 mo
550.617 350.567 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /IRRAAA+Helvetica
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000036c6670
676d000000000000042800000a1d676c796619113cdf0000139800001f80
686561640000000000000e4800000036686865610000000000000e800000
0024686d74780000000000000ea4000000946c6f636185988caa00000f38
0000004c6d6178700000000000000f84000000206e616d655c6d6d870000
0fa400000024707265700000000000000fc8000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0401bb000598a8a20b003265358
2321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db8005c2c4b535845441b2121592d00000000010000
00000000299acaab5f0f3cf500110800000000005f4d8f0000000000cff2
eef7f865fc270b9108f9000000090001000000000000000100000629fe29
00000c01f865fced0b910001000000000000000000000000000000250512
004202390000023900af04730040047300c4047300400473003104730034
047300420473004d0473004b05c700a504e300af0639006305c700a10239
00c905c7009c06390050055600af0639005005c700b40556006004e30021
078d0025047300520400003b0473004801c7008401c7008906aa00840473
00840473003b02aa00890400004202390017047300800400000b00000036
0036005600c400ea0176022202700304039a03e404460478052005580570
05c60644069a075407de08aa08d809a40a6e0af00bba0be80c0a0c860ce2
0d5a0da00e800ed00f2a0fc000010000002500920009006b000700020010
0010005d000007e80a1d0004000100000001001200010000000000060010
00004a525746494e2b48656c7665746963610000b800532bb800492bb800
3f2bb800352bb8002b2b4118008001a6009001a600a001a600030069018b
0079018b0089018b0099018b00040089018b0099018b00a9018b00b9018b
b2040840ba0179001a014a400b041f5414191f180a0b1fd2b80106b49e1f
d918e3bb0119000d00e10119b20d0009410a01a0019f0064001f01a50025
017a00480028019ab3296c1f60410a01a9007001a9008001a90003008001
a9000101a9b21e321fbe012c00250401001f0126001e0401b61fe7312d1f
e531b80201b21fc227b80401b21fc11eb80201400f1fc01d9e1fbf1d671f
be1d671fab27b80401b21faa29b80401b61fa91d6c1f931eb8019ab21f92
1db80101b21f911db80101b21f751db80201b61f6d29961f6431b8019ab2
1f4c96b802abb21f391db80156400b1f3638211f351de41f2f27b8080140
0b1f2d1d4c1f2a31cd1f241db802abb21f201eb8012540111f1c1d931f3a
1d4c1f1e1d45273a1d4527bb01aa019b002a019bb2254a1fba019b002501
7ab349293896b8017bb348283125b8017a403648289629482725294c1f25
2946272729482756c80784075b07410732072b072807260721071b071408
120810080e080c080a08080807b801acb23f1f06bb01ab003f001f01abb3
08060805b801aeb23f1f04bb01ad003f001f01adb70804080208000814b8
ffe0b40000010014b801abb41000000100b801abb606100000010006b801
adb300000100b801ad401f04000001000410000001001002000001000200
000001000002010802004a00b0018db806008516763f183f123e11394644
3e113946443e113946443e113946443e113946443e11394660443e113946
60443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b
2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376706a664565234560
23456560234560b08b766818b080622020b16a704565234520b003266062
636820b003266165b070236544b06a234420b176664565234520b0032660
62636820b003266165b066236544b0762344b10066455458b166406544b2
7640764523614459b36242725d456523456023456560234560b089766818
b080622020b172424565234520b003266062636820b003266165b0422365
44b072234420b1625d4565234520b003266062636820b003266165b05d23
6544b0622344b1005d455458b15d406544b262406245236144592b2b2b2b
456953427374b8019a2045694b20b02853b049515a58b020615944b801a6
20456944750000>
[8065 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 4028 21 <00020060ffd504f605e5002f003000fe405e290f27232626360e35214726
62267a0e7724096b08180e172502590e680eaa22030a0e3a2224220a0304
1c1886142f2f2b1c3a1403043a2b0930020a0e081124221f283030111825
17490825281a321f25114900252f193132a0216a89182b2b4ef44dedf4ed
4e10f64dedf4ed12392f1211393912113939003f3fed3fed12392f10ed11
1217392efd335d7131304379404d282e111f0008022602262d2506251a26
032c002b002d2e032c002b00052a082b011d131f2b001b15182b01191801
2d042b0009270b2b01250b012e042b000729042b001e121c2b0119161c2b
01002b2b2b2b10102b2b01103c2b2b2b2b103c2b2b2b2b2b2b818181005d
0116171633323736353427262f0126272635342433320415232627262322
06151417161f01161716151404232027263701011e073463fa705cb24b4c
a2c7c3518c0112fbe70143bb0f315bdab09a5a3bd0ce95518cfe9debfeee
9b9b03024d01da7d4e92203ea0783332252d2c355cb7c6fedff5763f7394
626c3220302f223b67c4f4d28c8bee040b00>IRRAAA+Helvetica AddT42Char 
1 3752 20 <000200b40000057805bd0009002700944012070d49014805590158056905
641478050816bb01300119001b011c40422321202660127112751403121e
1f141c1503211e161404261224251e0009091b071e0b02261c1b08202515
1f251603310f691b1a29082625270a192829d6219566182b2b4ef43c4dfd
3c4e10f64df4edd4edd4ed003f3c3c3ffd12392f3cfd3c39111739011112
39391239395d1112392b3130015d01323635342726232111032132171615
1406071e011f011617161715232e012f012627262321112303478ca3723d
66fe1ac702a8a86dcf6d6256570507030b122ef40a0c040c0764397afe3b
c7031c70929d391efe0a02a1315efd84a833237280c55429461421133c56
f590311bfd8a>IRRAAA+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g21 21 def
/g20 20 def
end
IRRAAA+Helvetica /Encoding get
dup 33 /g21 put
dup 34 /g20 put
pop
end
%ADOEndSubsetFont
/YJZMBW+Helvetica /IRRAAA+Helvetica findfont ct_VMDictPut
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 221{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
543.7 633.15 mo
(!")
[6.6701 0 ]xsh
589.2 621.067 mo
589.2 617.567 li
589.2 347.15 mo
589.2 350.567 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 3208 18 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>IRRAAA+Helvetica AddT42Char 
1 3380 19 <00020050ff8b05e805e50015002700e4406b69036a1579038513961bc71b
064a1c591b5a1c64157515781cb719c81a083808181b021b191901151a1b
1a1a1a0001190100191e121a1a00191a191a1b18150206240001111e1500
02050d191a1b18042127213a0d03273a0105091e31111a29243109192829
d8216a66182b2b4ef44ded4e10f64ded003f33ed3fed1112173911123939
39011112393912173908872e2b087d10c50187102b3c2b3c87102bc42b3c
313018437940281f2606100b260f250725220c243200200e1e3201260624
3200230a2132011f102132012508273200002b2b2b012b2b2b2b2b2b8181
015d005d2507270e01232027261110371221201716111407060704363727
371736123510002322001110002105dc64e352bf71feaac2ab94be017401
85bb9223357efe576c28a164c05b41fef1ebeefeea010b01020479ad2d36
e0da0148012ad40110fac3fed08e83c87e1a11197e7b9568010276010301
3cfed1fec5fef7fec6000000>IRRAAA+Helvetica AddT42Char 
1 2188 12 <000100af000004aa05bd000900394018071e040409031e0100020908066b
011a0b03082500190a0bb80157b32195dc182b2b4ef44dfd3c4e10f64de4
003f3f3ced12392ffd313013211521112115211123af03fbfccc02d1fd2f
c705bdb4fe42affd6400>IRRAAA+Helvetica AddT42Char 
1 4436 22 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g18 18 def
/g19 19 def
/g12 12 def
/g22 22 def
end
IRRAAA+Helvetica /Encoding get
dup 35 /g18 put
dup 36 /g19 put
dup 37 /g12 put
dup 38 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 217{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
575.867 633.15 mo
(#$%&)
[6.67004 7.78003 6.10992 0 ]xsh
627.784 621.067 mo
627.784 617.567 li
627.784 347.15 mo
627.784 350.567 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 1992 11 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>IRRAAA+Helvetica AddT42Char 
1 2784 16 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g11 11 def
/g16 16 def
end
IRRAAA+Helvetica /Encoding get
dup 39 /g11 put
dup 40 /g16 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 215{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
614.2 633.15 mo
(#%'\()
[6.6701 6.10992 7.21997 0 ]xsh
666.367 621.067 mo
666.367 617.567 li
666.367 347.15 mo
666.367 350.567 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 2736 15 <000100c90000019205bd00030017b8002b2bba00010000002e2b00b80000
2fb800022f303113331123c9c9c905bdfa43>IRRAAA+Helvetica AddT42Char 
1 2288 13 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g15 15 def
/g13 13 def
end
IRRAAA+Helvetica /Encoding get
dup 41 /g15 put
dup 42 /g13 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 213{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
657.784 633.15 mo
(!\)*)
[6.67004 2.78003 0 ]xsh
704.95 621.067 mo
704.95 617.567 li
704.95 347.15 mo
704.95 350.567 li
@
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
698.867 633.15 mo
(%&)
[6.10992 0 ]xsh
743.534 621.067 mo
743.534 617.567 li
743.534 347.15 mo
743.534 350.567 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 4528 23 <000100250000077105bd000c0156409508090178077909780b8701860405
47014b02440348044d08420a8908870ac802c703c707c80b0c580b670768
0b890286038607890b9902960395079a0ba902a603a507aa0b0f0808070a
080b1908160a5707060b08040a023e284528052506060700250c0c0b0904
01030b020305060c050002080a0b0307080e17171a0705068640080304f4
0a0209f4800b0001860c190d8e5e182b194e10f4184dfd39391afd3939fd
39391afd3939194e456544e618003f173c3f173c12173901874d2eed872e
ed4b5279b4090a09080ab8019a400f120101020405030406070908090a08
b8019a400a12040403010102000c0b877d1008c5872e18052b087d10c587
0810c5872e18052b087d10c54b5179b301010002b8019ab6090a09040405
03b8019a400f090908040503040607010001020c0b870810c0870810c087
10057afd1808c4188710057afd7d08c4313001725d5d71005d7213090133
090133012309012301fd0115014cd8014c0115dafe7ed1feadfeabd1fe80
05bdfb5504abfb5504abfa4304c2fb3e05bd>IRRAAA+Helvetica AddT42Char 
1 4936 24 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>IRRAAA+Helvetica AddT42Char 
1 7764 36 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>IRRAAA+Helvetica AddT42Char 
1 5600 26 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>IRRAAA+Helvetica AddT42Char 
1 6096 28 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>IRRAAA+Helvetica AddT42Char 
1 7424 34 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g23 23 def
/g24 24 def
/g36 36 def
/g26 26 def
/g28 28 def
/g34 34 def
end
IRRAAA+Helvetica /Encoding get
dup 43 /g23 put
dup 44 /g24 put
dup 45 /g36 put
dup 46 /g26 put
dup 47 /g28 put
dup 48 /g34 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 207{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
725.951 633.15 mo
(+,-./.0)
[9.44 5.56 5 5.56 2.21997 5.56 0 ]xsh
782.117 621.067 mo
782.117 617.567 li
782.117 347.15 mo
782.117 350.567 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 2624 14 <000100a10000052f05bd000b003f402108091e0302020401020a07080407
2506051a0d010a250b00190c0c0da0217670182b2b104ef43c4dfd3c4e10
f63c4dfd3c003f3c3f3c392f3cfd3c3130133311211133112311211123a1
c902fcc9c9fd04c905bdfda1025ffa4302affd510000>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g14 14 def
end
IRRAAA+Helvetica /Encoding get
dup 49 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 206{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
772.451 633.15 mo
(1%&)
[7.21997 6.10992 0 ]xsh
820.7 621.067 mo
820.7 617.567 li
820.7 347.15 mo
820.7 350.567 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 2956 17 <00030050ffd505e805e5000f001b001c008a402c8705c700c701c302c808
c90a064308153a0f031b3a07091c021c1c0b1231031a1e18310b191d1ed8
216a66182b2b4ef44ded4e10f64ded12392f003f3fed3fed313043794032
001a0d26012509250526160e18320014001232011a081832001006123201
170c1532011302153201190a1b320011041b32002b2b2b2b012b2b2b2b2b
2b2b2b81005d001716111007022120272611103712210012351000232200
1114122103049bbb92a7c4fe95feadc2ad94be0174011bebfef1ebe4fee0
f701150e05e5fac3fed0feb7daff00e0d8014a012ad40110faa20179f501
03013cfec7fecff4feb1055e>IRRAAA+Helvetica AddT42Char 
1 7584 35 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>IRRAAA+Helvetica AddT42Char 
1 6836 32 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>IRRAAA+Helvetica AddT42Char 
1 6976 33 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g17 17 def
/g35 35 def
/g32 32 def
/g33 33 def
end
IRRAAA+Helvetica /Encoding get
dup 50 /g17 put
dup 51 /g35 put
dup 52 /g32 put
dup 53 /g33 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 202{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
809.867 633.15 mo
(2345)
[7.77997 5.56 3.32996 0 ]xsh
512.117 621.067 mo
515.534 621.067 li
859.284 621.067 mo
855.784 621.067 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 172 3 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g3 3 def
end
IRRAAA+Helvetica /Encoding get
dup 54 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 201{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
503.7 624.734 mo
(6)sh
512.117 581.9 mo
515.534 581.9 li
859.284 581.9 mo
855.784 581.9 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 108 2 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>IRRAAA+Helvetica AddT42Char 
1 392 4 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g2 2 def
/g4 4 def
end
IRRAAA+Helvetica /Encoding get
dup 55 /g2 put
dup 56 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 199{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
495.367 585.567 mo
(678)
[5.56 2.78 0 ]xsh
512.117 542.733 mo
515.534 542.733 li
859.284 542.733 mo
855.784 542.733 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 468 5 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g5 5 def
end
IRRAAA+Helvetica /Encoding get
dup 57 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 198{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
495.367 546.4 mo
(679)
[5.56 2.78 0 ]xsh
512.117 503.65 mo
515.534 503.65 li
859.284 503.65 mo
855.784 503.65 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 748 6 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g6 6 def
end
IRRAAA+Helvetica /Encoding get
dup 58 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 197{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
495.367 507.317 mo
(67:)
[5.56 2.78 0 ]xsh
512.117 464.483 mo
515.534 464.483 li
859.284 464.483 mo
855.784 464.483 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 1092 7 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g7 7 def
end
IRRAAA+Helvetica /Encoding get
dup 59 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 196{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
495.367 468.15 mo
(67;)
[5.56 2.78 0 ]xsh
512.117 425.4 mo
515.534 425.4 li
859.284 425.4 mo
855.784 425.4 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 1248 8 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g8 8 def
end
IRRAAA+Helvetica /Encoding get
dup 60 /g8 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 195{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
495.367 429.067 mo
(67<)
[5.56 2.78 0 ]xsh
512.117 386.233 mo
515.534 386.233 li
859.284 386.233 mo
855.784 386.233 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 1544 9 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g9 9 def
end
IRRAAA+Helvetica /Encoding get
dup 61 /g9 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 194{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
495.367 389.9 mo
(67=)
[5.56 2.78 0 ]xsh
512.117 347.15 mo
515.534 347.15 li
859.284 347.15 mo
855.784 347.15 li
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 1844 10 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g10 10 def
end
IRRAAA+Helvetica /Encoding get
dup 62 /g10 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 193{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
495.367 350.817 mo
(67>)
[5.56 2.78 0 ]xsh
512.117 621.067 mo
859.284 621.067 li
512.117 347.15 mo
859.284 347.15 li
512.117 621.067 mo
512.117 347.15 li
859.284 621.067 mo
859.284 347.15 li
@
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
538.617 436.9 mo
545.534 436.9 li
545.534 621.067 li
538.617 621.067 li
cp
1 .972106 .102541 .117464 cmyk
f
538.617 621.067 mo
538.617 436.9 li
545.534 436.9 li
545.534 621.067 li
538.617 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
577.2 431.15 mo
584.117 431.15 li
584.117 621.067 li
577.2 621.067 li
cp
1 .972106 .102541 .117464 cmyk
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
577.2 621.067 mo
577.2 431.15 li
584.117 431.15 li
584.117 621.067 li
577.2 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
615.784 397.817 mo
622.617 397.817 li
622.617 621.067 li
615.784 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
615.784 621.067 mo
615.784 397.817 li
622.617 397.817 li
622.617 621.067 li
615.784 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
654.367 420.567 mo
661.2 420.567 li
661.2 621.067 li
654.367 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
654.367 621.067 mo
654.367 420.567 li
661.2 420.567 li
661.2 621.067 li
654.367 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
692.95 443.15 mo
699.783 443.15 li
699.783 621.067 li
692.95 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
692.95 621.067 mo
692.95 443.15 li
699.784 443.15 li
699.784 621.067 li
692.95 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
731.534 397.233 mo
738.367 397.233 li
738.367 621.066 li
731.534 621.066 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
731.534 621.067 mo
731.534 397.233 li
738.367 397.233 li
738.367 621.067 li
731.534 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
770.117 399.317 mo
776.95 399.317 li
776.95 621.067 li
770.117 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
770.117 621.067 mo
770.117 399.317 li
776.95 399.317 li
776.95 621.067 li
770.117 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
808.7 381.567 mo
815.533 381.567 li
815.533 621.067 li
808.7 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
808.7 621.067 mo
808.7 381.567 li
815.534 381.567 li
815.534 621.067 li
808.7 621.067 li
512.117 621.067 mo
859.284 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
547.2 510.317 mo
554.117 510.317 li
554.117 621.067 li
547.2 621.067 li
cp
.406867 0 .821653 0 cmyk
f
547.2 621.067 mo
547.2 510.317 li
554.117 510.317 li
554.117 621.067 li
547.2 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
585.784 507.9 mo
592.617 507.9 li
592.617 621.067 li
585.784 621.067 li
cp
.406867 0 .821653 0 cmyk
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
585.784 621.067 mo
585.784 507.9 li
592.617 507.9 li
592.617 621.067 li
585.784 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
624.367 503.567 mo
631.2 503.567 li
631.2 621.067 li
624.367 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
624.367 621.067 mo
624.367 503.567 li
631.2 503.567 li
631.2 621.067 li
624.367 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
662.95 530.9 mo
669.783 530.9 li
669.783 621.067 li
662.95 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
662.95 621.067 mo
662.95 530.9 li
669.784 530.9 li
669.784 621.067 li
662.95 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
701.534 511.067 mo
708.367 511.067 li
708.367 621.067 li
701.534 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
701.534 621.067 mo
701.534 511.067 li
708.367 511.067 li
708.367 621.067 li
701.534 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
740.117 524.233 mo
746.95 524.233 li
746.95 621.066 li
740.117 621.066 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
740.117 621.067 mo
740.117 524.233 li
746.95 524.233 li
746.95 621.067 li
740.117 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
778.7 480.4 mo
785.533 480.4 li
785.533 621.067 li
778.7 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
778.7 621.067 mo
778.7 480.4 li
785.534 480.4 li
785.534 621.067 li
778.7 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
817.2 459.15 mo
824.117 459.15 li
824.117 621.067 li
817.2 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
817.2 621.067 mo
817.2 459.15 li
824.117 459.15 li
824.117 621.067 li
817.2 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
555.784 481.733 mo
562.617 481.733 li
562.617 621.066 li
555.784 621.066 li
cp
.290196 1 1 .385595 cmyk
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
555.784 621.067 mo
555.784 481.733 li
562.617 481.733 li
562.617 621.067 li
555.784 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
594.367 475.4 mo
601.2 475.4 li
601.2 621.067 li
594.367 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
594.367 621.067 mo
594.367 475.4 li
601.2 475.4 li
601.2 621.067 li
594.367 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
632.95 464.817 mo
639.783 464.817 li
639.783 621.067 li
632.95 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
632.95 621.067 mo
632.95 464.817 li
639.784 464.817 li
639.784 621.067 li
632.95 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
671.534 493.317 mo
678.367 493.317 li
678.367 621.067 li
671.534 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
671.534 621.067 mo
671.534 493.317 li
678.367 493.317 li
678.367 621.067 li
671.534 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
710.117 481.067 mo
716.95 481.067 li
716.95 621.067 li
710.117 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
710.117 621.067 mo
710.117 481.067 li
716.95 481.067 li
716.95 621.067 li
710.117 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
748.7 476.15 mo
755.533 476.15 li
755.533 621.067 li
748.7 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
748.7 621.067 mo
748.7 476.15 li
755.534 476.15 li
755.534 621.067 li
748.7 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
787.2 447.15 mo
794.117 447.15 li
794.117 621.067 li
787.2 621.067 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
787.2 621.067 mo
787.2 447.15 li
794.117 447.15 li
794.117 621.067 li
787.2 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
825.784 427.483 mo
832.701 427.483 li
832.701 621.066 li
825.784 621.066 li
cp
f
gsave
512.117 621.15 mo
859.367 621.15 li
859.367 347.15 li
512.117 347.15 li
cp
clp
825.784 621.067 mo
825.784 427.483 li
832.7 427.483 li
832.7 621.067 li
825.784 621.067 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if

1 0 1 <> IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g1 1 def
end
IRRAAA+Helvetica /Encoding get
dup 63 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 /g1 
192{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
510.7 624.65 mo
(?)sh
857.951 350.65 mo
(?)sh
517.034 352.15 mo
610.117 352.15 li
610.117 392.15 li
517.034 392.15 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
517.034 392.15 mo
517.034 352.15 li
610.117 352.15 li
610.117 392.15 li
517.034 392.15 li
@
517.034 392.15 mo
610.117 392.15 li
517.034 352.15 mo
610.117 352.15 li
517.034 392.15 mo
517.034 352.15 li
610.117 392.15 mo
610.117 352.15 li
517.034 392.15 mo
610.117 392.15 li
517.034 392.15 mo
517.034 352.15 li
517.034 392.15 mo
610.117 392.15 li
517.034 352.15 mo
610.117 352.15 li
517.034 392.15 mo
517.034 352.15 li
610.117 392.15 mo
610.117 352.15 li
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 5340 25 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>IRRAAA+Helvetica AddT42Char 
1 6004 27 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>IRRAAA+Helvetica AddT42Char 
1 6596 31 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>IRRAAA+Helvetica AddT42Char 
1 6412 30 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g25 25 def
/g27 27 def
/g31 31 def
/g30 30 def
end
IRRAAA+Helvetica /Encoding get
dup 64 /g25 put
dup 65 /g27 put
dup 66 /g31 put
dup 67 /g30 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 /g1 
/g25 /g27 /g31 /g30 188{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
557.034 363.317 mo
(#4.)sh
572.594 363.317 mo
(@A5ABC)
[5 2.21997 5 2.22003 5.56 0 ]xsh
523.117 355.233 mo
553.867 355.233 li
553.867 364.316 li
523.117 364.316 li
cp
1 .972106 .102541 .117464 cmyk
f
523.117 364.317 mo
523.117 355.233 li
553.867 355.233 li
553.867 364.317 li
523.117 364.317 li
1 /0 /CSD get_res sepcs
1 sep
@
0 0 0 1 cmyk
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
557.034 375.734 mo
(".@,//)
[7.21997 5.56 5 5.56 2.22003 0 ]xsh
523.117 367.567 mo
553.867 367.567 li
553.867 376.65 li
523.117 376.65 li
cp
.406867 0 .821653 0 cmyk
f
523.117 376.65 mo
523.117 367.567 li
553.867 367.567 li
553.867 376.65 li
523.117 376.65 li
1 /0 /CSD get_res sepcs
1 sep
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: IRRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IRRAAA+Helvetica gcheck setglobal} if
1 6164 29 <0001008400000625044700260085403b0708070e060f1708170e170f2708
270e270f4819560b670b0c23250a1a1d23190a02041725211d171d0d0607
00061b1c2503130a2817171a112914b80101b21a291db80101400a00012e
25292600192728b8010db3216242182b2b4ef43c4dfde410f4edf4fd4e45
6544e6003f173c3f3f3c4deded111217390111123912393130005d133315
36373633321716173e013332171615112311342623220615112311342726
23220615112384b240345971804e2c243ca265d84e2abb6b4d6a99b71a29
7066a7b4042f984f243d3f244656539c548efd3702e86b508ea6fd9102bb
6d324b9ecffdc800>IRRAAA+Helvetica AddT42Char 
IRRAAA+Helvetica /CharStrings get begin
/g29 29 def
end
IRRAAA+Helvetica /Encoding get
dup 68 /g29 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YJZMBW+Helvetica*1 
[33{/.notdef}rp /g21 /g20 /g18 /g19 /g12 /g22 /g11 
/g16 /g15 /g13 /g23 /g24 /g36 /g26 /g28 
/g34 /g14 /g17 /g35 /g32 /g33 /g3 /g2 
/g4 /g5 /g6 /g7 /g8 /g9 /g10 /g1 
/g25 /g27 /g31 /g30 /g29 187{/.notdef}rp]
YJZMBW+Helvetica nf
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
557.034 388.067 mo
(%)sh
%ADOBeginSubsetFont: RDHAAA+Helvetica-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (RDHAAA+Helvetica)
%%Title: (RDHAAA+Helvetica Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /RDHAAA+Helvetica def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-951 -481 1446 1122} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 2197 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7C
A97DB1343CA> |
239 <001C60D8A8C9B7F374C6243061E982D378A14DF0A305> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /RDHAAA+Helvetica-Identity-H /Identity-H 0 [/RDHAAA+Helvetica] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YJZMBX+Helvetica /RDHAAA+Helvetica-Identity-H findfont ct_VMDictPut
YJZMBX+Helvetica [10 0 0 -10 0 0 ]msf
563.142 388.067 mo
(\000\357)sh
YJZMBW+Helvetica*1 [10 0 0 -10 0 0 ]msf
568.982 388.067 mo
(D.,534.)
[8.3299 5.56 5.56 5 5.56 3.32996 0 ]xsh
523.117 379.9 mo
553.867 379.9 li
553.867 388.983 li
523.117 388.983 li
cp
.290196 1 1 .385595 cmyk
f
523.117 388.983 mo
523.117 379.9 li
553.867 379.9 li
553.867 388.983 li
523.117 388.983 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/YJZMBS+Helvetica*1 uf
/YJZMBS+Helvetica uf
/FXYAAA+Helvetica uf
/YJZMBV+Helvetica*1 uf
/YJZMBV+Helvetica uf
/FLEAAA+Helvetica uf
/YJZMBU+Helvetica-Identity-H uf
/YJZMBU+Helvetica /CIDFont ur
/YJZMBW+Helvetica*1 uf
/YJZMBW+Helvetica uf
/IRRAAA+Helvetica uf
/YJZMBT+Helvetica*1 uf
/YJZMBT+Helvetica uf
/DTOAAA+Helvetica uf
/YJZMBX+Helvetica-Identity-H uf
/YJZMBX+Helvetica /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
