%====================================
% 一维mallat快速分解算法的实现
% 函数：mallatm
% 输入：   x—待分解的一维信号
%         N—需要分解的级数
% 输出：   y—N级快速小波变换的结果
% 2009.9.21
%====================================

function y=mallatm(x,N)

lt=length(x);          %得到序列的长度
s=x;                   %建立中间变量
y=zeros(1,lt);         %初始化输出序列
h=[0.482962913145,0.836516303738,0.224143868042,-.129409522551]; % 得到低通滤波器
% h=wfilters('db2','l');                    %得到低通滤波器
% g=wfilters('db2','h');                    %得到高通滤波器

%进行N级分解
for i=1:N              
    hn=[h,zeros(1,(length(s)-length(h)))];  %利用圆周卷积进行处理，故滤波器长度要待处理信号长度一致 
    gn=[h(1,2),-h(1,1),zeros(1,(length(s)-length(h))),h(1,4),-h(1,3)]; 
%   gn=[g,zeros(1,(length(s)-length(g)))];
    c=ifft(fft(s).*fft(hn));                %利用快速FFt实现圆周卷积，使用圆周卷积相当于对原始信号进行了周期延拓，减小滤波器滤波的边缘效应
    d=ifft(fft(s).*fft(gn));
    temc=c(2:2:length(c));                  %抽样
    temd=d(2:2:length(d));                  %抽样
    y(1,(lt/2^(i)+1):lt/2^(i-1))=temd;      %将差值分量存入输出序列
    s=temc;                                 %将平滑分量赋给中间变量，循环继续分解
end
y(1:lt/2^(N))=temc;                         %将最后一级的平滑分量存入输出序列



